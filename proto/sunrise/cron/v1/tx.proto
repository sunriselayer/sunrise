syntax = "proto3";
package sunrise.cron.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/cron/v1/params.proto";
import "sunrise/cron/v1/schedule.proto";

option go_package = "github.com/sunriselayer/sunrise/x/cron/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // Adds new schedule.
  rpc AddSchedule(MsgAddSchedule) returns (MsgAddScheduleResponse);
  // Removes schedule.
  rpc RemoveSchedule(MsgRemoveSchedule) returns (MsgRemoveScheduleResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sunrise/cron/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// The MsgAddSchedule request type.
message MsgAddSchedule {
  option (amino.name) = "sunrise/cron/MsgAddSchedule";
  option (cosmos.msg.v1.signer) = "authority";

  // The address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Name of the schedule
  string name = 2;
  // Period in blocks
  uint64 period = 3;
  // Msgs that will be executed every certain number of blocks, specified in the `period` field
  repeated MsgExecuteContract msgs = 4 [(gogoproto.nullable) = false];
  // Stage when messages will be executed
  ExecutionStage execution_stage = 5;
}

// Defines the response structure for executing a MsgAddSchedule message.
message MsgAddScheduleResponse {}

// The MsgRemoveSchedule request type.
message MsgRemoveSchedule {
  option (amino.name) = "sunrise/cron/MsgRemoveSchedule";
  option (cosmos.msg.v1.signer) = "authority";

  // The address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Name of the schedule
  string name = 2;
}

// Defines the response structure for executing a MsgRemoveSchedule message.
message MsgRemoveScheduleResponse {}

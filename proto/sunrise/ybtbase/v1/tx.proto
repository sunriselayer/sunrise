syntax = "proto3";

package sunrise.ybtbase.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/ybtbase/v1/params.proto";

option go_package = "github.com/sunriselayer/sunrise/x/ybtbase/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // Create defines the Create RPC.
  rpc Create(MsgCreate) returns (MsgCreateResponse);

  // Mint defines the Mint RPC.
  rpc Mint(MsgMint) returns (MsgMintResponse);

  // Burn defines the Burn RPC.
  rpc Burn(MsgBurn) returns (MsgBurnResponse);

  // AddYield defines the AddYield RPC.
  rpc AddYield(MsgAddYield) returns (MsgAddYieldResponse);

  // GrantYieldPermission defines the GrantYieldPermission RPC.
  rpc GrantYieldPermission(MsgGrantYieldPermission) returns (MsgGrantYieldPermissionResponse);

  // RevokeYieldPermission defines the RevokeYieldPermission RPC.
  rpc RevokeYieldPermission(MsgRevokeYieldPermission) returns (MsgRevokeYieldPermissionResponse);

  // ClaimYield defines the ClaimYield RPC.
  rpc ClaimYield(MsgClaimYield) returns (MsgClaimYieldResponse);

  // UpdateAdmin defines the UpdateAdmin RPC.
  rpc UpdateAdmin(MsgUpdateAdmin) returns (MsgUpdateAdminResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sunrise/x/ybtbase/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgCreate defines the MsgCreate message.
message MsgCreate {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string admin = 2;
  bool permissioned = 3;
}

// MsgCreateResponse defines the MsgCreateResponse message.
message MsgCreateResponse {}

// MsgMint defines the MsgMint message.
message MsgMint {
  option (cosmos.msg.v1.signer) = "admin";
  string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string token_creator = 2;
  int64 amount = 3;
}

// MsgMintResponse defines the MsgMintResponse message.
message MsgMintResponse {}

// MsgBurn defines the MsgBurn message.
message MsgBurn {
  option (cosmos.msg.v1.signer) = "admin";
  string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string token_creator = 2;
  int64 amount = 3;
}

// MsgBurnResponse defines the MsgBurnResponse message.
message MsgBurnResponse {}

// MsgAddYield defines the MsgAddYield message.
message MsgAddYield {
  option (cosmos.msg.v1.signer) = "admin";
  string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string token_creator = 2;
  int64 amount = 3;
}

// MsgAddYieldResponse defines the MsgAddYieldResponse message.
message MsgAddYieldResponse {}

// MsgGrantYieldPermission defines the MsgGrantYieldPermission message.
message MsgGrantYieldPermission {
  option (cosmos.msg.v1.signer) = "admin";
  string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string token_creator = 2;
  string target = 3;
}

// MsgGrantYieldPermissionResponse defines the MsgGrantYieldPermissionResponse message.
message MsgGrantYieldPermissionResponse {}

// MsgRevokeYieldPermission defines the MsgRevokeYieldPermission message.
message MsgRevokeYieldPermission {
  option (cosmos.msg.v1.signer) = "admin";
  string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string token_creator = 2;
  string target = 3;
}

// MsgRevokeYieldPermissionResponse defines the MsgRevokeYieldPermissionResponse message.
message MsgRevokeYieldPermissionResponse {}

// MsgClaimYield defines the MsgClaimYield message.
message MsgClaimYield {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string token_creator = 2;
}

// MsgClaimYieldResponse defines the MsgClaimYieldResponse message.
message MsgClaimYieldResponse {}

// MsgUpdateAdmin defines the MsgUpdateAdmin message.
message MsgUpdateAdmin {
  option (cosmos.msg.v1.signer) = "admin";
  string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string new_admin = 2;
}

// MsgUpdateAdminResponse defines the MsgUpdateAdminResponse message.
message MsgUpdateAdminResponse {}

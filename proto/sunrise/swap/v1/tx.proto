syntax = "proto3";
package sunrise.swap.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/swap/v1/params.proto";
import "sunrise/swap/v1/route.proto";
import "amino/amino.proto";

option go_package = "github.com/sunriselayer/sunrise/x/swap/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // SwapExactAmountIn
  rpc SwapExactAmountIn(MsgSwapExactAmountIn) returns (MsgSwapExactAmountInResponse);
  // SwapExactAmountOut
  rpc SwapExactAmountOut(MsgSwapExactAmountOut) returns (MsgSwapExactAmountOutResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sunrise/swap/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgSwapExactAmountIn
message MsgSwapExactAmountIn {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "sunrise/MsgSwapExactAmountIn";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string interface_provider = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Route route = 3 [(gogoproto.nullable) = false];
  string amount_in = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string min_amount_out = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// MsgSwapExactAmountInResponse
message MsgSwapExactAmountInResponse {
  RouteResult result = 1 [(gogoproto.nullable) = false];
  string interface_provider_fee = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string amount_out = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// MsgSwapExactAmountOut
message MsgSwapExactAmountOut {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "sunrise/MsgSwapExactAmountOut";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string interface_provider = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Route route = 3 [(gogoproto.nullable) = false];
  string max_amount_in = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string amount_out = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// MsgSwapExactAmountOutResponse
message MsgSwapExactAmountOutResponse {
  RouteResult result = 1 [(gogoproto.nullable) = false];
  string interface_provider_fee = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string amount_out = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

syntax = "proto3";
package sunrise.liquidityincentive.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "sunrise/liquidityincentive/v1/epoch.proto";
import "sunrise/liquidityincentive/v1/gauge.proto";
import "sunrise/liquidityincentive/v1/params.proto";
import "sunrise/liquidityincentive/v1/bribe.proto";

option go_package = "github.com/sunriselayer/sunrise/x/liquidityincentive/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/params";
  }

  // Epoch
  rpc Epoch(QueryEpochRequest) returns (QueryEpochResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/epochs/{id}";
  }
  // Epochs
  rpc Epochs(QueryEpochsRequest) returns (QueryEpochsResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/epochs";
  }

  // Gauge
  rpc Gauge(QueryGaugeRequest) returns (QueryGaugeResponse) {
    option (google.api.http).get =
      "/sunrise/liquidityincentive/v1/epochs/"
      "{previous_epoch_id}/gauges/{pool_id}";
  }
  // Gauges
  rpc Gauges(QueryGaugesRequest) returns (QueryGaugesResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/epochs/{previous_epoch_id}/gauges";
  }

  // Vote
  rpc Vote(QueryVoteRequest) returns (QueryVoteResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/votes/{address}";
  }
  // Votes
  rpc Votes(QueryVotesRequest) returns (QueryVotesResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/votes";
  }

  // Bribes
  rpc Bribes(QueryBribesRequest) returns (QueryBribesResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribes";
  }
  // Bribe
  rpc Bribe(QueryBribeRequest) returns (QueryBribeResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribes/{id}";
  }
  // BribesByEpochId
  rpc BribesByEpochId(QueryBribesByEpochIdRequest) returns (QueryBribesByEpochIdResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribes/epoch/{epoch_id}";
  }
  // BribesByPoolId
  rpc BribesByPoolId(QueryBribesByPoolIdRequest) returns (QueryBribesByPoolIdResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribes/pool/{pool_id}";
  }
  // BribesByEpochAndPoolId
  rpc BribesByEpochAndPoolId(QueryBribesByEpochAndPoolIdRequest) returns (QueryBribesByEpochAndPoolIdResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribes/epoch/{epoch_id}/pool/{pool_id}";
  }

  // BribeAllocations
  rpc BribeAllocations(QueryBribeAllocationsRequest) returns (QueryBribeAllocationsResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribe-allocations";
  }
  // BribeAllocationsByAddress
  rpc BribeAllocationsByAddress(QueryBribeAllocationsByAddressRequest) returns (QueryBribeAllocationsByAddressResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribe_allocations/{address}";
  }
  // BribeAllocation
  rpc BribeAllocation(QueryBribeAllocationRequest) returns (QueryBribeAllocationResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/v1/bribe-allocations/{address}/{epoch_id}/{pool_id}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryEpochRequest
message QueryEpochRequest {
  uint64 id = 1;
}

// QueryEpochResponse
message QueryEpochResponse {
  Epoch epoch = 1 [(gogoproto.nullable) = false];
}

// QueryEpochsRequest
message QueryEpochsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryEpochsResponse
message QueryEpochsResponse {
  repeated Epoch epochs = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryGaugeRequest
message QueryGaugeRequest {
  uint64 previous_epoch_id = 1;
  uint64 pool_id = 2;
}

// QueryGaugeResponse
message QueryGaugeResponse {
  Gauge gauge = 1 [(gogoproto.nullable) = false];
}

// QueryGaugesRequest
message QueryGaugesRequest {
  uint64 previous_epoch_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryGaugesResponse
message QueryGaugesResponse {
  repeated Gauge gauge = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryVoteRequest
message QueryVoteRequest {
  string address = 1;
}

// QueryVoteResponse
message QueryVoteResponse {
  Vote vote = 1 [(gogoproto.nullable) = false];
}

// QueryVotesRequest
message QueryVotesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryVotesResponse
message QueryVotesResponse {
  repeated Vote votes = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBribesRequest
message QueryBribesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryBribesResponse
message QueryBribesResponse {
  repeated Bribe bribes = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBribeRequest
message QueryBribeRequest {
  uint64 id = 1;
}

// QueryBribeResponse
message QueryBribeResponse {
  Bribe bribe = 1 [(gogoproto.nullable) = false];
}

// QueryBribesByEpochIdRequest
message QueryBribesByEpochIdRequest {
  uint64 epoch_id = 1;
}

// QueryBribesByEpochIdResponse
message QueryBribesByEpochIdResponse {
  repeated Bribe bribes = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBribesByPoolIdRequest
message QueryBribesByPoolIdRequest {
  uint64 pool_id = 1;
}

// QueryBribesByPoolIdResponse
message QueryBribesByPoolIdResponse {
  repeated Bribe bribes = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBribesByEpochAndPoolIdRequest
message QueryBribesByEpochAndPoolIdRequest {
  uint64 epoch_id = 1;
  uint64 pool_id = 2;
}

// QueryBribesByEpochAndPoolIdResponse
message QueryBribesByEpochAndPoolIdResponse {
  repeated Bribe bribes = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBribeAllocationsRequest
message QueryBribeAllocationsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}


// QueryBribeAllocationsResponse
message QueryBribeAllocationsResponse {
  repeated BribeAllocation bribe_allocations = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBribeAllocationsByAddressRequest
message QueryBribeAllocationsByAddressRequest {
  string address = 1;
}

// QueryBribeAllocationsByAddressResponse
message QueryBribeAllocationsByAddressResponse {
  repeated BribeAllocation bribe_allocations = 1 [(gogoproto.nullable) = false];
}

// QueryBribeAllocationRequest
message QueryBribeAllocationRequest {
  string address = 1;
  uint64 epoch_id = 2;
  uint64 pool_id = 3;
}

// QueryBribeAllocationResponse
message QueryBribeAllocationResponse {
  BribeAllocation bribe_allocation = 1 [(gogoproto.nullable) = false];
}

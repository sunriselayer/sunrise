syntax = "proto3";
package sunrise.da.v0;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/sunriselayer/sunrise/x/da/types";

// PublishedData
message PublishedData {
  string metadata_uri = 1;
  uint64 parity_shard_count = 2 [(amino.dont_omitempty) = true];
  repeated bytes shard_double_hashes = 3;
  google.protobuf.Timestamp timestamp = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  Status status = 5;
  string publisher = 6;
  string challenger = 7;
  repeated cosmos.base.v1beta1.Coin publish_data_collateral = 8 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  repeated cosmos.base.v1beta1.Coin submit_invalidity_collateral = 9 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  google.protobuf.Timestamp published_timestamp = 10 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  string data_source_info = 11;
  int64 verified_height = 12;
}

// PublishedDataStatus
enum Status {
  // Default value
  STATUS_UNSPECIFIED = 0;
  // Verified
  STATUS_VERIFIED = 1;
  // Rejected
  STATUS_REJECTED = 2;
  // Verified the votes from the validators. Challenge can be received (after preBlocker)
  STATUS_CHALLENGE_PERIOD = 3;
  // A certain number of SubmitInvalidity received. Validators can send SubmitValidityProof tx.
  STATUS_CHALLENGING = 4;
}

// Proof
message Proof {
  string metadata_uri = 1;
  string sender = 2;
  repeated int64 indices = 3;
  repeated bytes proofs = 4;
}

// Invalidity
message Invalidity {
  string metadata_uri = 1;
  string sender = 2;
  repeated int64 indices = 3;
}

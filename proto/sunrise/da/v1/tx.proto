syntax = "proto3";
package sunrise.da.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/da/v1/blob.proto";

option go_package = "github.com/sunriselayer/sunrise/x/da/types";

// MsgDeclareBlob
message MsgDeclareBlob {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Blob blob = 2 [(gogoproto.nullable) = false];
  // generated by SP1 zkVM with Groth16 wrapping
  bytes proof_shard_hashes = 3;
}

// MsgDeclareBlobResponse
message MsgDeclareBlobResponse {}

// MsgSubmitUnavailability
message MsgSubmitUnavailability {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  bytes blob_hash = 2;
  repeated uint32 shard_indices = 3;
}

// MsgSubmitUnavailabilityResponse
message MsgSubmitUnavailabilityResponse {}

// MsgSubmitAvailabilityProof
message MsgSubmitAvailabilityProof {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string validator_address = 2 [(cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  bytes blob_hash = 3;
  // generated by SP1 zkVM with Groth16 wrapping
  repeated ProofShardHash proof_shard_hashes = 4;
}

// ProofShardHash
message ProofShardHash {
  uint32 index = 1;
  bytes proof = 2;
}

// MsgSubmitAvailabilityProofResponse
message MsgSubmitAvailabilityProofResponse {}

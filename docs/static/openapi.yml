id: github.com/sunriselayer/sunrise
consumes:
  - application/json
produces:
  - application/json
swagger: "2.0"
info:
  description: Chain github.com/sunriselayer/sunrise REST API
  title: HTTP API Console
  contact:
    name: github.com/sunriselayer/sunrise
  version: version not set
paths:
  /cosmos.auth.v1beta1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the x/auth module
        parameters. The authority defaults to the x/gov module account.
      operationId: EvidenceMsg_UpdateParams
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.authz.v1beta1.Msg/Exec:
    post:
      tags:
        - Msg
      summary: |-
        Exec attempts to execute the provided messages using
        authorizations granted to the grantee. Each message should have only
        one signer corresponding to the granter of the authorization.
      operationId: EvidenceMsg_Exec
      parameters:
        - description: |-
            MsgExec attempts to execute the provided messages using
            authorizations granted to the grantee. Each message should have only
            one signer corresponding to the granter of the authorization.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.MsgExec'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.MsgExecResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.authz.v1beta1.Msg/Grant:
    post:
      tags:
        - Msg
      summary: |-
        Grant grants the provided authorization to the grantee on the granter's
        account with the provided expiration time. If there is already a grant
        for the given (granter, grantee, Authorization) triple, then the grant
        will be overwritten.
      operationId: EvidenceMsg_Grant
      parameters:
        - description: |-
            MsgGrant is a request type for Grant method. It declares authorization to the grantee
            on behalf of the granter with the provided expiration time.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.MsgGrant'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.MsgGrantResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.authz.v1beta1.Msg/Revoke:
    post:
      tags:
        - Msg
      summary: |-
        Revoke revokes any authorization corresponding to the provided method name on the
        granter's account that has been granted to the grantee.
      operationId: EvidenceMsg_Revoke
      parameters:
        - description: |-
            MsgRevoke revokes any authorization with the provided sdk.Msg type on the
            granter's account with that has been granted to the grantee.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.MsgRevoke'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.MsgRevokeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.autocli.v1.Query/AppOptions:
    post:
      tags:
        - Query
      summary: AppOptions returns the autocli options for all of the modules in an app.
      operationId: EvidenceQuery_AppOptions
      parameters:
        - description: AppOptionsRequest is the RemoteInfoService/AppOptions request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.autocli.v1.AppOptionsRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.autocli.v1.AppOptionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.bank.v1beta1.Msg/MultiSend:
    post:
      tags:
        - Msg
      summary: MultiSend defines a method for sending coins from some accounts to other accounts.
      operationId: EvidenceMsg_MultiSend
      parameters:
        - description: MsgMultiSend represents an arbitrary multi-in, multi-out send message.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgMultiSend'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgMultiSendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.bank.v1beta1.Msg/Send:
    post:
      tags:
        - Msg
      summary: Send defines a method for sending coins from one account to another account.
      operationId: EvidenceMsg_Send
      parameters:
        - description: MsgSend represents a message to send coins from one account to another.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgSend'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgSendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.bank.v1beta1.Msg/SetSendEnabled:
    post:
      tags:
        - Msg
      summary: |-
        SetSendEnabled is a governance operation for setting the SendEnabled flag
        on any number of Denoms. Only the entries to add or update should be
        included. Entries that already exist in the store, but that aren't
        included in this message, will be left unchanged.
      operationId: EvidenceMsg_SetSendEnabled
      parameters:
        - description: |-
            MsgSetSendEnabled is the Msg/SetSendEnabled request type.

            Only entries to add/update/delete need to be included.
            Existing SendEnabled entries that are not included in this
            message are left unchanged.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgSetSendEnabled'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgSetSendEnabledResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.bank.v1beta1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/bank module parameters.
        The authority is defined in the keeper.
      operationId: EvidenceMsg_UpdateParamsMixin68
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.benchmark.v1.Msg/LoadTest:
    post:
      tags:
        - Msg
      summary: LoadTest defines a method for executing a sequence of load test operations.
      operationId: EvidenceMsg_LoadTest
      parameters:
        - description: MsgLoadTestOps defines a message containing a sequence of load test operations.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.benchmark.v1.MsgLoadTest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.benchmark.v1.MsgLoadTestResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.circuit.v1.Msg/AuthorizeCircuitBreaker:
    post:
      tags:
        - Msg
      summary: |-
        AuthorizeCircuitBreaker allows a super-admin to grant (or revoke) another
        account's circuit breaker permissions.
      operationId: EvidenceMsg_AuthorizeCircuitBreaker
      parameters:
        - description: MsgAuthorizeCircuitBreaker defines the Msg/AuthorizeCircuitBreaker request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.MsgAuthorizeCircuitBreaker'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.MsgAuthorizeCircuitBreakerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.circuit.v1.Msg/ResetCircuitBreaker:
    post:
      tags:
        - Msg
      summary: |-
        ResetCircuitBreaker resumes processing of Msg's in the state machine that
        have been paused using TripCircuitBreaker.
      operationId: EvidenceMsg_ResetCircuitBreaker
      parameters:
        - description: MsgResetCircuitBreaker defines the Msg/ResetCircuitBreaker request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.MsgResetCircuitBreaker'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.MsgResetCircuitBreakerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.circuit.v1.Msg/TripCircuitBreaker:
    post:
      tags:
        - Msg
      summary: TripCircuitBreaker pauses processing of Msg's in the state machine.
      operationId: EvidenceMsg_TripCircuitBreaker
      parameters:
        - description: MsgTripCircuitBreaker defines the Msg/TripCircuitBreaker request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.MsgTripCircuitBreaker'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.MsgTripCircuitBreakerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.consensus.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/consensus module parameters.
        The authority is defined in the keeper.
      operationId: EvidenceMsg_UpdateParamsMixin83
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.consensus.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.consensus.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.counter.v1.Msg/IncreaseCount:
    post:
      tags:
        - Msg
      summary: IncreaseCount increments the counter by the specified amount.
      operationId: EvidenceMsg_IncreaseCount
      parameters:
        - description: MsgIncreaseCounter defines a count Msg service counter.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.counter.v1.MsgIncreaseCounter'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.counter.v1.MsgIncreaseCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.counter.v1.Query/GetCount:
    post:
      tags:
        - Query
      summary: GetCount queries the parameters of x/Counter module.
      operationId: EvidenceQuery_GetCount
      parameters:
        - description: QueryGetCountRequest defines the request type for querying x/mock count.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.counter.v1.QueryGetCountRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.counter.v1.QueryGetCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.crisis.v1beta1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/crisis module
        parameters. The authority is defined in the keeper.
      operationId: EvidenceMsg_UpdateParamsMixin87
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.crisis.v1beta1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.crisis.v1beta1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.crisis.v1beta1.Msg/VerifyInvariant:
    post:
      tags:
        - Msg
      summary: VerifyInvariant defines a method to verify a particular invariant.
      operationId: EvidenceMsg_VerifyInvariant
      parameters:
        - description: MsgVerifyInvariant represents a message to verify a particular invariance.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.crisis.v1beta1.MsgVerifyInvariant'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.crisis.v1beta1.MsgVerifyInvariantResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.distribution.v1beta1.Msg/CommunityPoolSpend:
    post:
      description: 'WARNING: This method will fail if an external community pool is used.'
      tags:
        - Msg
      summary: |-
        CommunityPoolSpend defines a governance operation for sending tokens from
        the community pool in the x/distribution module to another account, which
        could be the governance module itself. The authority is defined in the
        keeper.
      operationId: EvidenceMsg_CommunityPoolSpend
      parameters:
        - description: |-
            MsgCommunityPoolSpend defines a message for sending tokens from the community
            pool to another account. This message is typically executed via a governance
            proposal with the governance module being the executing authority.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgCommunityPoolSpend'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.distribution.v1beta1.Msg/DepositValidatorRewardsPool:
    post:
      tags:
        - Msg
      summary: |-
        DepositValidatorRewardsPool defines a method to provide additional rewards
        to delegators to a specific validator.
      operationId: EvidenceMsg_DepositValidatorRewardsPool
      parameters:
        - description: |-
            DepositValidatorRewardsPool defines the request structure to provide
            additional rewards to delegators from a specific validator.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.distribution.v1beta1.Msg/FundCommunityPool:
    post:
      description: 'WARNING: This method will fail if an external community pool is used.'
      tags:
        - Msg
      summary: |-
        FundCommunityPool defines a method to allow an account to directly
        fund the community pool.
      operationId: EvidenceMsg_FundCommunityPool
      parameters:
        - description: |-
            MsgFundCommunityPool allows an account to directly
            fund the community pool.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgFundCommunityPool'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.distribution.v1beta1.Msg/SetWithdrawAddress:
    post:
      tags:
        - Msg
      summary: |-
        SetWithdrawAddress defines a method to change the withdraw address
        for a delegator (or validator self-delegation).
      operationId: EvidenceMsg_SetWithdrawAddress
      parameters:
        - description: |-
            MsgSetWithdrawAddress sets the withdraw address for
            a delegator (or validator self-delegation).
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgSetWithdrawAddress'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.distribution.v1beta1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/distribution
        module parameters. The authority is defined in the keeper.
      operationId: EvidenceMsg_UpdateParamsMixin98
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.distribution.v1beta1.Msg/WithdrawDelegatorReward:
    post:
      tags:
        - Msg
      summary: |-
        WithdrawDelegatorReward defines a method to withdraw rewards of delegator
        from a single validator.
      operationId: EvidenceMsg_WithdrawDelegatorReward
      parameters:
        - description: |-
            MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
            from a single validator.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.distribution.v1beta1.Msg/WithdrawValidatorCommission:
    post:
      tags:
        - Msg
      summary: |-
        WithdrawValidatorCommission defines a method to withdraw the
        full commission to the validator address.
      operationId: EvidenceMsg_WithdrawValidatorCommission
      parameters:
        - description: |-
            MsgWithdrawValidatorCommission withdraws the full commission to the validator
            address.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.evidence.v1beta1.Msg/SubmitEvidence:
    post:
      tags:
        - Msg
      summary: |-
        SubmitEvidence submits an arbitrary Evidence of misbehavior such as equivocation or
        counterfactual signing.
      operationId: EvidenceMsg_SubmitEvidence
      parameters:
        - description: |-
            MsgSubmitEvidence represents a message that supports submitting arbitrary
            Evidence of misbehavior such as equivocation or counterfactual signing.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.evidence.v1beta1.MsgSubmitEvidence'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.feegrant.v1beta1.Msg/GrantAllowance:
    post:
      tags:
        - Msg
      summary: |-
        GrantAllowance grants fee allowance to the grantee on the granter's
        account with the provided expiration time.
      operationId: EvidenceMsg_GrantAllowance
      parameters:
        - description: |-
            MsgGrantAllowance adds permission for Grantee to spend up to Allowance
            of fees from the account of Granter.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgGrantAllowance'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.feegrant.v1beta1.Msg/PruneAllowances:
    post:
      tags:
        - Msg
      summary: PruneAllowances prunes expired fee allowances, currently up to 75 at a time.
      operationId: EvidenceMsg_PruneAllowances
      parameters:
        - description: MsgPruneAllowances prunes expired fee allowances.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgPruneAllowances'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.feegrant.v1beta1.Msg/RevokeAllowance:
    post:
      tags:
        - Msg
      summary: |-
        RevokeAllowance revokes any fee allowance of granter's account that
        has been granted to the grantee.
      operationId: EvidenceMsg_RevokeAllowance
      parameters:
        - description: MsgRevokeAllowance removes any existing Allowance from Granter to Grantee.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgRevokeAllowance'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1.Msg/CancelProposal:
    post:
      tags:
        - Msg
      summary: CancelProposal defines a method to cancel governance proposal
      operationId: EvidenceMsg_CancelProposal
      parameters:
        - description: MsgCancelProposal is the Msg/CancelProposal request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgCancelProposal'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgCancelProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1.Msg/Deposit:
    post:
      tags:
        - Msg
      summary: Deposit defines a method to add deposit on a specific proposal.
      operationId: EvidenceMsg_Deposit
      parameters:
        - description: MsgDeposit defines a message to submit a deposit to an existing proposal.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgDeposit'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgDepositResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1.Msg/ExecLegacyContent:
    post:
      tags:
        - Msg
      summary: |-
        ExecLegacyContent defines a Msg to be in included in a MsgSubmitProposal
        to execute a legacy content-based proposal.
      operationId: EvidenceMsg_ExecLegacyContent
      parameters:
        - description: |-
            MsgExecLegacyContent is used to wrap the legacy content field into a message.
            This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgExecLegacyContent'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgExecLegacyContentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1.Msg/SubmitProposal:
    post:
      tags:
        - Msg
      summary: SubmitProposal defines a method to create new proposal given the messages.
      operationId: EvidenceMsg_SubmitProposal
      parameters:
        - description: |-
            MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
            proposal Content.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgSubmitProposal'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgSubmitProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/gov module
        parameters. The authority is defined in the keeper.
      operationId: EvidenceMsg_UpdateParamsMixin114
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1.Msg/Vote:
    post:
      tags:
        - Msg
      summary: Vote defines a method to add a vote on a specific proposal.
      operationId: EvidenceMsg_Vote
      parameters:
        - description: MsgVote defines a message to cast a vote.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgVote'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1.Msg/VoteWeighted:
    post:
      tags:
        - Msg
      summary: VoteWeighted defines a method to add a weighted vote on a specific proposal.
      operationId: EvidenceMsg_VoteWeighted
      parameters:
        - description: MsgVoteWeighted defines a message to cast a vote.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgVoteWeighted'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.MsgVoteWeightedResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1beta1.Msg/Deposit:
    post:
      tags:
        - Msg
      summary: Deposit defines a method to add deposit on a specific proposal.
      operationId: EvidenceMsg_DepositMixin118
      parameters:
        - description: MsgDeposit defines a message to submit a deposit to an existing proposal.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgDeposit'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgDepositResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1beta1.Msg/SubmitProposal:
    post:
      tags:
        - Msg
      summary: SubmitProposal defines a method to create new proposal given a content.
      operationId: EvidenceMsg_SubmitProposalMixin118
      parameters:
        - description: |-
            MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
            proposal Content.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgSubmitProposal'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgSubmitProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1beta1.Msg/Vote:
    post:
      tags:
        - Msg
      summary: Vote defines a method to add a vote on a specific proposal.
      operationId: EvidenceMsg_VoteMixin118
      parameters:
        - description: MsgVote defines a message to cast a vote.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgVote'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.gov.v1beta1.Msg/VoteWeighted:
    post:
      tags:
        - Msg
      summary: VoteWeighted defines a method to add a weighted vote on a specific proposal.
      operationId: EvidenceMsg_VoteWeightedMixin118
      parameters:
        - description: MsgVoteWeighted defines a message to cast a vote.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgVoteWeighted'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.MsgVoteWeightedResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/CreateGroup:
    post:
      tags:
        - Msg
      summary: CreateGroup creates a new group with an admin account address, a list of members and some optional metadata.
      operationId: EvidenceMsg_CreateGroup
      parameters:
        - description: MsgCreateGroup is the Msg/CreateGroup request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgCreateGroup'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/CreateGroupPolicy:
    post:
      tags:
        - Msg
      summary: CreateGroupPolicy creates a new group policy using given DecisionPolicy.
      operationId: EvidenceMsg_CreateGroupPolicy
      parameters:
        - description: MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupPolicy'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupPolicyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/CreateGroupWithPolicy:
    post:
      tags:
        - Msg
      summary: CreateGroupWithPolicy creates a new group with policy.
      operationId: EvidenceMsg_CreateGroupWithPolicy
      parameters:
        - description: MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupWithPolicy'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgCreateGroupWithPolicyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/Exec:
    post:
      tags:
        - Msg
      summary: Exec executes a proposal.
      operationId: EvidenceMsg_ExecMixin122
      parameters:
        - description: MsgExec is the Msg/Exec request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgExec'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgExecResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/LeaveGroup:
    post:
      tags:
        - Msg
      summary: LeaveGroup allows a group member to leave the group.
      operationId: EvidenceMsg_LeaveGroup
      parameters:
        - description: MsgLeaveGroup is the Msg/LeaveGroup request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgLeaveGroup'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgLeaveGroupResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/SubmitProposal:
    post:
      tags:
        - Msg
      summary: SubmitProposal submits a new proposal.
      operationId: EvidenceMsg_SubmitProposalMixin122
      parameters:
        - description: MsgSubmitProposal is the Msg/SubmitProposal request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgSubmitProposal'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgSubmitProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/UpdateGroupAdmin:
    post:
      tags:
        - Msg
      summary: UpdateGroupAdmin updates the group admin with given group id and previous admin address.
      operationId: EvidenceMsg_UpdateGroupAdmin
      parameters:
        - description: MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupAdmin'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/UpdateGroupMembers:
    post:
      tags:
        - Msg
      summary: UpdateGroupMembers updates the group members with given group id and admin address.
      operationId: EvidenceMsg_UpdateGroupMembers
      parameters:
        - description: MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMembers'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMembersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/UpdateGroupMetadata:
    post:
      tags:
        - Msg
      summary: UpdateGroupMetadata updates the group metadata with given group id and admin address.
      operationId: EvidenceMsg_UpdateGroupMetadata
      parameters:
        - description: MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMetadata'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupMetadataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/UpdateGroupPolicyAdmin:
    post:
      tags:
        - Msg
      summary: UpdateGroupPolicyAdmin updates a group policy admin.
      operationId: EvidenceMsg_UpdateGroupPolicyAdmin
      parameters:
        - description: MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyAdmin'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/UpdateGroupPolicyDecisionPolicy:
    post:
      tags:
        - Msg
      summary: UpdateGroupPolicyDecisionPolicy allows a group policy's decision policy to be updated.
      operationId: EvidenceMsg_UpdateGroupPolicyDecisionPolicy
      parameters:
        - description: MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/UpdateGroupPolicyMetadata:
    post:
      tags:
        - Msg
      summary: UpdateGroupPolicyMetadata updates a group policy metadata.
      operationId: EvidenceMsg_UpdateGroupPolicyMetadata
      parameters:
        - description: MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyMetadata'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/Vote:
    post:
      tags:
        - Msg
      summary: Vote allows a voter to vote on a proposal.
      operationId: EvidenceMsg_VoteMixin122
      parameters:
        - description: MsgVote is the Msg/Vote request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgVote'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.group.v1.Msg/WithdrawProposal:
    post:
      tags:
        - Msg
      summary: WithdrawProposal withdraws a proposal.
      operationId: EvidenceMsg_WithdrawProposal
      parameters:
        - description: MsgWithdrawProposal is the Msg/WithdrawProposal request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgWithdrawProposal'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.MsgWithdrawProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.mint.v1beta1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/mint module
        parameters. The authority is defaults to the x/gov module account.
      operationId: EvidenceMsg_UpdateParamsMixin127
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.nft.v1beta1.Msg/Send:
    post:
      tags:
        - Msg
      summary: Send defines a method to send a nft from one account to another account.
      operationId: EvidenceMsg_SendMixin133
      parameters:
        - description: MsgSend represents a message to send a nft from one account to another account.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.MsgSend'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.MsgSendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.protocolpool.v1.Msg/CancelContinuousFund:
    post:
      tags:
        - Msg
      summary: CancelContinuousFund defines a method for cancelling continuous fund.
      operationId: EvidenceMsg_CancelContinuousFund
      parameters:
        - description: MsgCancelContinuousFund defines a message to cancel continuous funds for a specific recipient.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgCancelContinuousFund'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgCancelContinuousFundResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.protocolpool.v1.Msg/CommunityPoolSpend:
    post:
      tags:
        - Msg
      summary: |-
        CommunityPoolSpend defines a governance operation for sending tokens from
        the community pool in the x/protocolpool module to another account, which
        could be the governance module itself. The authority is defined in the
        keeper.
      operationId: EvidenceMsg_CommunityPoolSpendMixin138
      parameters:
        - description: |-
            MsgCommunityPoolSpend defines a message for sending tokens from the community
            pool to another account. This message is typically executed via a governance
            proposal with the governance module being the executing authority.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgCommunityPoolSpend'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.protocolpool.v1.Msg/CreateContinuousFund:
    post:
      tags:
        - Msg
      summary: |-
        CreateContinuousFund defines a method to distribute a percentage of funds to an address continuously.
        This ContinuousFund can be indefinite or run until a given expiry time.
        Funds come from validator block rewards from x/distribution, but may also come from
        any user who funds the ProtocolPoolEscrow module account directly through x/bank.
      operationId: EvidenceMsg_CreateContinuousFund
      parameters:
        - description: MsgCreateContinuousFund defines a message for adding continuous funds.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgCreateContinuousFund'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgCreateContinuousFundResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.protocolpool.v1.Msg/FundCommunityPool:
    post:
      tags:
        - Msg
      summary: |-
        FundCommunityPool defines a method to allow an account to directly
        fund the community pool.
      operationId: EvidenceMsg_FundCommunityPoolMixin138
      parameters:
        - description: |-
            MsgFundCommunityPool allows an account to directly
            fund the community pool.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgFundCommunityPool'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgFundCommunityPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.protocolpool.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/protocolpool module parameters.
        The authority is defined in the keeper.
      operationId: EvidenceMsg_UpdateParamsMixin138
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.slashing.v1beta1.Msg/Unjail:
    post:
      tags:
        - Msg
      summary: |-
        Unjail defines a method for unjailing a jailed validator, thus returning
        them into the bonded validator set, so they can begin receiving provisions
        and rewards again.
      operationId: EvidenceMsg_Unjail
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUnjail'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUnjailResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.slashing.v1beta1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a governance operation for updating the x/slashing module
        parameters. The authority defaults to the x/gov module account.
      operationId: EvidenceMsg_UpdateParamsMixin144
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.staking.v1beta1.Msg/BeginRedelegate:
    post:
      tags:
        - Msg
      summary: |-
        BeginRedelegate defines a method for performing a redelegation
        of coins from a delegator and source validator to a destination validator.
      operationId: EvidenceMsg_BeginRedelegate
      parameters:
        - description: |-
            MsgBeginRedelegate defines a SDK message for performing a redelegation
            of coins from a delegator and source validator to a destination validator.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgBeginRedelegate'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgBeginRedelegateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.staking.v1beta1.Msg/CancelUnbondingDelegation:
    post:
      tags:
        - Msg
      summary: |-
        CancelUnbondingDelegation defines a method for performing canceling the unbonding delegation
        and delegate back to previous validator.
      operationId: EvidenceMsg_CancelUnbondingDelegation
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.staking.v1beta1.Msg/CreateValidator:
    post:
      tags:
        - Msg
      summary: CreateValidator defines a method for creating a new validator.
      operationId: EvidenceMsg_CreateValidator
      parameters:
        - description: MsgCreateValidator defines a SDK message for creating a new validator.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgCreateValidator'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgCreateValidatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.staking.v1beta1.Msg/Delegate:
    post:
      tags:
        - Msg
      summary: |-
        Delegate defines a method for performing a delegation of coins
        from a delegator to a validator.
      operationId: EvidenceMsg_Delegate
      parameters:
        - description: |-
            MsgDelegate defines a SDK message for performing a delegation of coins
            from a delegator to a validator.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgDelegate'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgDelegateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.staking.v1beta1.Msg/EditValidator:
    post:
      tags:
        - Msg
      summary: EditValidator defines a method for editing an existing validator.
      operationId: EvidenceMsg_EditValidator
      parameters:
        - description: MsgEditValidator defines a SDK message for editing an existing validator.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgEditValidator'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgEditValidatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.staking.v1beta1.Msg/Undelegate:
    post:
      tags:
        - Msg
      summary: |-
        Undelegate defines a method for performing an undelegation from a
        delegate and a validator.
      operationId: EvidenceMsg_Undelegate
      parameters:
        - description: |-
            MsgUndelegate defines a SDK message for performing an undelegation from a
            delegate and a validator.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgUndelegate'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgUndelegateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.staking.v1beta1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines an operation for updating the x/staking module
        parameters.
      operationId: EvidenceMsg_UpdateParamsMixin149
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.store.streaming.abci.ABCIListenerService/ListenCommit:
    post:
      tags:
        - ABCIListenerService
      summary: ListenCommit is the corresponding endpoint for ABCIListener.ListenCommit
      operationId: EvidenceABCIListenerService_ListenCommit
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.store.streaming.abci.ListenCommitRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.store.streaming.abci.ListenCommitResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.store.streaming.abci.ABCIListenerService/ListenFinalizeBlock:
    post:
      tags:
        - ABCIListenerService
      summary: ListenFinalizeBlock is the corresponding endpoint for ABCIListener.ListenEndBlock
      operationId: EvidenceABCIListenerService_ListenFinalizeBlock
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.store.streaming.abci.ListenFinalizeBlockRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.store.streaming.abci.ListenFinalizeBlockResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.upgrade.v1beta1.Msg/CancelUpgrade:
    post:
      tags:
        - Msg
      summary: |-
        CancelUpgrade is a governance operation for cancelling a previously
        approved software upgrade.
      operationId: EvidenceMsg_CancelUpgrade
      parameters:
        - description: MsgCancelUpgrade is the Msg/CancelUpgrade request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgCancelUpgrade'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.upgrade.v1beta1.Msg/SoftwareUpgrade:
    post:
      tags:
        - Msg
      summary: SoftwareUpgrade is a governance operation for initiating a software upgrade.
      operationId: EvidenceMsg_SoftwareUpgrade
      parameters:
        - description: MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.vesting.v1beta1.Msg/CreatePeriodicVestingAccount:
    post:
      tags:
        - Msg
      summary: |-
        CreatePeriodicVestingAccount defines a method that enables creating a
        periodic vesting account.
      operationId: EvidenceMsg_CreatePeriodicVestingAccount
      parameters:
        - description: |-
            MsgCreateVestingAccount defines a message that enables creating a vesting
            account.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.vesting.v1beta1.Msg/CreatePermanentLockedAccount:
    post:
      tags:
        - Msg
      summary: |-
        CreatePermanentLockedAccount defines a method that enables creating a permanent
        locked account.
      operationId: EvidenceMsg_CreatePermanentLockedAccount
      parameters:
        - description: |-
            MsgCreatePermanentLockedAccount defines a message that enables creating a permanent
            locked account.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos.vesting.v1beta1.Msg/CreateVestingAccount:
    post:
      tags:
        - Msg
      summary: |-
        CreateVestingAccount defines a method that enables creating a vesting
        account.
      operationId: EvidenceMsg_CreateVestingAccount
      parameters:
        - description: |-
            MsgCreateVestingAccount defines a message that enables creating a vesting
            account.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreateVestingAccount'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/account_info/{address}:
    get:
      tags:
        - Query
      summary: AccountInfo queries account info which is common to all account types.
      operationId: EvidenceQuery_AccountInfo
      parameters:
        - type: string
          description: address is the account address string.
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/accounts:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: Accounts returns all the existing accounts.
      operationId: EvidenceQuery_Accounts
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      tags:
        - Query
      summary: Account returns account details based on address.
      operationId: EvidenceQuery_Account
      parameters:
        - type: string
          description: address defines the address to query for.
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      tags:
        - Query
      summary: AccountAddressByID returns account address based on account number.
      operationId: EvidenceQuery_AccountAddressByID
      parameters:
        - type: string
          format: int64
          description: |-
            Deprecated, use account_id instead

            id is the account number of the address to be queried. This field
            should have been an uint64 (like all account numbers), and will be
            updated to uint64 in a future version of the auth query.
          name: id
          in: path
          required: true
        - type: string
          format: uint64
          description: account_id is the account number of the address to be queried.
          name: account_id
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/bech32:
    get:
      tags:
        - Query
      summary: Bech32Prefix queries bech32Prefix
      operationId: EvidenceQuery_Bech32Prefix
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.Bech32PrefixResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      tags:
        - Query
      summary: AddressBytesToString converts Account Address bytes to string
      operationId: EvidenceQuery_AddressBytesToString
      parameters:
        - type: string
          format: byte
          name: address_bytes
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.AddressBytesToStringResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      tags:
        - Query
      summary: AddressStringToBytes converts Address string to bytes
      operationId: EvidenceQuery_AddressStringToBytes
      parameters:
        - type: string
          name: address_string
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.AddressStringToBytesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/module_accounts:
    get:
      tags:
        - Query
      summary: ModuleAccounts returns all the existing module accounts.
      operationId: EvidenceQuery_ModuleAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryModuleAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      tags:
        - Query
      summary: ModuleAccountByName returns the module account info by module name
      operationId: EvidenceQuery_ModuleAccountByName
      parameters:
        - type: string
          name: name
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/auth/v1beta1/params:
    get:
      tags:
        - Query
      summary: Params queries all parameters.
      operationId: EvidenceQuery_Params
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/authz/v1beta1/grants:
    get:
      tags:
        - Query
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      operationId: EvidenceQuery_Grants
      parameters:
        - type: string
          name: granter
          in: query
        - type: string
          name: grantee
          in: query
        - type: string
          description: Optional, msg_type_url, when set, will query only grants matching given msg type.
          name: msg_type_url
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.QueryGrantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      tags:
        - Query
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      operationId: EvidenceQuery_GranteeGrants
      parameters:
        - type: string
          name: grantee
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.QueryGranteeGrantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      tags:
        - Query
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      operationId: EvidenceQuery_GranterGrants
      parameters:
        - type: string
          name: granter
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.QueryGranterGrantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: AllBalances queries the balance of all coins for a single account.
      operationId: EvidenceQuery_AllBalances
      parameters:
        - type: string
          description: address is the address to query balances for.
          name: address
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
        - type: boolean
          description: resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.
          name: resolve_denom
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryAllBalancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      tags:
        - Query
      summary: Balance queries the balance of a single coin for a single account.
      operationId: EvidenceQuery_Balance
      parameters:
        - type: string
          description: address is the address to query balances for.
          name: address
          in: path
          required: true
        - type: string
          description: denom is the coin denom to query balances for.
          name: denom
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryBalanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: |-
        DenomOwners queries for all account addresses that own a particular token
        denomination.
      operationId: EvidenceQuery_DenomOwners
      parameters:
        - pattern: .+
          type: string
          description: denom defines the coin denomination to query all account holders for.
          name: denom
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomOwnersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/denom_owners_by_query:
    get:
      tags:
        - Query
      summary: |-
        DenomOwnersByQuery queries for all account addresses that own a particular token
        denomination.
      operationId: EvidenceQuery_DenomOwnersByQuery
      parameters:
        - type: string
          description: denom defines the coin denomination to query all account holders for.
          name: denom
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      tags:
        - Query
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: EvidenceQuery_DenomsMetadata
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomsMetadataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      tags:
        - Query
      summary: DenomMetadata queries the client metadata of a given coin denomination.
      operationId: EvidenceQuery_DenomMetadata
      parameters:
        - pattern: .+
          type: string
          description: denom is the coin denom to query the metadata for.
          name: denom
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomMetadataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/denoms_metadata_by_query_string:
    get:
      tags:
        - Query
      summary: DenomMetadataByQueryString queries the client metadata of a given coin denomination.
      operationId: EvidenceQuery_DenomMetadataByQueryString
      parameters:
        - type: string
          description: denom is the coin denom to query the metadata for.
          name: denom
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/params:
    get:
      tags:
        - Query
      summary: Params queries the parameters of x/bank module.
      operationId: EvidenceQuery_ParamsMixin67
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/send_enabled:
    get:
      description: |-
        This query only returns denominations that have specific SendEnabled settings.
        Any denomination that does not have a specific setting will use the default
        params.default_send_enabled, and will not be returned by this query.
      tags:
        - Query
      summary: SendEnabled queries for SendEnabled entries.
      operationId: EvidenceQuery_SendEnabled
      parameters:
        - type: array
          items:
            type: string
          collectionFormat: multi
          description: denoms is the specific denoms you want look up. Leave empty to get all entries.
          name: denoms
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QuerySendEnabledResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: |-
        SpendableBalances queries the spendable balance of all coins for a single
        account.
      operationId: EvidenceQuery_SpendableBalances
      parameters:
        - type: string
          description: address is the address to query spendable balances for.
          name: address
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QuerySpendableBalancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: |-
        SpendableBalanceByDenom queries the spendable balance of a single denom for
        a single account.
      operationId: EvidenceQuery_SpendableBalanceByDenom
      parameters:
        - type: string
          description: address is the address to query balances for.
          name: address
          in: path
          required: true
        - type: string
          description: denom is the coin denom to query balances for.
          name: denom
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/supply:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: TotalSupply queries the total supply of all coins.
      operationId: EvidenceQuery_TotalSupply
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryTotalSupplyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: SupplyOf queries the supply of a single coin.
      operationId: EvidenceQuery_SupplyOf
      parameters:
        - type: string
          description: denom is the coin denom to query balances for.
          name: denom
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QuerySupplyOfResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/node/v1beta1/config:
    get:
      tags:
        - Service
      summary: Config queries for the operator configuration.
      operationId: EvidenceService_Config
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.node.v1beta1.ConfigResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/node/v1beta1/status:
    get:
      tags:
        - Service
      summary: Status queries for the node status.
      operationId: EvidenceService_Status
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.node.v1beta1.StatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/app_descriptor/authn:
    get:
      tags:
        - ReflectionService
      summary: |-
        GetAuthnDescriptor returns information on how to authenticate transactions in the application
        NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
        future releases of the cosmos-sdk.
      operationId: EvidenceReflectionService_GetAuthnDescriptor
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/app_descriptor/chain:
    get:
      tags:
        - ReflectionService
      summary: GetChainDescriptor returns the description of the chain
      operationId: EvidenceReflectionService_GetChainDescriptor
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/app_descriptor/codec:
    get:
      tags:
        - ReflectionService
      summary: GetCodecDescriptor returns the descriptor of the codec of the application
      operationId: EvidenceReflectionService_GetCodecDescriptor
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/app_descriptor/configuration:
    get:
      tags:
        - ReflectionService
      summary: GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
      operationId: EvidenceReflectionService_GetConfigurationDescriptor
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/app_descriptor/query_services:
    get:
      tags:
        - ReflectionService
      summary: GetQueryServicesDescriptor returns the available gRPC queryable services of the application
      operationId: EvidenceReflectionService_GetQueryServicesDescriptor
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/app_descriptor/tx_descriptor:
    get:
      tags:
        - ReflectionService
      summary: GetTxDescriptor returns information on the used transaction object and available msgs that can be used
      operationId: EvidenceReflectionService_GetTxDescriptor
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/interfaces:
    get:
      tags:
        - ReflectionService
      summary: |-
        ListAllInterfaces lists all the interfaces registered in the interface
        registry.
      operationId: EvidenceReflectionService_ListAllInterfaces
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v1beta1.ListAllInterfacesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/reflection/v1beta1/interfaces/{interface_name}/implementations:
    get:
      tags:
        - ReflectionService
      summary: |-
        ListImplementations list all the concrete types that implement a given
        interface.
      operationId: EvidenceReflectionService_ListImplementations
      parameters:
        - type: string
          description: interface_name defines the interface to query the implementations for.
          name: interface_name
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.reflection.v1beta1.ListImplementationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      tags:
        - Service
      summary: |-
        ABCIQuery defines a query handler that supports ABCI queries directly to the
        application, bypassing Tendermint completely. The ABCI query must contain
        a valid and supported path, including app, custom, p2p, and store.
      operationId: EvidenceService_ABCIQuery
      parameters:
        - type: string
          format: byte
          name: data
          in: query
        - type: string
          name: path
          in: query
        - type: string
          format: int64
          name: height
          in: query
        - type: boolean
          name: prove
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ABCIQueryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      tags:
        - Service
      summary: GetLatestBlock returns the latest block.
      operationId: EvidenceService_GetLatestBlock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetLatestBlockResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      tags:
        - Service
      summary: GetBlockByHeight queries block for given height.
      operationId: EvidenceService_GetBlockByHeight
      parameters:
        - type: string
          format: int64
          name: height
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      tags:
        - Service
      summary: GetNodeInfo queries the current node info.
      operationId: EvidenceService_GetNodeInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetNodeInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      tags:
        - Service
      summary: GetSyncing queries node syncing.
      operationId: EvidenceService_GetSyncing
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetSyncingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      tags:
        - Service
      summary: GetLatestValidatorSet queries latest validator-set.
      operationId: EvidenceService_GetLatestValidatorSet
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      tags:
        - Service
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      operationId: EvidenceService_GetValidatorSetByHeight
      parameters:
        - type: string
          format: int64
          name: height
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/circuit/v1/accounts:
    get:
      tags:
        - Query
      summary: Account returns account permissions.
      operationId: EvidenceQuery_AccountsMixin79
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.AccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/circuit/v1/accounts/{address}:
    get:
      tags:
        - Query
      summary: Account returns account permissions.
      operationId: EvidenceQuery_AccountMixin79
      parameters:
        - type: string
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.AccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/circuit/v1/disable_list:
    get:
      tags:
        - Query
      summary: DisabledList returns a list of disabled message urls
      operationId: EvidenceQuery_DisabledList
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.circuit.v1.DisabledListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/consensus/v1/params:
    get:
      tags:
        - Query
      summary: Params queries the parameters of x/consensus module.
      operationId: EvidenceQuery_ParamsMixin82
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.consensus.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/community_pool:
    get:
      description: 'WARNING: This query will fail if an external community pool is used.'
      tags:
        - Query
      summary: CommunityPool queries the community pool coins.
      operationId: EvidenceQuery_CommunityPool
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryCommunityPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      tags:
        - Query
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by each
        validator.
      operationId: EvidenceQuery_DelegationTotalRewards
      parameters:
        - type: string
          description: delegator_address defines the delegator address to query for.
          name: delegator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      tags:
        - Query
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: EvidenceQuery_DelegationRewards
      parameters:
        - type: string
          description: delegator_address defines the delegator address to query for.
          name: delegator_address
          in: path
          required: true
        - type: string
          description: validator_address defines the validator address to query for.
          name: validator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      tags:
        - Query
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: EvidenceQuery_DelegatorValidators
      parameters:
        - type: string
          description: delegator_address defines the delegator address to query for.
          name: delegator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      tags:
        - Query
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: EvidenceQuery_DelegatorWithdrawAddress
      parameters:
        - type: string
          description: delegator_address defines the delegator address to query for.
          name: delegator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/params:
    get:
      tags:
        - Query
      summary: Params queries params of the distribution module.
      operationId: EvidenceQuery_ParamsMixin97
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/validators/{validator_address}:
    get:
      tags:
        - Query
      summary: ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
      operationId: EvidenceQuery_ValidatorDistributionInfo
      parameters:
        - type: string
          description: validator_address defines the validator address to query for.
          name: validator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      tags:
        - Query
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: EvidenceQuery_ValidatorCommission
      parameters:
        - type: string
          description: validator_address defines the validator address to query for.
          name: validator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      tags:
        - Query
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: EvidenceQuery_ValidatorOutstandingRewards
      parameters:
        - type: string
          description: validator_address defines the validator address to query for.
          name: validator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      tags:
        - Query
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: EvidenceQuery_ValidatorSlashes
      parameters:
        - type: string
          description: validator_address defines the validator address to query for.
          name: validator_address
          in: path
          required: true
        - type: string
          format: uint64
          description: starting_height defines the optional starting height to query the slashes.
          name: starting_height
          in: query
        - type: string
          format: uint64
          description: starting_height defines the optional ending height to query the slashes.
          name: ending_height
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/epochs/v1beta1/current_epoch:
    get:
      tags:
        - Query
      summary: CurrentEpoch provide current epoch of specified identifier
      operationId: EvidenceQuery_CurrentEpoch
      parameters:
        - type: string
          name: identifier
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.epochs.v1beta1.QueryCurrentEpochResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/epochs/v1beta1/epochs:
    get:
      tags:
        - Query
      summary: EpochInfos provide running epochInfos
      operationId: EvidenceQuery_EpochInfos
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.epochs.v1beta1.QueryEpochInfosResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/evidence/v1beta1/evidence:
    get:
      tags:
        - Query
      summary: AllEvidence queries all evidence.
      operationId: EvidenceQuery_AllEvidence
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.evidence.v1beta1.QueryAllEvidenceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/evidence/v1beta1/evidence/{hash}:
    get:
      tags:
        - Query
      summary: Evidence queries evidence based on evidence hash.
      operationId: EvidenceQuery_Evidence
      parameters:
        - type: string
          description: hash defines the evidence hash of the requested evidence.
          name: hash
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            evidence_hash defines the hash of the requested evidence.
            Deprecated: Use hash, a HEX encoded string, instead.
          name: evidence_hash
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.evidence.v1beta1.QueryEvidenceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      tags:
        - Query
      summary: Allowance returns granted allwance to the grantee by the granter.
      operationId: EvidenceQuery_Allowance
      parameters:
        - type: string
          description: granter is the address of the user granting an allowance of their funds.
          name: granter
          in: path
          required: true
        - type: string
          description: grantee is the address of the user being granted an allowance of another user's funds.
          name: grantee
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      tags:
        - Query
      summary: Allowances returns all the grants for the given grantee address.
      operationId: EvidenceQuery_Allowances
      parameters:
        - type: string
          name: grantee
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      tags:
        - Query
      summary: AllowancesByGranter returns all the grants given by an address
      operationId: EvidenceQuery_AllowancesByGranter
      parameters:
        - type: string
          name: granter
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/constitution:
    get:
      tags:
        - Query
      summary: Constitution queries the chain's constitution.
      operationId: EvidenceQuery_Constitution
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryConstitutionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/params/{params_type}:
    get:
      tags:
        - Query
      summary: Params queries all parameters of the gov module.
      operationId: EvidenceQuery_ParamsMixin113
      parameters:
        - type: string
          description: |-
            params_type defines which parameters to query for, can be one of "voting",
            "tallying" or "deposit".
          name: params_type
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/proposals:
    get:
      tags:
        - Query
      summary: Proposals queries all proposals based on given status.
      operationId: EvidenceQuery_Proposals
      parameters:
        - enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          type: string
          default: PROPOSAL_STATUS_UNSPECIFIED
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          name: proposal_status
          in: query
        - type: string
          description: voter defines the voter address for the proposals.
          name: voter
          in: query
        - type: string
          description: depositor defines the deposit addresses from the proposals.
          name: depositor
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryProposalsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      tags:
        - Query
      summary: Proposal queries proposal details based on ProposalID.
      operationId: EvidenceQuery_Proposal
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      tags:
        - Query
      summary: Deposits queries all deposits of a single proposal.
      operationId: EvidenceQuery_Deposits
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryDepositsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      tags:
        - Query
      summary: Deposit queries single deposit information based on proposalID, depositAddr.
      operationId: EvidenceQuery_Deposit
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          description: depositor defines the deposit addresses from the proposals.
          name: depositor
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryDepositResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      tags:
        - Query
      summary: TallyResult queries the tally of a proposal vote.
      operationId: EvidenceQuery_TallyResult
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryTallyResultResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      tags:
        - Query
      summary: Votes queries votes of a given proposal.
      operationId: EvidenceQuery_Votes
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryVotesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      tags:
        - Query
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: EvidenceQuery_Vote
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          description: voter defines the voter address for the proposals.
          name: voter
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      tags:
        - Query
      summary: Params queries all parameters of the gov module.
      operationId: EvidenceQuery_ParamsMixin117
      parameters:
        - type: string
          description: |-
            params_type defines which parameters to query for, can be one of "voting",
            "tallying" or "deposit".
          name: params_type
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/proposals:
    get:
      tags:
        - Query
      summary: Proposals queries all proposals based on given status.
      operationId: EvidenceQuery_ProposalsMixin117
      parameters:
        - enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          type: string
          default: PROPOSAL_STATUS_UNSPECIFIED
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          name: proposal_status
          in: query
        - type: string
          description: voter defines the voter address for the proposals.
          name: voter
          in: query
        - type: string
          description: depositor defines the deposit addresses from the proposals.
          name: depositor
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryProposalsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      tags:
        - Query
      summary: Proposal queries proposal details based on ProposalID.
      operationId: EvidenceQuery_ProposalMixin117
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      tags:
        - Query
      summary: Deposits queries all deposits of a single proposal.
      operationId: EvidenceQuery_DepositsMixin117
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryDepositsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      tags:
        - Query
      summary: Deposit queries single deposit information based on proposalID, depositor address.
      operationId: EvidenceQuery_DepositMixin117
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          description: depositor defines the deposit addresses from the proposals.
          name: depositor
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryDepositResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      tags:
        - Query
      summary: TallyResult queries the tally of a proposal vote.
      operationId: EvidenceQuery_TallyResultMixin117
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryTallyResultResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      tags:
        - Query
      summary: Votes queries votes of a given proposal.
      operationId: EvidenceQuery_VotesMixin117
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryVotesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      tags:
        - Query
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: EvidenceQuery_VoteMixin117
      parameters:
        - type: string
          format: uint64
          description: proposal_id defines the unique id of the proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          description: voter defines the voter address for the proposals.
          name: voter
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/group_info/{group_id}:
    get:
      tags:
        - Query
      summary: GroupInfo queries group info based on group id.
      operationId: EvidenceQuery_GroupInfo
      parameters:
        - type: string
          format: uint64
          description: group_id is the unique ID of the group.
          name: group_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/group_members/{group_id}:
    get:
      tags:
        - Query
      summary: GroupMembers queries members of a group by group id.
      operationId: EvidenceQuery_GroupMembers
      parameters:
        - type: string
          format: uint64
          description: group_id is the unique ID of the group.
          name: group_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupMembersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/group_policies_by_admin/{admin}:
    get:
      tags:
        - Query
      summary: GroupPoliciesByAdmin queries group policies by admin address.
      operationId: EvidenceQuery_GroupPoliciesByAdmin
      parameters:
        - type: string
          description: admin is the admin address of the group policy.
          name: admin
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupPoliciesByAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/group_policies_by_group/{group_id}:
    get:
      tags:
        - Query
      summary: GroupPoliciesByGroup queries group policies by group id.
      operationId: EvidenceQuery_GroupPoliciesByGroup
      parameters:
        - type: string
          format: uint64
          description: group_id is the unique ID of the group policy's group.
          name: group_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupPoliciesByGroupResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/group_policy_info/{address}:
    get:
      tags:
        - Query
      summary: GroupPolicyInfo queries group policy info based on account address of group policy.
      operationId: EvidenceQuery_GroupPolicyInfo
      parameters:
        - type: string
          description: address is the account address of the group policy.
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupPolicyInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/groups:
    get:
      tags:
        - Query
      summary: Groups queries all groups in state.
      operationId: EvidenceQuery_Groups
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/groups_by_admin/{admin}:
    get:
      tags:
        - Query
      summary: GroupsByAdmin queries groups by admin address.
      operationId: EvidenceQuery_GroupsByAdmin
      parameters:
        - type: string
          description: admin is the account address of a group's admin.
          name: admin
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupsByAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/groups_by_member/{address}:
    get:
      tags:
        - Query
      summary: GroupsByMember queries groups by member address.
      operationId: EvidenceQuery_GroupsByMember
      parameters:
        - type: string
          description: address is the group member address.
          name: address
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupsByMemberResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/proposal/{proposal_id}:
    get:
      tags:
        - Query
      summary: Proposal queries a proposal based on proposal id.
      operationId: EvidenceQuery_ProposalMixin121
      parameters:
        - type: string
          format: uint64
          description: proposal_id is the unique ID of a proposal.
          name: proposal_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/proposals/{proposal_id}/tally:
    get:
      tags:
        - Query
      summary: |-
        TallyResult returns the tally result of a proposal. If the proposal is
        still in voting period, then this query computes the current tally state,
        which might not be final. On the other hand, if the proposal is final,
        then it simply returns the `final_tally_result` state stored in the
        proposal itself.
      operationId: EvidenceQuery_TallyResultMixin121
      parameters:
        - type: string
          format: uint64
          description: proposal_id is the unique id of a proposal.
          name: proposal_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryTallyResultResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/proposals_by_group_policy/{address}:
    get:
      tags:
        - Query
      summary: ProposalsByGroupPolicy queries proposals based on account address of group policy.
      operationId: EvidenceQuery_ProposalsByGroupPolicy
      parameters:
        - type: string
          description: address is the account address of the group policy related to proposals.
          name: address
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryProposalsByGroupPolicyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}:
    get:
      tags:
        - Query
      summary: VoteByProposalVoter queries a vote by proposal id and voter.
      operationId: EvidenceQuery_VoteByProposalVoter
      parameters:
        - type: string
          format: uint64
          description: proposal_id is the unique ID of a proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          description: voter is a proposal voter account address.
          name: voter
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryVoteByProposalVoterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/votes_by_proposal/{proposal_id}:
    get:
      tags:
        - Query
      summary: VotesByProposal queries a vote by proposal id.
      operationId: EvidenceQuery_VotesByProposal
      parameters:
        - type: string
          format: uint64
          description: proposal_id is the unique ID of a proposal.
          name: proposal_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryVotesByProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/group/v1/votes_by_voter/{voter}:
    get:
      tags:
        - Query
      summary: VotesByVoter queries a vote by voter.
      operationId: EvidenceQuery_VotesByVoter
      parameters:
        - type: string
          description: voter is a proposal voter account address.
          name: voter
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryVotesByVoterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      tags:
        - Query
      summary: AnnualProvisions current minting annual provisions value.
      operationId: EvidenceQuery_AnnualProvisions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/mint/v1beta1/inflation:
    get:
      tags:
        - Query
      summary: Inflation returns the current minting inflation value.
      operationId: EvidenceQuery_Inflation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.QueryInflationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/mint/v1beta1/params:
    get:
      tags:
        - Query
      summary: Params returns the total set of minting parameters.
      operationId: EvidenceQuery_ParamsMixin126
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/nft/v1beta1/balance/{owner}/{class_id}:
    get:
      tags:
        - Query
      summary: Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721
      operationId: EvidenceQuery_BalanceMixin132
      parameters:
        - type: string
          description: owner is the owner address of the nft
          name: owner
          in: path
          required: true
        - type: string
          description: class_id associated with the nft
          name: class_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryBalanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/nft/v1beta1/classes:
    get:
      tags:
        - Query
      summary: Classes queries all NFT classes
      operationId: EvidenceQuery_Classes
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryClassesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/nft/v1beta1/classes/{class_id}:
    get:
      tags:
        - Query
      summary: Class queries an NFT class based on its id
      operationId: EvidenceQuery_Class
      parameters:
        - type: string
          description: class_id associated with the nft
          name: class_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryClassResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/nft/v1beta1/nfts:
    get:
      tags:
        - Query
      summary: |-
        NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in
        ERC721Enumerable
      operationId: EvidenceQuery_NFTs
      parameters:
        - type: string
          description: class_id associated with the nft
          name: class_id
          in: query
        - type: string
          description: owner is the owner address of the nft
          name: owner
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryNFTsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/nft/v1beta1/nfts/{class_id}/{id}:
    get:
      tags:
        - Query
      summary: NFT queries an NFT based on its class and id.
      operationId: EvidenceQuery_NFT
      parameters:
        - type: string
          description: class_id associated with the nft
          name: class_id
          in: path
          required: true
        - type: string
          description: id is a unique identifier of the NFT
          name: id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryNFTResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/nft/v1beta1/owner/{class_id}/{id}:
    get:
      tags:
        - Query
      summary: Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721
      operationId: EvidenceQuery_Owner
      parameters:
        - type: string
          description: class_id associated with the nft
          name: class_id
          in: path
          required: true
        - type: string
          description: id is a unique identifier of the NFT
          name: id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryOwnerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/nft/v1beta1/supply/{class_id}:
    get:
      tags:
        - Query
      summary: Supply queries the number of NFTs from the given class, same as totalSupply of ERC721.
      operationId: EvidenceQuery_Supply
      parameters:
        - type: string
          description: class_id associated with the nft
          name: class_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QuerySupplyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/params/v1beta1/params:
    get:
      tags:
        - Query
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      operationId: EvidenceQuery_ParamsMixin135
      parameters:
        - type: string
          description: subspace defines the module to query the parameter for.
          name: subspace
          in: query
        - type: string
          description: key defines the key of the parameter in the subspace.
          name: key
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.params.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/params/v1beta1/subspaces:
    get:
      tags:
        - Query
      summary: Subspaces queries for all registered subspaces and all keys for a subspace.
      operationId: EvidenceQuery_Subspaces
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.params.v1beta1.QuerySubspacesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/protocolpool/v1/community_pool:
    get:
      tags:
        - Query
      summary: CommunityPool queries the community pool coins.
      operationId: EvidenceQuery_CommunityPoolMixin137
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.QueryCommunityPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/protocolpool/v1/continuous_funds:
    get:
      tags:
        - Query
      summary: ContinuousFunds queries all continuous funds in the store.
      operationId: EvidenceQuery_ContinuousFunds
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.QueryContinuousFundsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/protocolpool/v1/continuous_funds/{recipient}:
    get:
      tags:
        - Query
      summary: ContinuousFund queries a continuous fund by the recipient is is associated with.
      operationId: EvidenceQuery_ContinuousFund
      parameters:
        - type: string
          description: recipient is the recipient address to query unclaimed budget amount for.
          name: recipient
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.QueryContinuousFundResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/protocolpool/v1/params:
    get:
      tags:
        - Query
      summary: Params returns the total set of x/protocolpool parameters.
      operationId: EvidenceQuery_ParamsMixin137
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.protocolpool.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/slashing/v1beta1/params:
    get:
      tags:
        - Query
      summary: Params queries the parameters of slashing module
      operationId: EvidenceQuery_ParamsMixin142
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      tags:
        - Query
      summary: SigningInfos queries signing info of all validators
      operationId: EvidenceQuery_SigningInfos
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.QuerySigningInfosResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      tags:
        - Query
      summary: SigningInfo queries the signing info of given cons address
      operationId: EvidenceQuery_SigningInfo
      parameters:
        - type: string
          description: cons_address is the address to query signing info of
          name: cons_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.QuerySigningInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: DelegatorDelegations queries all delegations of a given delegator address.
      operationId: EvidenceQuery_DelegatorDelegations
      parameters:
        - type: string
          description: delegator_addr defines the delegator address to query for.
          name: delegator_addr
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: Redelegations queries redelegations of given address.
      operationId: EvidenceQuery_Redelegations
      parameters:
        - type: string
          description: delegator_addr defines the delegator address to query for.
          name: delegator_addr
          in: path
          required: true
        - type: string
          description: src_validator_addr defines the validator address to redelegate from.
          name: src_validator_addr
          in: query
        - type: string
          description: dst_validator_addr defines the validator address to redelegate to.
          name: dst_validator_addr
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryRedelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: |-
        DelegatorUnbondingDelegations queries all unbonding delegations of a given
        delegator address.
      operationId: EvidenceQuery_DelegatorUnbondingDelegations
      parameters:
        - type: string
          description: delegator_addr defines the delegator address to query for.
          name: delegator_addr
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      operationId: EvidenceQuery_DelegatorValidatorsMixin147
      parameters:
        - type: string
          description: delegator_addr defines the delegator address to query for.
          name: delegator_addr
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      tags:
        - Query
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: EvidenceQuery_DelegatorValidator
      parameters:
        - type: string
          description: delegator_addr defines the delegator address to query for.
          name: delegator_addr
          in: path
          required: true
        - type: string
          description: validator_addr defines the validator address to query for.
          name: validator_addr
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      tags:
        - Query
      summary: HistoricalInfo queries the historical info for given height.
      operationId: EvidenceQuery_HistoricalInfo
      parameters:
        - type: string
          format: int64
          description: height defines at which height to query the historical info.
          name: height
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryHistoricalInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the staking parameters.
      operationId: EvidenceQuery_ParamsMixin147
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/pool:
    get:
      tags:
        - Query
      summary: Pool queries the pool info.
      operationId: EvidenceQuery_Pool
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/validators:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: Validators queries all validators that match the given status.
      operationId: EvidenceQuery_Validators
      parameters:
        - type: string
          description: status enables to query for validators matching a given status.
          name: status
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      tags:
        - Query
      summary: Validator queries validator info for given validator address.
      operationId: EvidenceQuery_Validator
      parameters:
        - type: string
          description: validator_addr defines the validator address to query for.
          name: validator_addr
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: ValidatorDelegations queries delegate info for given validator.
      operationId: EvidenceQuery_ValidatorDelegations
      parameters:
        - type: string
          description: validator_addr defines the validator address to query for.
          name: validator_addr
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      tags:
        - Query
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: EvidenceQuery_Delegation
      parameters:
        - type: string
          description: validator_addr defines the validator address to query for.
          name: validator_addr
          in: path
          required: true
        - type: string
          description: delegator_addr defines the delegator address to query for.
          name: delegator_addr
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      tags:
        - Query
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: EvidenceQuery_UnbondingDelegation
      parameters:
        - type: string
          description: validator_addr defines the validator address to query for.
          name: validator_addr
          in: path
          required: true
        - type: string
          description: delegator_addr defines the delegator address to query for.
          name: delegator_addr
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      tags:
        - Query
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      operationId: EvidenceQuery_ValidatorUnbondingDelegations
      parameters:
        - type: string
          description: validator_addr defines the validator address to query for.
          name: validator_addr
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/decode:
    post:
      tags:
        - Service
      summary: TxDecode decodes the transaction.
      operationId: EvidenceService_TxDecode
      parameters:
        - description: |-
            TxDecodeRequest is the request type for the Service.TxDecode
            RPC method.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/decode/amino:
    post:
      tags:
        - Service
      summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
      operationId: EvidenceService_TxDecodeAmino
      parameters:
        - description: |-
            TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
            RPC method.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeAminoRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeAminoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/encode:
    post:
      tags:
        - Service
      summary: TxEncode encodes the transaction.
      operationId: EvidenceService_TxEncode
      parameters:
        - description: |-
            TxEncodeRequest is the request type for the Service.TxEncode
            RPC method.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/encode/amino:
    post:
      tags:
        - Service
      summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
      operationId: EvidenceService_TxEncodeAmino
      parameters:
        - description: |-
            TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
            RPC method.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeAminoRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeAminoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/simulate:
    post:
      tags:
        - Service
      summary: Simulate simulates executing a transaction for estimating gas usage.
      operationId: EvidenceService_Simulate
      parameters:
        - description: |-
            SimulateRequest is the request type for the Service.Simulate
            RPC method.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.SimulateRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.SimulateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/txs:
    get:
      tags:
        - Service
      summary: GetTxsEvent fetches txs by event.
      operationId: EvidenceService_GetTxsEvent
      parameters:
        - type: array
          items:
            type: string
          collectionFormat: multi
          description: |-
            events is the list of transaction event type.
            Deprecated post v0.47.x: use query instead, which should contain a valid
            events query.
          name: events
          in: query
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
        - enum:
            - ORDER_BY_UNSPECIFIED
            - ORDER_BY_ASC
            - ORDER_BY_DESC
          type: string
          default: ORDER_BY_UNSPECIFIED
          description: |2-
             - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
            to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
          name: order_by
          in: query
        - type: string
          format: uint64
          description: |-
            page is the page number to query, starts at 1. If not provided, will
            default to first page.
          name: page
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: limit
          in: query
        - type: string
          description: |-
            query defines the transaction event query that is proxied to Tendermint's
            TxSearch RPC method. The query must be valid.
          name: query
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxsEventResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
    post:
      tags:
        - Service
      summary: BroadcastTx broadcast transaction.
      operationId: EvidenceService_BroadcastTx
      parameters:
        - description: |-
            BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
            RPC method.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.BroadcastTxRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.BroadcastTxResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      tags:
        - Service
      summary: GetBlockWithTxs fetches a block with decoded txs.
      operationId: EvidenceService_GetBlockWithTxs
      parameters:
        - type: string
          format: int64
          description: height is the height of the block to query.
          name: height
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetBlockWithTxsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      tags:
        - Service
      summary: GetTx fetches a tx by hash.
      operationId: EvidenceService_GetTx
      parameters:
        - type: string
          description: hash is the tx hash to query, encoded as a hex string.
          name: hash
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      tags:
        - Query
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: EvidenceQuery_AppliedPlan
      parameters:
        - type: string
          description: name is the name of the applied plan to query for.
          name: name
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryAppliedPlanResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/upgrade/v1beta1/authority:
    get:
      tags:
        - Query
      summary: Returns the account with authority to conduct upgrades
      operationId: EvidenceQuery_Authority
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryAuthorityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      tags:
        - Query
      summary: CurrentPlan queries the current upgrade plan.
      operationId: EvidenceQuery_CurrentPlan
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryCurrentPlanResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      tags:
        - Query
      summary: ModuleVersions queries the list of module versions from state.
      operationId: EvidenceQuery_ModuleVersions
      parameters:
        - type: string
          description: |-
            module_name is a field to query a specific module
            consensus version from state. Leaving this empty will
            fetch the full list of module versions from state
          name: module_name
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryModuleVersionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      tags:
        - Query
      summary: |-
        UpgradedConsensusState queries the consensus state that will serve
        as a trusted kernel for the next version of this chain. It will only be
        stored at the last height of this chain.
        UpgradedConsensusState RPC not supported with legacy querier
        This rpc is deprecated now that IBC has its own replacement
        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      operationId: EvidenceQuery_UpgradedConsensusState
      parameters:
        - type: string
          format: int64
          description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          name: last_height
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.applications.interchain_accounts.controller.v1.Msg/RegisterInterchainAccount:
    post:
      tags:
        - Msg
      summary: RegisterInterchainAccount defines a rpc handler for MsgRegisterInterchainAccount.
      operationId: ControllerMsg_RegisterInterchainAccount
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.applications.interchain_accounts.controller.v1.Msg/SendTx:
    post:
      tags:
        - Msg
      summary: SendTx defines a rpc handler for MsgSendTx.
      operationId: ControllerMsg_SendTx
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgSendTx'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.applications.interchain_accounts.controller.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: UpdateParams defines a rpc handler for MsgUpdateParams.
      operationId: ControllerMsg_UpdateParams
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.applications.interchain_accounts.host.v1.Msg/ModuleQuerySafe:
    post:
      tags:
        - Msg
      summary: ModuleQuerySafe defines a rpc handler for MsgModuleQuerySafe.
      operationId: ControllerMsg_ModuleQuerySafe
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafe'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.applications.interchain_accounts.host.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: UpdateParams defines a rpc handler for MsgUpdateParams.
      operationId: ControllerMsg_UpdateParamsMixin179
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.applications.transfer.v1.Msg/Transfer:
    post:
      tags:
        - Msg
      summary: Transfer defines a rpc handler method for MsgTransfer.
      operationId: ControllerMsg_Transfer
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.MsgTransfer'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.MsgTransferResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.applications.transfer.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: UpdateParams defines a rpc handler for MsgUpdateParams.
      operationId: ControllerMsg_UpdateParamsMixin190
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/Acknowledgement:
    post:
      tags:
        - Msg
      summary: Acknowledgement defines a rpc handler method for MsgAcknowledgement.
      operationId: ControllerMsg_Acknowledgement
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgAcknowledgement'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgAcknowledgementResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/ChannelCloseConfirm:
    post:
      tags:
        - Msg
      summary: |-
        ChannelCloseConfirm defines a rpc handler method for
        MsgChannelCloseConfirm.
      operationId: ControllerMsg_ChannelCloseConfirm
      parameters:
        - description: |-
            MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B
            to acknowledge the change of channel state to CLOSED on Chain A.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseConfirm'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseConfirmResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/ChannelCloseInit:
    post:
      tags:
        - Msg
      summary: ChannelCloseInit defines a rpc handler method for MsgChannelCloseInit.
      operationId: ControllerMsg_ChannelCloseInit
      parameters:
        - description: |-
            MsgChannelCloseInit defines a msg sent by a Relayer to Chain A
            to close a channel with Chain B.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseInit'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelCloseInitResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/ChannelOpenAck:
    post:
      tags:
        - Msg
      summary: ChannelOpenAck defines a rpc handler method for MsgChannelOpenAck.
      operationId: ControllerMsg_ChannelOpenAck
      parameters:
        - description: |-
            MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge
            the change of channel state to TRYOPEN on Chain B.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenAck'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenAckResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/ChannelOpenConfirm:
    post:
      tags:
        - Msg
      summary: ChannelOpenConfirm defines a rpc handler method for MsgChannelOpenConfirm.
      operationId: ControllerMsg_ChannelOpenConfirm
      parameters:
        - description: |-
            MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to
            acknowledge the change of channel state to OPEN on Chain A.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenConfirm'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenConfirmResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/ChannelOpenInit:
    post:
      tags:
        - Msg
      summary: ChannelOpenInit defines a rpc handler method for MsgChannelOpenInit.
      operationId: ControllerMsg_ChannelOpenInit
      parameters:
        - description: |-
            MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It
            is called by a relayer on Chain A.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenInit'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenInitResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/ChannelOpenTry:
    post:
      tags:
        - Msg
      summary: ChannelOpenTry defines a rpc handler method for MsgChannelOpenTry.
      operationId: ControllerMsg_ChannelOpenTry
      parameters:
        - description: |-
            MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
            on Chain B. The version field within the Channel field has been deprecated. Its
            value will be ignored by core IBC.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenTry'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgChannelOpenTryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/RecvPacket:
    post:
      tags:
        - Msg
      summary: RecvPacket defines a rpc handler method for MsgRecvPacket.
      operationId: ControllerMsg_RecvPacket
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgRecvPacket'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgRecvPacketResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/Timeout:
    post:
      tags:
        - Msg
      summary: Timeout defines a rpc handler method for MsgTimeout.
      operationId: ControllerMsg_Timeout
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgTimeout'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgTimeoutResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v1.Msg/TimeoutOnClose:
    post:
      tags:
        - Msg
      summary: TimeoutOnClose defines a rpc handler method for MsgTimeoutOnClose.
      operationId: ControllerMsg_TimeoutOnClose
      parameters:
        - description: MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgTimeoutOnClose'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.MsgTimeoutOnCloseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v2.Msg/Acknowledgement:
    post:
      tags:
        - Msg
      summary: Acknowledgement defines a rpc handler method for MsgAcknowledgement.
      operationId: ControllerMsg_AcknowledgementMixin198
      parameters:
        - description: MsgAcknowledgement receives incoming IBC acknowledgement.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgAcknowledgement'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgAcknowledgementResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v2.Msg/RecvPacket:
    post:
      tags:
        - Msg
      summary: RecvPacket defines a rpc handler method for MsgRecvPacket.
      operationId: ControllerMsg_RecvPacketMixin198
      parameters:
        - description: MsgRecvPacket receives an incoming IBC packet.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgRecvPacket'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgRecvPacketResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v2.Msg/SendPacket:
    post:
      tags:
        - Msg
      summary: SendPacket defines a rpc handler method for MsgSendPacket.
      operationId: ControllerMsg_SendPacket
      parameters:
        - description: MsgSendPacket sends an outgoing IBC packet.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgSendPacket'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgSendPacketResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.channel.v2.Msg/Timeout:
    post:
      tags:
        - Msg
      summary: Timeout defines a rpc handler method for MsgTimeout.
      operationId: ControllerMsg_TimeoutMixin198
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgTimeout'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.MsgTimeoutResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/CreateClient:
    post:
      tags:
        - Msg
      summary: CreateClient defines a rpc handler method for MsgCreateClient.
      operationId: ControllerMsg_CreateClient
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgCreateClient'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgCreateClientResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/DeleteClientCreator:
    post:
      tags:
        - Msg
      summary: DeleteClientCreator defines a rpc handler method for MsgDeleteClientCreator.
      operationId: ControllerMsg_DeleteClientCreator
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgDeleteClientCreator'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgDeleteClientCreatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/IBCSoftwareUpgrade:
    post:
      tags:
        - Msg
      summary: IBCSoftwareUpgrade defines a rpc handler method for MsgIBCSoftwareUpgrade.
      operationId: ControllerMsg_IBCSoftwareUpgrade
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgIBCSoftwareUpgrade'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/RecoverClient:
    post:
      tags:
        - Msg
      summary: RecoverClient defines a rpc handler method for MsgRecoverClient.
      operationId: ControllerMsg_RecoverClient
      parameters:
        - description: MsgRecoverClient defines the message used to recover a frozen or expired client.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgRecoverClient'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgRecoverClientResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/SubmitMisbehaviour:
    post:
      tags:
        - Msg
      summary: SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
      operationId: ControllerMsg_SubmitMisbehaviour
      parameters:
        - description: |-
            MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
            light client misbehaviour.
            This message has been deprecated. Use MsgUpdateClient instead.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgSubmitMisbehaviour'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgSubmitMisbehaviourResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/UpdateClient:
    post:
      tags:
        - Msg
      summary: UpdateClient defines a rpc handler method for MsgUpdateClient.
      operationId: ControllerMsg_UpdateClient
      parameters:
        - description: |-
            MsgUpdateClient defines an sdk.Msg to update a IBC client state using
            the given client message.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgUpdateClient'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgUpdateClientResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/UpdateClientParams:
    post:
      tags:
        - Msg
      summary: UpdateClientParams defines a rpc handler method for MsgUpdateParams.
      operationId: ControllerMsg_UpdateClientParams
      parameters:
        - description: MsgUpdateParams defines the sdk.Msg type to update the client parameters.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v1.Msg/UpgradeClient:
    post:
      tags:
        - Msg
      summary: UpgradeClient defines a rpc handler method for MsgUpgradeClient.
      operationId: ControllerMsg_UpgradeClient
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgUpgradeClient'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.MsgUpgradeClientResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v2.Msg/RegisterCounterparty:
    post:
      tags:
        - Msg
      summary: RegisterCounterparty defines a rpc handler method for MsgRegisterCounterparty.
      operationId: ControllerMsg_RegisterCounterparty
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v2.MsgRegisterCounterparty'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v2.MsgRegisterCounterpartyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.client.v2.Msg/UpdateClientConfig:
    post:
      tags:
        - Msg
      summary: UpdateClientConfig defines a rpc handler method for MsgUpdateClientConfig.
      operationId: ControllerMsg_UpdateClientConfig
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v2.MsgUpdateClientConfig'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v2.MsgUpdateClientConfigResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.connection.v1.Msg/ConnectionOpenAck:
    post:
      tags:
        - Msg
      summary: ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      operationId: ControllerMsg_ConnectionOpenAck
      parameters:
        - description: |-
            MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
            acknowledge the change of connection state to TRYOPEN on Chain B.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenAck'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenAckResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.connection.v1.Msg/ConnectionOpenConfirm:
    post:
      tags:
        - Msg
      summary: |-
        ConnectionOpenConfirm defines a rpc handler method for
        MsgConnectionOpenConfirm.
      operationId: ControllerMsg_ConnectionOpenConfirm
      parameters:
        - description: |-
            MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
            acknowledge the change of connection state to OPEN on Chain A.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenConfirm'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenConfirmResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.connection.v1.Msg/ConnectionOpenInit:
    post:
      tags:
        - Msg
      summary: ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      operationId: ControllerMsg_ConnectionOpenInit
      parameters:
        - description: |-
            MsgConnectionOpenInit defines the msg sent by an account on Chain A to
            initialize a connection with Chain B.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenInit'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenInitResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.connection.v1.Msg/ConnectionOpenTry:
    post:
      tags:
        - Msg
      summary: ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      operationId: ControllerMsg_ConnectionOpenTry
      parameters:
        - description: |-
            MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
            connection on Chain B.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenTry'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgConnectionOpenTryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.core.connection.v1.Msg/UpdateConnectionParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateConnectionParams defines a rpc handler method for
        MsgUpdateParams.
      operationId: ControllerMsg_UpdateConnectionParams
      parameters:
        - description: MsgUpdateParams defines the sdk.Msg type to update the connection parameters.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.lightclients.wasm.v1.Msg/MigrateContract:
    post:
      tags:
        - Msg
      summary: MigrateContract defines a rpc handler method for MsgMigrateContract.
      operationId: ControllerMsg_MigrateContract
      parameters:
        - description: MsgMigrateContract defines the request type for the MigrateContract rpc.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgMigrateContract'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgMigrateContractResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.lightclients.wasm.v1.Msg/RemoveChecksum:
    post:
      tags:
        - Msg
      summary: RemoveChecksum defines a rpc handler method for MsgRemoveChecksum.
      operationId: ControllerMsg_RemoveChecksum
      parameters:
        - description: MsgRemoveChecksum defines the request type for the MsgRemoveChecksum rpc.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgRemoveChecksum'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc.lightclients.wasm.v1.Msg/StoreCode:
    post:
      tags:
        - Msg
      summary: StoreCode defines a rpc handler method for MsgStoreCode.
      operationId: ControllerMsg_StoreCode
      parameters:
        - description: MsgStoreCode defines the request type for the StoreCode rpc.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgStoreCode'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.MsgStoreCodeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/interchain_accounts/controller/v1/owners/{owner}/connections/{connection_id}:
    get:
      tags:
        - Query
      summary: InterchainAccount returns the interchain account address for a given owner address on a given connection
      operationId: ControllerQuery_InterchainAccount
      parameters:
        - type: string
          name: owner
          in: path
          required: true
        - type: string
          name: connection_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/interchain_accounts/controller/v1/params:
    get:
      tags:
        - Query
      summary: Params queries all parameters of the ICA controller submodule.
      operationId: ControllerQuery_Params
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/interchain_accounts/host/v1/params:
    get:
      tags:
        - Query
      summary: Params queries all parameters of the ICA host submodule.
      operationId: ControllerQuery_ParamsMixin178
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address:
    get:
      tags:
        - Query
      summary: EscrowAddress returns the escrow address for a particular port and channel id.
      operationId: ControllerQuery_EscrowAddress
      parameters:
        - type: string
          description: unique channel identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: unique port identifier
          name: port_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.QueryEscrowAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/transfer/v1/denom_hashes/{trace}:
    get:
      tags:
        - Query
      summary: DenomHash queries a denomination hash information.
      operationId: ControllerQuery_DenomHash
      parameters:
        - pattern: .+
          type: string
          description: The denomination trace ([port_id]/[channel_id])+/[denom]
          name: trace
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.QueryDenomHashResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/transfer/v1/denoms:
    get:
      tags:
        - Query
      summary: Denoms queries all denominations
      operationId: ControllerQuery_Denoms
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.QueryDenomsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/transfer/v1/denoms/{hash}:
    get:
      tags:
        - Query
      summary: Denom queries a denomination
      operationId: ControllerQuery_Denom
      parameters:
        - pattern: .+
          type: string
          description: hash (in hex format) or denom (full denom with ibc prefix) of the on chain denomination.
          name: hash
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.QueryDenomResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/transfer/v1/params:
    get:
      tags:
        - Query
      summary: Params queries all parameters of the ibc-transfer module.
      operationId: ControllerQuery_ParamsMixin187
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/apps/transfer/v1/total_escrow/{denom}:
    get:
      tags:
        - Query
      summary: TotalEscrowForDenom returns the total amount of tokens in escrow based on the denom.
      operationId: ControllerQuery_TotalEscrowForDenom
      parameters:
        - pattern: .+
          type: string
          name: denom
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels:
    get:
      tags:
        - Query
      summary: Channels queries all the IBC channels of a chain.
      operationId: ControllerQuery_Channels
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryChannelsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}:
    get:
      tags:
        - Query
      summary: Channel queries an IBC Channel.
      operationId: ControllerQuery_Channel
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryChannelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state:
    get:
      tags:
        - Query
      summary: |-
        ChannelClientState queries for the client state for the channel associated
        with the provided channel identifiers.
      operationId: ControllerQuery_ChannelClientState
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryChannelClientStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
        - Query
      summary: |-
        ChannelConsensusState queries for the consensus state for the channel
        associated with the provided channel identifiers.
      operationId: ControllerQuery_ChannelConsensusState
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - type: string
          format: uint64
          description: revision number of the consensus state
          name: revision_number
          in: path
          required: true
        - type: string
          format: uint64
          description: revision height of the consensus state
          name: revision_height
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryChannelConsensusStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence:
    get:
      tags:
        - Query
      summary: NextSequenceReceive returns the next receive sequence for a given channel.
      operationId: ControllerQuery_NextSequenceReceive
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryNextSequenceReceiveResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence_send:
    get:
      tags:
        - Query
      summary: NextSequenceSend returns the next send sequence for a given channel.
      operationId: ControllerQuery_NextSequenceSend
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryNextSequenceSendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements:
    get:
      tags:
        - Query
      summary: |-
        PacketAcknowledgements returns all the packet acknowledgements associated
        with a channel.
      operationId: ControllerQuery_PacketAcknowledgements
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
        - type: array
          items:
            type: string
            format: uint64
          collectionFormat: multi
          description: list of packet sequences
          name: packet_commitment_sequences
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryPacketAcknowledgementsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}:
    get:
      tags:
        - Query
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      operationId: ControllerQuery_PacketAcknowledgement
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - type: string
          format: uint64
          description: packet sequence
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryPacketAcknowledgementResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments:
    get:
      tags:
        - Query
      summary: |-
        PacketCommitments returns all the packet commitments hashes associated
        with a channel.
      operationId: ControllerQuery_PacketCommitments
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryPacketCommitmentsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      tags:
        - Query
      summary: |-
        UnreceivedAcks returns all the unreceived IBC acknowledgements associated
        with a channel and sequences.
      operationId: ControllerQuery_UnreceivedAcks
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - minItems: 1
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: csv
          description: list of acknowledgement sequences
          name: packet_ack_sequences
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryUnreceivedAcksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets:
    get:
      tags:
        - Query
      summary: |-
        UnreceivedPackets returns all the unreceived IBC packets associated with a
        channel and sequences.
      operationId: ControllerQuery_UnreceivedPackets
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - minItems: 1
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: csv
          description: list of packet sequences
          name: packet_commitment_sequences
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryUnreceivedPacketsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}:
    get:
      tags:
        - Query
      summary: PacketCommitment queries a stored packet commitment hash.
      operationId: ControllerQuery_PacketCommitment
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - type: string
          format: uint64
          description: packet sequence
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryPacketCommitmentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}:
    get:
      tags:
        - Query
      summary: |-
        PacketReceipt queries if a given packet sequence has been received on the
        queried chain
      operationId: ControllerQuery_PacketReceipt
      parameters:
        - type: string
          description: channel unique identifier
          name: channel_id
          in: path
          required: true
        - type: string
          description: port unique identifier
          name: port_id
          in: path
          required: true
        - type: string
          format: uint64
          description: packet sequence
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryPacketReceiptResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v1/connections/{connection}/channels:
    get:
      tags:
        - Query
      summary: |-
        ConnectionChannels queries all the channels associated with a connection
        end.
      operationId: ControllerQuery_ConnectionChannels
      parameters:
        - type: string
          description: connection unique identifier
          name: connection
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v1.QueryConnectionChannelsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/next_sequence_send:
    get:
      tags:
        - Query
      summary: NextSequenceSend returns the next send sequence for a given channel.
      operationId: ControllerQuery_NextSequenceSendMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryNextSequenceSendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/packet_acknowledgements:
    get:
      tags:
        - Query
      summary: PacketAcknowledgements returns all packet acknowledgements associated with a channel.
      operationId: ControllerQuery_PacketAcknowledgementsMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
        - type: array
          items:
            type: string
            format: uint64
          collectionFormat: multi
          description: list of packet sequences
          name: packet_commitment_sequences
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryPacketAcknowledgementsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/packet_acks/{sequence}:
    get:
      tags:
        - Query
      summary: PacketAcknowledgement queries a stored acknowledgement commitment hash.
      operationId: ControllerQuery_PacketAcknowledgementMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: uint64
          description: packet sequence
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryPacketAcknowledgementResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments:
    get:
      tags:
        - Query
      summary: PacketCommitments queries a stored packet commitment hash.
      operationId: ControllerQuery_PacketCommitmentsMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryPacketCommitmentsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      tags:
        - Query
      summary: UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a channel and sequences.
      operationId: ControllerQuery_UnreceivedAcksMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
        - minItems: 1
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: csv
          description: list of acknowledgement sequences
          name: packet_ack_sequences
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryUnreceivedAcksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments/{sequences}/unreceived_packets:
    get:
      tags:
        - Query
      summary: UnreceivedPackets returns all the unreceived IBC packets associated with a channel and sequences.
      operationId: ControllerQuery_UnreceivedPacketsMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
        - minItems: 1
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: csv
          description: list of packet sequences
          name: sequences
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryUnreceivedPacketsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments/{sequence}:
    get:
      tags:
        - Query
      summary: PacketCommitment queries a stored packet commitment hash.
      operationId: ControllerQuery_PacketCommitmentMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: uint64
          description: packet sequence
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryPacketCommitmentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/channel/v2/clients/{client_id}/packet_receipts/{sequence}:
    get:
      tags:
        - Query
      summary: PacketReceipt queries a stored packet receipt.
      operationId: ControllerQuery_PacketReceiptMixin197
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: uint64
          description: packet sequence
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.channel.v2.QueryPacketReceiptResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/client_creator/{client_id}:
    get:
      tags:
        - Query
      summary: ClientCreator queries the creator of a given client.
      operationId: ControllerQuery_ClientCreator
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryClientCreatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/client_states:
    get:
      tags:
        - Query
      summary: ClientStates queries all the IBC light clients of a chain.
      operationId: ControllerQuery_ClientStates
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryClientStatesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/client_states/{client_id}:
    get:
      tags:
        - Query
      summary: ClientState queries an IBC light client.
      operationId: ControllerQuery_ClientState
      parameters:
        - type: string
          description: client state unique identifier
          name: client_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryClientStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/client_status/{client_id}:
    get:
      tags:
        - Query
      summary: Status queries the status of an IBC client.
      operationId: ControllerQuery_ClientStatus
      parameters:
        - type: string
          description: client unique identifier
          name: client_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryClientStatusResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/consensus_states/{client_id}:
    get:
      tags:
        - Query
      summary: |-
        ConsensusStates queries all the consensus state associated with a given
        client.
      operationId: ControllerQuery_ConsensusStates
      parameters:
        - type: string
          description: client identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryConsensusStatesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/consensus_states/{client_id}/heights:
    get:
      tags:
        - Query
      summary: ConsensusStateHeights queries the height of every consensus states associated with a given client.
      operationId: ControllerQuery_ConsensusStateHeights
      parameters:
        - type: string
          description: client identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryConsensusStateHeightsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
        - Query
      summary: |-
        ConsensusState queries a consensus state associated with a client state at
        a given height.
      operationId: ControllerQuery_ConsensusState
      parameters:
        - type: string
          description: client identifier
          name: client_id
          in: path
          required: true
        - type: string
          format: uint64
          description: consensus state revision number
          name: revision_number
          in: path
          required: true
        - type: string
          format: uint64
          description: consensus state revision height
          name: revision_height
          in: path
          required: true
        - type: boolean
          description: |-
            latest_height overrides the height field and queries the latest stored
            ConsensusState
          name: latest_height
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryConsensusStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/params:
    get:
      tags:
        - Query
      summary: ClientParams queries all parameters of the ibc client submodule.
      operationId: ControllerQuery_ClientParams
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryClientParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/upgraded_client_states:
    get:
      tags:
        - Query
      summary: UpgradedClientState queries an Upgraded IBC light client.
      operationId: ControllerQuery_UpgradedClientState
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryUpgradedClientStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      tags:
        - Query
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      operationId: ControllerQuery_UpgradedConsensusState
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryUpgradedConsensusStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v1/verify_membership:
    post:
      tags:
        - Query
      summary: VerifyMembership queries an IBC light client for proof verification of a value at a given key path.
      operationId: ControllerQuery_VerifyMembership
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryVerifyMembershipRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v1.QueryVerifyMembershipResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v2/config/{client_id}:
    get:
      tags:
        - Query
      summary: Config queries the IBC client v2 configuration for a given client.
      operationId: ControllerQuery_Config
      parameters:
        - type: string
          description: client state unique identifier
          name: client_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v2.QueryConfigResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/client/v2/counterparty_info/{client_id}:
    get:
      tags:
        - Query
      summary: CounterpartyInfo queries an IBC light counter party info.
      operationId: ControllerQuery_CounterpartyInfo
      parameters:
        - type: string
          description: client state unique identifier
          name: client_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.client.v2.QueryCounterpartyInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/connection/v1/client_connections/{client_id}:
    get:
      tags:
        - Query
      summary: |-
        ClientConnections queries the connection paths associated with a client
        state.
      operationId: ControllerQuery_ClientConnections
      parameters:
        - type: string
          description: client identifier associated with a connection
          name: client_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.QueryClientConnectionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/connection/v1/connections:
    get:
      tags:
        - Query
      summary: Connections queries all the IBC connections of a chain.
      operationId: ControllerQuery_Connections
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/connection/v1/connections/{connection_id}:
    get:
      tags:
        - Query
      summary: Connection queries an IBC connection end.
      operationId: ControllerQuery_Connection
      parameters:
        - type: string
          description: connection unique identifier
          name: connection_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/connection/v1/connections/{connection_id}/client_state:
    get:
      tags:
        - Query
      summary: |-
        ConnectionClientState queries the client state associated with the
        connection.
      operationId: ControllerQuery_ConnectionClientState
      parameters:
        - type: string
          description: connection identifier
          name: connection_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionClientStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
        - Query
      summary: |-
        ConnectionConsensusState queries the consensus state associated with the
        connection.
      operationId: ControllerQuery_ConnectionConsensusState
      parameters:
        - type: string
          description: connection identifier
          name: connection_id
          in: path
          required: true
        - type: string
          format: uint64
          name: revision_number
          in: path
          required: true
        - type: string
          format: uint64
          name: revision_height
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionConsensusStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/core/connection/v1/params:
    get:
      tags:
        - Query
      summary: ConnectionParams queries all parameters of the ibc connection submodule.
      operationId: ControllerQuery_ConnectionParams
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.core.connection.v1.QueryConnectionParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/lightclients/wasm/v1/checksums:
    get:
      tags:
        - Query
      summary: Get all Wasm checksums
      operationId: ControllerQuery_Checksums
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.QueryChecksumsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /ibc/lightclients/wasm/v1/checksums/{checksum}/code:
    get:
      tags:
        - Query
      summary: Get Wasm code for given checksum
      operationId: ControllerQuery_Code
      parameters:
        - type: string
          description: checksum is a hex encoded string of the code stored.
          name: checksum
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ibc.lightclients.wasm.v1.QueryCodeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.da.v0.Msg/PublishData:
    post:
      tags:
        - Msg
      summary: PublishData
      operationId: GithubComsunriselayersunriseMsg_PublishData
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgPublishData'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgPublishDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.da.v0.Msg/RegisterProofDeputy:
    post:
      tags:
        - Msg
      summary: RegisterProofDeputy
      operationId: GithubComsunriselayersunriseMsg_RegisterProofDeputy
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgRegisterProofDeputy'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgRegisterProofDeputyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.da.v0.Msg/SubmitInvalidity:
    post:
      tags:
        - Msg
      summary: SubmitInvalidity
      operationId: GithubComsunriselayersunriseMsg_SubmitInvalidity
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgSubmitInvalidity'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgSubmitInvalidityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.da.v0.Msg/SubmitValidityProof:
    post:
      tags:
        - Msg
      summary: SubmitValidityProof
      operationId: GithubComsunriselayersunriseMsg_SubmitValidityProof
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgSubmitValidityProof'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgSubmitValidityProofResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.da.v0.Msg/UnregisterProofDeputy:
    post:
      tags:
        - Msg
      summary: UnregisterProofDeputy
      operationId: GithubComsunriselayersunriseMsg_UnregisterProofDeputy
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgUnregisterProofDeputy'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgUnregisterProofDeputyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.da.v0.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParams
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.fee.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParamsMixin11
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.fee.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.fee.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquidityincentive.v1.Msg/ClaimBribes:
    post:
      tags:
        - Msg
      summary: ClaimBribes
      operationId: GithubComsunriselayersunriseMsg_ClaimBribes
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgClaimBribes'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgClaimBribesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquidityincentive.v1.Msg/RegisterBribe:
    post:
      tags:
        - Msg
      summary: RegisterBribe
      operationId: GithubComsunriselayersunriseMsg_RegisterBribe
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgRegisterBribe'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgRegisterBribeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquidityincentive.v1.Msg/StartNewEpoch:
    post:
      tags:
        - Msg
      summary: StartNewEpoch
      operationId: GithubComsunriselayersunriseMsg_StartNewEpoch
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgStartNewEpoch'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgStartNewEpochResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquidityincentive.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParamsMixin19
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquidityincentive.v1.Msg/VoteGauge:
    post:
      tags:
        - Msg
      summary: VoteGauge
      operationId: GithubComsunriselayersunriseMsg_VoteGauge
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgVoteGauge'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.MsgVoteGaugeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquiditypool.v1.Msg/ClaimRewards:
    post:
      tags:
        - Msg
      summary: ClaimRewards
      operationId: GithubComsunriselayersunriseMsg_ClaimRewards
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgClaimRewards'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgClaimRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquiditypool.v1.Msg/CreatePool:
    post:
      tags:
        - Msg
      summary: CreatePool
      operationId: GithubComsunriselayersunriseMsg_CreatePool
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgCreatePool'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgCreatePoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquiditypool.v1.Msg/CreatePosition:
    post:
      tags:
        - Msg
      summary: CreatePosition
      operationId: GithubComsunriselayersunriseMsg_CreatePosition
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgCreatePosition'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgCreatePositionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquiditypool.v1.Msg/DecreaseLiquidity:
    post:
      tags:
        - Msg
      summary: DecreaseLiquidity
      operationId: GithubComsunriselayersunriseMsg_DecreaseLiquidity
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgDecreaseLiquidity'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgDecreaseLiquidityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquiditypool.v1.Msg/IncreaseLiquidity:
    post:
      tags:
        - Msg
      summary: IncreaseLiquidity
      operationId: GithubComsunriselayersunriseMsg_IncreaseLiquidity
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgIncreaseLiquidity'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgIncreaseLiquidityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.liquiditypool.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParamsMixin28
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.lockup.v1.Msg/ClaimRewards:
    post:
      tags:
        - Msg
      summary: ClaimRewards
      operationId: GithubComsunriselayersunriseMsg_ClaimRewardsMixin33
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgClaimRewards'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgClaimRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.lockup.v1.Msg/InitLockupAccount:
    post:
      tags:
        - Msg
      summary: InitLockupAccount
      operationId: GithubComsunriselayersunriseMsg_InitLockupAccount
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgInitLockupAccount'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgInitLockupAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.lockup.v1.Msg/NonVotingDelegate:
    post:
      tags:
        - Msg
      summary: NonVotingDelegate
      operationId: GithubComsunriselayersunriseMsg_NonVotingDelegate
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgNonVotingDelegate'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgNonVotingDelegateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.lockup.v1.Msg/NonVotingUndelegate:
    post:
      tags:
        - Msg
      summary: NonVotingUndelegate
      operationId: GithubComsunriselayersunriseMsg_NonVotingUndelegate
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgNonVotingUndelegate'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgNonVotingUndelegateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.lockup.v1.Msg/Send:
    post:
      tags:
        - Msg
      summary: Send
      operationId: GithubComsunriselayersunriseMsg_Send
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgSend'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgSendResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.lockup.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParamsMixin33
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.shareclass.v1.Msg/ClaimRewards:
    post:
      tags:
        - Msg
      summary: ClaimRewards
      operationId: GithubComsunriselayersunriseMsg_ClaimRewardsMixin38
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgClaimRewards'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgClaimRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.shareclass.v1.Msg/CreateValidator:
    post:
      tags:
        - Msg
      summary: CreateValidator
      operationId: GithubComsunriselayersunriseMsg_CreateValidator
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgCreateValidator'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgCreateValidatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.shareclass.v1.Msg/NonVotingDelegate:
    post:
      tags:
        - Msg
      summary: NonVotingDelegate
      operationId: GithubComsunriselayersunriseMsg_NonVotingDelegateMixin38
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgNonVotingDelegate'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgNonVotingDelegateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.shareclass.v1.Msg/NonVotingUndelegate:
    post:
      tags:
        - Msg
      summary: NonVotingUndelegate
      operationId: GithubComsunriselayersunriseMsg_NonVotingUndelegateMixin38
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgNonVotingUndelegate'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgNonVotingUndelegateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.shareclass.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParamsMixin38
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.swap.v1.Msg/SwapExactAmountIn:
    post:
      tags:
        - Msg
      summary: SwapExactAmountIn
      operationId: GithubComsunriselayersunriseMsg_SwapExactAmountIn
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.swap.v1.MsgSwapExactAmountIn'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.MsgSwapExactAmountInResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.swap.v1.Msg/SwapExactAmountOut:
    post:
      tags:
        - Msg
      summary: SwapExactAmountOut
      operationId: GithubComsunriselayersunriseMsg_SwapExactAmountOut
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.swap.v1.MsgSwapExactAmountOut'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.MsgSwapExactAmountOutResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.swap.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParamsMixin46
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.swap.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.tokenconverter.v1.Msg/Convert:
    post:
      tags:
        - Msg
      summary: Convert
      operationId: GithubComsunriselayersunriseMsg_Convert
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.tokenconverter.v1.MsgConvert'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.tokenconverter.v1.MsgConvertResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise.tokenconverter.v1.Msg/UpdateParams:
    post:
      tags:
        - Msg
      summary: |-
        UpdateParams defines a (governance) operation for updating the module
        parameters. The authority defaults to the x/gov module account.
      operationId: GithubComsunriselayersunriseMsg_UpdateParamsMixin51
      parameters:
        - description: MsgUpdateParams is the Msg/UpdateParams request type.
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.tokenconverter.v1.MsgUpdateParams'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.tokenconverter.v1.MsgUpdateParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/all-invalidity:
    get:
      tags:
        - Query
      summary: AllInvalidity queries all invalidity reports
      operationId: GithubComsunriselayersunriseQuery_AllInvalidity
      parameters:
        - type: string
          name: metadata_uri
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryAllInvalidityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/all-published-data:
    get:
      tags:
        - Query
      summary: AllPublishedData queries published data
      operationId: GithubComsunriselayersunriseQuery_AllPublishedData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryAllPublishedDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/all-validity-proofs:
    get:
      tags:
        - Query
      summary: AllValidityProofs queries all validity proofs
      operationId: GithubComsunriselayersunriseQuery_AllValidityProofs
      parameters:
        - type: string
          name: metadata_uri
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryAllValidityProofsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/invalidity:
    get:
      tags:
        - Query
      summary: Invalidity queries invalidity report
      operationId: GithubComsunriselayersunriseQuery_Invalidity
      parameters:
        - type: string
          name: metadata_uri
          in: query
        - type: string
          name: sender_address
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryInvalidityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/params:
    get:
      tags:
        - Query
      summary: Params queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_Params
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/proof-deputy:
    get:
      tags:
        - Query
      summary: ProofDeputy
      operationId: GithubComsunriselayersunriseQuery_ProofDeputy
      parameters:
        - type: string
          name: validator_address
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryProofDeputyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/published-data:
    get:
      tags:
        - Query
      summary: PublishedData queries published data
      operationId: GithubComsunriselayersunriseQuery_PublishedData
      parameters:
        - type: string
          name: metadata_uri
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryPublishedDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/validator-shard-indices:
    get:
      tags:
        - Query
      summary: ValidatorShardIndices
      operationId: GithubComsunriselayersunriseQuery_ValidatorShardIndices
      parameters:
        - type: string
          name: validator_address
          in: query
        - type: string
          format: uint64
          name: shard_count
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryValidatorShardIndicesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/validity-proof:
    get:
      tags:
        - Query
      summary: ValidityProof queries validity proof from the validator
      operationId: GithubComsunriselayersunriseQuery_ValidityProof
      parameters:
        - type: string
          name: metadata_uri
          in: query
        - type: string
          name: validator_address
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryValidityProofResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/da/v0/zkp-proof-threshold:
    get:
      tags:
        - Query
      summary: ZkpProofThreshold
      operationId: GithubComsunriselayersunriseQuery_ZkpProofThreshold
      parameters:
        - type: string
          format: uint64
          name: shard_count
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.da.v0.QueryZkpProofThresholdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/fee/v1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_ParamsMixin10
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.fee.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/bribe-allocations:
    get:
      tags:
        - Query
      summary: BribeAllocations queries bribe allocations with an optional filter for address.
      operationId: GithubComsunriselayersunriseQuery_BribeAllocations
      parameters:
        - type: string
          description: Optional filter by address. If empty, not applied.
          name: address
          in: query
        - type: string
          description: Optional filter by epoch_id. If empty, not applied.
          name: epoch_id
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryBribeAllocationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/bribe-allocations/{address}/{epoch_id}/{pool_id}:
    get:
      tags:
        - Query
      summary: BribeAllocation queries a BribeAllocation by address, epoch ID, and pool ID.
      operationId: GithubComsunriselayersunriseQuery_BribeAllocation
      parameters:
        - type: string
          name: address
          in: path
          required: true
        - type: string
          name: epoch_id
          in: path
          required: true
        - type: string
          name: pool_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryBribeAllocationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/bribes:
    get:
      tags:
        - Query
      summary: Bribes queries bribes with optional filters for epoch_id and pool_id.
      operationId: GithubComsunriselayersunriseQuery_Bribes
      parameters:
        - type: string
          description: Optional filter by epoch_id. If empty, not applied.
          name: epoch_id
          in: query
        - type: string
          description: Optional filter by pool_id. If empty, not applied.
          name: pool_id
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryBribesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/bribes/{id}:
    get:
      tags:
        - Query
      summary: Bribe queries a Bribe by its ID.
      operationId: GithubComsunriselayersunriseQuery_Bribe
      parameters:
        - type: string
          format: uint64
          name: id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryBribeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/epochs:
    get:
      tags:
        - Query
      summary: Epochs
      operationId: GithubComsunriselayersunriseQuery_Epochs
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryEpochsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/epochs/{id}:
    get:
      tags:
        - Query
      summary: Epoch
      operationId: GithubComsunriselayersunriseQuery_Epoch
      parameters:
        - type: string
          format: uint64
          name: id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryEpochResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_ParamsMixin18
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/tally:
    get:
      tags:
        - Query
      summary: TallyResult queries the tally of next epoch.
      operationId: GithubComsunriselayersunriseQuery_TallyResult
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryTallyResultResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/votes:
    get:
      tags:
        - Query
      summary: Votes
      operationId: GithubComsunriselayersunriseQuery_Votes
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryVotesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquidityincentive/v1/votes/{address}:
    get:
      tags:
        - Query
      summary: Vote
      operationId: GithubComsunriselayersunriseQuery_Vote
      parameters:
        - type: string
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquidityincentive.v1.QueryVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/address/{address}/positions:
    get:
      tags:
        - Query
      summary: AddressPositions
      operationId: GithubComsunriselayersunriseQuery_AddressPositions
      parameters:
        - type: string
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryAddressPositionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_ParamsMixin26
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/pools:
    get:
      tags:
        - Query
      summary: Pools
      operationId: GithubComsunriselayersunriseQuery_Pools
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryPoolsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/pools/{id}:
    get:
      tags:
        - Query
      summary: Pool
      operationId: GithubComsunriselayersunriseQuery_Pool
      parameters:
        - type: string
          format: uint64
          name: id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/pools/{pool_id}/calculations/create-position:
    get:
      tags:
        - Query
      summary: Query calculation another amount of create position
      operationId: GithubComsunriselayersunriseQuery_CalculationCreatePosition
      parameters:
        - type: string
          format: uint64
          name: pool_id
          in: path
          required: true
        - type: string
          name: lower_tick
          in: query
        - type: string
          name: upper_tick
          in: query
        - type: string
          name: amount
          in: query
        - type: string
          name: denom
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryCalculationCreatePositionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/pools/{pool_id}/positions:
    get:
      tags:
        - Query
      summary: PoolPositions
      operationId: GithubComsunriselayersunriseQuery_PoolPositions
      parameters:
        - type: string
          format: uint64
          name: pool_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryPoolPositionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/positions:
    get:
      tags:
        - Query
      summary: Positions
      operationId: GithubComsunriselayersunriseQuery_Positions
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryPositionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/positions/{id}:
    get:
      tags:
        - Query
      summary: Position
      operationId: GithubComsunriselayersunriseQuery_Position
      parameters:
        - type: string
          format: uint64
          name: id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryPositionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/positions/{id}/calculations/increase-liquidity:
    get:
      tags:
        - Query
      summary: Query calculation another amount of increase liquidity
      operationId: GithubComsunriselayersunriseQuery_CalculationIncreaseLiquidity
      parameters:
        - type: string
          format: uint64
          name: id
          in: path
          required: true
        - type: string
          name: amount_in
          in: query
        - type: string
          name: denom_in
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryCalculationIncreaseLiquidityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/liquiditypool/v1/positions/{id}/fees:
    get:
      tags:
        - Query
      summary: Query fees by position id
      operationId: GithubComsunriselayersunriseQuery_PositionFees
      parameters:
        - type: string
          format: uint64
          name: id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.liquiditypool.v1.QueryPositionFeesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/lockup/v1/lockup-accounts/{owner}:
    get:
      tags:
        - Query
      summary: LockupAccounts queries all lockup accounts for a given owner.
      operationId: GithubComsunriselayersunriseQuery_LockupAccounts
      parameters:
        - type: string
          name: owner
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.QueryLockupAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/lockup/v1/lockup-accounts/{owner}/{lockup_account_id}:
    get:
      tags:
        - Query
      summary: LockupAccount queries a lockup account for a given owner and id.
      operationId: GithubComsunriselayersunriseQuery_LockupAccount
      parameters:
        - type: string
          name: owner
          in: path
          required: true
        - type: string
          format: uint64
          name: lockup_account_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.QueryLockupAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/lockup/v1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_ParamsMixin32
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/lockup/v1/spendable-amount/{owner}/{lockup_account_id}:
    get:
      tags:
        - Query
      summary: SpendableAmount queries the spendable amount for a given owner and id.
      operationId: GithubComsunriselayersunriseQuery_SpendableAmount
      parameters:
        - type: string
          name: owner
          in: path
          required: true
        - type: string
          format: uint64
          name: lockup_account_id
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.lockup.v1.QuerySpendableAmountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/shareclass/v1/bonded/{address}:
    get:
      tags:
        - Query
      summary: AddressBonded
      operationId: GithubComsunriselayersunriseQuery_AddressBonded
      parameters:
        - type: string
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.QueryAddressBondedResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/shareclass/v1/calculate-bonding-amount/{validator_address}/{share}:
    get:
      tags:
        - Query
      summary: CalculateBondingAmount
      operationId: GithubComsunriselayersunriseQuery_CalculateBondingAmount
      parameters:
        - type: string
          name: validator_address
          in: path
          required: true
        - type: string
          name: share
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.QueryCalculateBondingAmountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/shareclass/v1/calculate-share/{validator_address}/{amount}:
    get:
      tags:
        - Query
      summary: CalculateShare
      operationId: GithubComsunriselayersunriseQuery_CalculateShare
      parameters:
        - type: string
          name: validator_address
          in: path
          required: true
        - type: string
          name: amount
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.QueryCalculateShareResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/shareclass/v1/claimable-rewards/{address}/{validator_address}:
    get:
      tags:
        - Query
      summary: ClaimableRewards
      operationId: GithubComsunriselayersunriseQuery_ClaimableRewards
      parameters:
        - type: string
          name: address
          in: path
          required: true
        - type: string
          name: validator_address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.QueryClaimableRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/shareclass/v1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_ParamsMixin37
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/shareclass/v1/unbonding/{address}:
    get:
      tags:
        - Query
      summary: AddressUnbonding
      operationId: GithubComsunriselayersunriseQuery_AddressUnbonding
      parameters:
        - type: string
          description: cosmos.base.query.v1beta1.PageRequest pagination = 2;
          name: address
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.shareclass.v1.QueryAddressUnbondingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/swap/v1/calculations/swap-exact-amount-in:
    post:
      tags:
        - Query
      summary: CalculationSwapExactAmountIn
      operationId: GithubComsunriselayersunriseQuery_CalculationSwapExactAmountIn
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountInRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountInResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/swap/v1/calculations/swap-exact-amount-out:
    post:
      tags:
        - Query
      summary: CalculationSwapExactAmountOut
      operationId: GithubComsunriselayersunriseQuery_CalculationSwapExactAmountOut
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountOutRequest'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountOutResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/swap/v1/in-flight-packets/incoming:
    get:
      tags:
        - Query
      summary: IncomingInFlightPackets
      operationId: GithubComsunriselayersunriseQuery_IncomingInFlightPackets
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryIncomingInFlightPacketsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/swap/v1/in-flight-packets/incoming/{src_port_id}/{src_channel_id}/{sequence}:
    get:
      tags:
        - Query
      summary: IncomingInFlightPacket
      operationId: GithubComsunriselayersunriseQuery_IncomingInFlightPacket
      parameters:
        - type: string
          name: src_port_id
          in: path
          required: true
        - type: string
          name: src_channel_id
          in: path
          required: true
        - type: string
          format: uint64
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryIncomingInFlightPacketResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/swap/v1/in-flight-packets/outgoing:
    get:
      tags:
        - Query
      summary: OutgoingInFlightPackets
      operationId: GithubComsunriselayersunriseQuery_OutgoingInFlightPackets
      parameters:
        - type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          name: pagination.key
          in: query
        - type: string
          format: uint64
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          name: pagination.offset
          in: query
        - type: string
          format: uint64
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          name: pagination.limit
          in: query
        - type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          name: pagination.count_total
          in: query
        - type: boolean
          description: reverse is set to true if results are to be returned in the descending order.
          name: pagination.reverse
          in: query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryOutgoingInFlightPacketsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/swap/v1/in-flight-packets/outgoing/{src_port_id}/{src_channel_id}/{sequence}:
    get:
      tags:
        - Query
      summary: OutgoingInFlightPacket
      operationId: GithubComsunriselayersunriseQuery_OutgoingInFlightPacket
      parameters:
        - type: string
          name: src_port_id
          in: path
          required: true
        - type: string
          name: src_channel_id
          in: path
          required: true
        - type: string
          format: uint64
          name: sequence
          in: path
          required: true
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryOutgoingInFlightPacketResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/swap/v1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_ParamsMixin44
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.swap.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /sunrise/tokenconverter/v1/params:
    get:
      tags:
        - Query
      summary: Parameters queries the parameters of the module.
      operationId: GithubComsunriselayersunriseQuery_ParamsMixin50
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/sunrise.tokenconverter.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/ApplySnapshotChunk:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_ApplySnapshotChunk
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestApplySnapshotChunk'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseApplySnapshotChunk'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/CheckTx:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_CheckTx
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestCheckTx'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseCheckTx'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/Commit:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_Commit
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestCommit'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseCommit'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/Echo:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_Echo
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestEcho'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseEcho'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/ExtendVote:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_ExtendVote
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestExtendVote'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseExtendVote'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/FinalizeBlock:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_FinalizeBlock
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestFinalizeBlock'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseFinalizeBlock'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/Flush:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_Flush
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestFlush'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseFlush'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/Info:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_Info
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestInfo'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseInfo'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/InitChain:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_InitChain
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestInitChain'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseInitChain'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/ListSnapshots:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_ListSnapshots
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestListSnapshots'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseListSnapshots'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/LoadSnapshotChunk:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_LoadSnapshotChunk
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestLoadSnapshotChunk'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseLoadSnapshotChunk'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/OfferSnapshot:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_OfferSnapshot
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestOfferSnapshot'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseOfferSnapshot'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/PrepareProposal:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_PrepareProposal
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestPrepareProposal'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponsePrepareProposal'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/ProcessProposal:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_ProcessProposal
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestProcessProposal'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseProcessProposal'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/Query:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_Query
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestQuery'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseQuery'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
  /tendermint.abci.ABCI/VerifyVoteExtension:
    post:
      tags:
        - ABCI
      operationId: EvidenceABCI_VerifyVoteExtension
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tendermint.abci.RequestVerifyVoteExtension'
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tendermint.abci.ResponseVerifyVoteExtension'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
definitions:
  cosmos.auth.v1beta1.AddressBytesToStringResponse:
    description: AddressBytesToStringResponse is the response type for AddressString rpc method.
    type: object
    properties:
      address_string:
        type: string
  cosmos.auth.v1beta1.AddressStringToBytesResponse:
    description: AddressStringToBytesResponse is the response type for AddressBytes rpc method.
    type: object
    properties:
      address_bytes:
        type: string
        format: byte
  cosmos.auth.v1beta1.BaseAccount:
    description: |-
      BaseAccount defines a base account type. It contains all the necessary fields
      for basic account functionality. Any custom account type should extend this
      type for additional functionality (e.g. vesting).
    type: object
    properties:
      account_number:
        type: string
        format: uint64
      address:
        type: string
      pub_key:
        $ref: '#/definitions/google.protobuf.Any'
      sequence:
        type: string
        format: uint64
  cosmos.auth.v1beta1.Bech32PrefixResponse:
    description: Bech32PrefixResponse is the response type for Bech32Prefix rpc method.
    type: object
    properties:
      bech32_prefix:
        type: string
  cosmos.auth.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/auth parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.auth.v1beta1.Params'
  cosmos.auth.v1beta1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.auth.v1beta1.Params:
    description: Params defines the parameters for the auth module.
    type: object
    properties:
      max_memo_characters:
        type: string
        format: uint64
      sig_verify_cost_ed25519:
        type: string
        format: uint64
      sig_verify_cost_secp256k1:
        type: string
        format: uint64
      tx_sig_limit:
        type: string
        format: uint64
      tx_size_cost_per_byte:
        type: string
        format: uint64
  cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
    type: object
    title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method
    properties:
      account_address:
        type: string
  cosmos.auth.v1beta1.QueryAccountInfoResponse:
    description: QueryAccountInfoResponse is the Query/AccountInfo response type.
    type: object
    properties:
      info:
        description: info is the account info which is represented by BaseAccount.
        $ref: '#/definitions/cosmos.auth.v1beta1.BaseAccount'
  cosmos.auth.v1beta1.QueryAccountResponse:
    description: QueryAccountResponse is the response type for the Query/Account RPC method.
    type: object
    properties:
      account:
        description: account defines the account of the corresponding address.
        $ref: '#/definitions/google.protobuf.Any'
  cosmos.auth.v1beta1.QueryAccountsResponse:
    description: QueryAccountsResponse is the response type for the Query/Accounts RPC method.
    type: object
    properties:
      accounts:
        type: array
        title: accounts are the existing accounts
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
    description: QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method.
    type: object
    properties:
      account:
        $ref: '#/definitions/google.protobuf.Any'
  cosmos.auth.v1beta1.QueryModuleAccountsResponse:
    description: QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
  cosmos.auth.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/cosmos.auth.v1beta1.Params'
  cosmos.authz.v1beta1.Grant:
    description: |-
      Grant gives permissions to execute
      the provide method with expiration time.
    type: object
    properties:
      authorization:
        $ref: '#/definitions/google.protobuf.Any'
      expiration:
        type: string
        format: date-time
        title: |-
          time when the grant will expire and will be pruned. If null, then the grant
          doesn't have a time expiration (other conditions  in `authorization`
          may apply to invalidate the grant)
  cosmos.authz.v1beta1.GrantAuthorization:
    type: object
    title: |-
      GrantAuthorization extends a grant with both the addresses of the grantee and granter.
      It is used in genesis.proto and query.proto
    properties:
      authorization:
        $ref: '#/definitions/google.protobuf.Any'
      expiration:
        type: string
        format: date-time
      grantee:
        type: string
      granter:
        type: string
  cosmos.authz.v1beta1.MsgExec:
    description: |-
      MsgExec attempts to execute the provided messages using
      authorizations granted to the grantee. Each message should have only
      one signer corresponding to the granter of the authorization.
    type: object
    properties:
      grantee:
        type: string
      msgs:
        description: |-
          Execute Msg.
          The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg))
          triple and validate it.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
  cosmos.authz.v1beta1.MsgExecResponse:
    description: MsgExecResponse defines the Msg/MsgExecResponse response type.
    type: object
    properties:
      results:
        type: array
        items:
          type: string
          format: byte
  cosmos.authz.v1beta1.MsgGrant:
    description: |-
      MsgGrant is a request type for Grant method. It declares authorization to the grantee
      on behalf of the granter with the provided expiration time.
    type: object
    properties:
      grant:
        $ref: '#/definitions/cosmos.authz.v1beta1.Grant'
      grantee:
        type: string
      granter:
        type: string
  cosmos.authz.v1beta1.MsgGrantResponse:
    description: MsgGrantResponse defines the Msg/MsgGrant response type.
    type: object
  cosmos.authz.v1beta1.MsgRevoke:
    description: |-
      MsgRevoke revokes any authorization with the provided sdk.Msg type on the
      granter's account with that has been granted to the grantee.
    type: object
    properties:
      grantee:
        type: string
      granter:
        type: string
      msg_type_url:
        type: string
  cosmos.authz.v1beta1.MsgRevokeResponse:
    description: MsgRevokeResponse defines the Msg/MsgRevokeResponse response type.
    type: object
  cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
    description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
    type: object
    properties:
      grants:
        description: grants is a list of grants granted to the grantee.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.authz.v1beta1.GrantAuthorization'
      pagination:
        description: pagination defines an pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.authz.v1beta1.QueryGranterGrantsResponse:
    description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
    type: object
    properties:
      grants:
        description: grants is a list of grants granted by the granter.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.authz.v1beta1.GrantAuthorization'
      pagination:
        description: pagination defines an pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.authz.v1beta1.QueryGrantsResponse:
    description: QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
    type: object
    properties:
      grants:
        description: authorizations is a list of grants granted for grantee by granter.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.authz.v1beta1.Grant'
      pagination:
        description: pagination defines an pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.autocli.v1.AppOptionsRequest:
    description: AppOptionsRequest is the RemoteInfoService/AppOptions request type.
    type: object
  cosmos.autocli.v1.AppOptionsResponse:
    description: AppOptionsResponse is the RemoteInfoService/AppOptions response type.
    type: object
    properties:
      module_options:
        description: module_options is a map of module name to autocli module options.
        type: object
        additionalProperties:
          $ref: '#/definitions/cosmos.autocli.v1.ModuleOptions'
  cosmos.autocli.v1.FlagOptions:
    description: |-
      FlagOptions are options for flags generated from rpc request fields.
      By default, all request fields are configured as flags based on the
      kebab-case name of the field. Fields can be turned into positional arguments
      instead by using RpcCommandOptions.positional_args.
    type: object
    properties:
      default_value:
        description: default_value is the default value as text.
        type: string
      deprecated:
        description: deprecated is the usage text to show if this flag is deprecated.
        type: string
      hidden:
        type: boolean
        title: hidden hides the flag from help/usage text
      name:
        description: name is an alternate name to use for the field flag.
        type: string
      shorthand:
        description: shorthand is a one-letter abbreviated flag.
        type: string
      shorthand_deprecated:
        description: shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated.
        type: string
      usage:
        description: usage is the help message.
        type: string
  cosmos.autocli.v1.ModuleOptions:
    description: ModuleOptions describes the CLI options for a Cosmos SDK module.
    type: object
    properties:
      query:
        description: query describes the queries commands for the module.
        $ref: '#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor'
      tx:
        description: tx describes the tx commands for the module.
        $ref: '#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor'
  cosmos.autocli.v1.PositionalArgDescriptor:
    description: PositionalArgDescriptor describes a positional argument.
    type: object
    properties:
      optional:
        description: |-
          optional makes the last positional parameter optional.
          Note: It is mutually exclusive with varargs.
        type: boolean
      proto_field:
        description: |-
          proto_field specifies the proto field to use as the positional arg. Any
          fields used as positional args will not have a flag generated.
        type: string
      varargs:
        description: |-
          varargs makes a positional parameter a varargs parameter. This can only be
          applied to last positional parameter and the proto_field must a repeated
          field. Note: It is mutually exclusive with optional.
        type: boolean
  cosmos.autocli.v1.RpcCommandOptions:
    description: |-
      RpcCommandOptions specifies options for commands generated from protobuf
      rpc methods.
    type: object
    properties:
      alias:
        description: alias is an array of aliases that can be used instead of the first word in Use.
        type: array
        items:
          type: string
      deprecated:
        description: deprecated defines, if this command is deprecated and should print this string when used.
        type: string
      example:
        description: example is examples of how to use the command.
        type: string
      flag_options:
        description: |-
          flag_options are options for flags generated from rpc request fields.
          By default all request fields are configured as flags. They can
          also be configured as positional args instead using positional_args.
        type: object
        additionalProperties:
          $ref: '#/definitions/cosmos.autocli.v1.FlagOptions'
      gov_proposal:
        description: |-
          gov_proposal specifies whether autocli should generate a gov proposal transaction for this rpc method.
          Normally autocli generates a transaction containing the message and broadcast it.
          However, when true, autocli generates a proposal transaction containing the message and broadcast it.
          This option is ineffective for query commands.
        type: boolean
      long:
        description: long is the long message shown in the 'help <this-command>' output.
        type: string
      positional_args:
        description: positional_args specifies positional arguments for the command.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.autocli.v1.PositionalArgDescriptor'
      rpc_method:
        description: |-
          rpc_method is short name of the protobuf rpc method that this command is
          generated from.
        type: string
      short:
        description: short is the short description shown in the 'help' output.
        type: string
      skip:
        description: skip specifies whether to skip this rpc method when generating commands.
        type: boolean
      suggest_for:
        description: |-
          suggest_for is an array of command names for which this command will be suggested -
          similar to aliases but only suggests.
        type: array
        items:
          type: string
      use:
        description: |-
          use is the one-line usage method. It also allows specifying an alternate
          name for the command as the first word of the usage text.

          By default the name of an rpc command is the kebab-case short name of the
          rpc method.
        type: string
      version:
        description: |-
          version defines the version for this command. If this value is non-empty and the command does not
          define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
          will print content of the "Version" variable. A shorthand "v" flag will also be added if the
          command does not define one.
        type: string
  cosmos.autocli.v1.ServiceCommandDescriptor:
    description: ServiceCommandDescriptor describes a CLI command based on a protobuf service.
    type: object
    properties:
      enhance_custom_command:
        description: |-
          enhance_custom_commands specifies whether to skip the service when generating commands, if a custom command already
          exists, or enhance the existing command. If set to true, the custom command will be enhanced with the services from
          gRPC. otherwise when a custom command exists, no commands will be generated for the service.
        type: boolean
      rpc_command_options:
        description: |-
          rpc_command_options are options for commands generated from rpc methods.
          If no options are specified for a given rpc method on the service, a
          command will be generated for that method with the default options.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.autocli.v1.RpcCommandOptions'
      service:
        description: |-
          service is the fully qualified name of the protobuf service to build
          the command from. It can be left empty if sub_commands are used instead
          which may be the case if a module provides multiple tx and/or query services.
        type: string
      short:
        description: short is an optional parameter used to override the short description of the auto generated command.
        type: string
      sub_commands:
        description: |-
          sub_commands is a map of optional sub-commands for this command based on
          different protobuf services. The map key is used as the name of the
          sub-command.
        type: object
        additionalProperties:
          $ref: '#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor'
  cosmos.bank.v1beta1.DenomOwner:
    description: |-
      DenomOwner defines structure representing an account that owns or holds a
      particular denominated token. It contains the account address and account
      balance of the denominated token.
    type: object
    properties:
      address:
        description: address defines the address that owns a particular denomination.
        type: string
      balance:
        description: balance is the balance of the denominated coin for an account.
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.bank.v1beta1.DenomUnit:
    description: |-
      DenomUnit represents a struct that describes a given
      denomination unit of the basic token.
    type: object
    properties:
      aliases:
        type: array
        title: aliases is a list of string aliases for the given denom
        items:
          type: string
      denom:
        description: denom represents the string name of the given denom unit (e.g uatom).
        type: string
      exponent:
        description: |-
          exponent represents power of 10 exponent that one must
          raise the base_denom to in order to equal the given DenomUnit's denom
          1 denom = 10^exponent base_denom
          (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
          exponent = 6, thus: 1 atom = 10^6 uatom).
        type: integer
        format: int64
  cosmos.bank.v1beta1.Input:
    description: Input models transaction input.
    type: object
    properties:
      address:
        type: string
      coins:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.bank.v1beta1.Metadata:
    description: |-
      Metadata represents a struct that describes
      a basic token.
    type: object
    properties:
      base:
        description: base represents the base denom (should be the DenomUnit with exponent = 0).
        type: string
      denom_units:
        type: array
        title: denom_units represents the list of DenomUnit's for a given coin
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.DenomUnit'
      description:
        type: string
      display:
        description: |-
          display indicates the suggested denom that should be
          displayed in clients.
        type: string
      name:
        type: string
        title: 'name defines the name of the token (eg: Cosmos Atom)'
      symbol:
        description: |-
          symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
          be the same as the display.
        type: string
      uri:
        description: URI to a document (on or off-chain) that contains additional information. Optional.
        type: string
      uri_hash:
        description: |-
          URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
          the document didn't change. Optional.
        type: string
  cosmos.bank.v1beta1.MsgMultiSend:
    description: MsgMultiSend represents an arbitrary multi-in, multi-out send message.
    type: object
    properties:
      inputs:
        description: |-
          Inputs, despite being `repeated`, only allows one sender input. This is
          checked in MsgMultiSend's ValidateBasic.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.Input'
      outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.Output'
  cosmos.bank.v1beta1.MsgMultiSendResponse:
    description: MsgMultiSendResponse defines the Msg/MultiSend response type.
    type: object
  cosmos.bank.v1beta1.MsgSend:
    description: MsgSend represents a message to send coins from one account to another.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      from_address:
        type: string
      to_address:
        type: string
  cosmos.bank.v1beta1.MsgSendResponse:
    description: MsgSendResponse defines the Msg/Send response type.
    type: object
  cosmos.bank.v1beta1.MsgSetSendEnabled:
    description: |-
      MsgSetSendEnabled is the Msg/SetSendEnabled request type.

      Only entries to add/update/delete need to be included.
      Existing SendEnabled entries that are not included in this
      message are left unchanged.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module.
        type: string
      send_enabled:
        description: send_enabled is the list of entries to add or update.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.SendEnabled'
      use_default_for:
        description: |-
          use_default_for is a list of denoms that should use the params.default_send_enabled value.
          Denoms listed here will have their SendEnabled entries deleted.
          If a denom is included that doesn't have a SendEnabled entry,
          it will be ignored.
        type: array
        items:
          type: string
  cosmos.bank.v1beta1.MsgSetSendEnabledResponse:
    description: MsgSetSendEnabledResponse defines the Msg/SetSendEnabled response type.
    type: object
  cosmos.bank.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/bank parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.bank.v1beta1.Params'
  cosmos.bank.v1beta1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.bank.v1beta1.Output:
    description: Output models transaction outputs.
    type: object
    properties:
      address:
        type: string
      coins:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.bank.v1beta1.Params:
    description: Params defines the parameters for the bank module.
    type: object
    properties:
      default_send_enabled:
        type: boolean
      send_enabled:
        description: |-
          Deprecated: Use of SendEnabled in params is deprecated.
          For genesis, use the newly added send_enabled field in the genesis object.
          Storage, lookup, and manipulation of this information is now in the keeper.

          As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.SendEnabled'
  cosmos.bank.v1beta1.QueryAllBalancesResponse:
    description: |-
      QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
      method.
    type: object
    properties:
      balances:
        description: balances is the balances of all the coins.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.bank.v1beta1.QueryBalanceResponse:
    description: QueryBalanceResponse is the response type for the Query/Balance RPC method.
    type: object
    properties:
      balance:
        description: balance is the balance of the coin.
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse:
    description: |-
      QueryDenomMetadataByQueryStringResponse is the response type for the Query/DenomMetadata RPC
      method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
    type: object
    properties:
      metadata:
        description: metadata describes and provides all the client information for the requested token.
        $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
  cosmos.bank.v1beta1.QueryDenomMetadataResponse:
    description: |-
      QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
      method.
    type: object
    properties:
      metadata:
        description: metadata describes and provides all the client information for the requested token.
        $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
  cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse:
    description: QueryDenomOwnersByQueryResponse defines the RPC response of a DenomOwnersByQuery RPC query.
    type: object
    properties:
      denom_owners:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.DenomOwner'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.bank.v1beta1.QueryDenomOwnersResponse:
    description: QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.
    type: object
    properties:
      denom_owners:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.DenomOwner'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
    description: |-
      QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
      method.
    type: object
    properties:
      metadatas:
        description: metadata provides the client information for all the registered tokens.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.bank.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse defines the response type for querying x/bank parameters.
    type: object
    properties:
      params:
        description: params provides the parameters of the bank module.
        $ref: '#/definitions/cosmos.bank.v1beta1.Params'
  cosmos.bank.v1beta1.QuerySendEnabledResponse:
    description: QuerySendEnabledResponse defines the RPC response of a SendEnable query.
    type: object
    properties:
      pagination:
        description: |-
          pagination defines the pagination in the response. This field is only
          populated if the denoms field in the request is empty.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      send_enabled:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.bank.v1beta1.SendEnabled'
  cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
    description: |-
      QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
      querying an account's spendable balance for a specific denom.
    type: object
    properties:
      balance:
        description: balance is the balance of the coin.
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
    description: |-
      QuerySpendableBalancesResponse defines the gRPC response structure for querying
      an account's spendable balances.
    type: object
    properties:
      balances:
        description: balances is the spendable balances of all the coins.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.bank.v1beta1.QuerySupplyOfResponse:
    description: QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method.
    type: object
    properties:
      amount:
        description: amount is the supply of the coin.
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.bank.v1beta1.QueryTotalSupplyResponse:
    type: object
    title: |-
      QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
      method
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      supply:
        type: array
        title: supply is the supply of the coins
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.bank.v1beta1.SendEnabled:
    description: |-
      SendEnabled maps coin denom to a send_enabled status (whether a denom is
      sendable).
    type: object
    properties:
      denom:
        type: string
      enabled:
        type: boolean
  cosmos.base.abci.v1beta1.ABCIMessageLog:
    description: ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
    type: object
    properties:
      events:
        description: |-
          Events contains a slice of Event objects that were emitted during some
          execution.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.abci.v1beta1.StringEvent'
      log:
        type: string
      msg_index:
        type: integer
        format: int64
  cosmos.base.abci.v1beta1.Attribute:
    description: |-
      Attribute defines an attribute wrapper where the key and value are
      strings instead of raw bytes.
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  cosmos.base.abci.v1beta1.GasInfo:
    description: GasInfo defines tx execution gas context.
    type: object
    properties:
      gas_used:
        description: GasUsed is the amount of gas actually consumed.
        type: string
        format: uint64
      gas_wanted:
        description: GasWanted is the maximum units of work we allow this tx to perform.
        type: string
        format: uint64
  cosmos.base.abci.v1beta1.Result:
    description: Result is the union of ResponseFormat and ResponseCheckTx.
    type: object
    properties:
      data:
        description: |-
          Data is any data returned from message or handler execution. It MUST be
          length prefixed in order to separate data from multiple message executions.
          Deprecated. This field is still populated, but prefer msg_response instead
          because it also contains the Msg response typeURL.
        type: string
        format: byte
      events:
        description: |-
          Events contains a slice of Event objects that were emitted during message
          or handler execution.
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Event'
      log:
        description: Log contains the log information from message or handler execution.
        type: string
      msg_responses:
        description: msg_responses contains the Msg handler responses type packed in Anys.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
  cosmos.base.abci.v1beta1.StringEvent:
    description: |-
      StringEvent defines en Event object wrapper where all the attributes
      contain key/value pairs that are strings instead of raw bytes.
    type: object
    properties:
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.abci.v1beta1.Attribute'
      type:
        type: string
  cosmos.base.abci.v1beta1.TxResponse:
    description: |-
      TxResponse defines a structure containing relevant tx data and metadata. The
      tags are stringified and the log is JSON decoded.
    type: object
    properties:
      code:
        description: Response code.
        type: integer
        format: int64
      codespace:
        type: string
        title: Namespace for the Code
      data:
        description: Result bytes, if any.
        type: string
      events:
        description: |-
          Events defines all the events emitted by processing a transaction. Note,
          these events include those emitted by processing all the messages and those
          emitted from the ante. Whereas Logs contains the events, with
          additional metadata, emitted only by processing the messages.
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Event'
      gas_used:
        description: Amount of gas consumed by transaction.
        type: string
        format: int64
      gas_wanted:
        description: Amount of gas requested for transaction.
        type: string
        format: int64
      height:
        type: string
        format: int64
        title: The block height
      info:
        description: Additional information. May be non-deterministic.
        type: string
      logs:
        description: The output of the application's logger (typed). May be non-deterministic.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.abci.v1beta1.ABCIMessageLog'
      raw_log:
        description: |-
          The output of the application's logger (raw string). May be
          non-deterministic.
        type: string
      timestamp:
        description: |-
          Time of the previous block. For heights > 1, it's the weighted median of
          the timestamps of the valid votes in the block.LastCommit. For height == 1,
          it's genesis time.
        type: string
      tx:
        description: The request transaction bytes.
        $ref: '#/definitions/google.protobuf.Any'
      txhash:
        description: The transaction hash.
        type: string
  cosmos.base.node.v1beta1.ConfigResponse:
    description: ConfigResponse defines the response structure for the Config gRPC query.
    type: object
    properties:
      halt_height:
        type: string
        format: uint64
      minimum_gas_price:
        type: string
      pruning_interval:
        type: string
      pruning_keep_recent:
        type: string
  cosmos.base.node.v1beta1.StatusResponse:
    description: StateResponse defines the response structure for the status of a node.
    type: object
    properties:
      app_hash:
        type: string
        format: byte
        title: app hash of the current block
      earliest_store_height:
        type: string
        format: uint64
        title: earliest block height available in the store
      height:
        type: string
        format: uint64
        title: current block height
      timestamp:
        type: string
        format: date-time
        title: block height timestamp
      validator_hash:
        type: string
        format: byte
        title: validator hash provided by the consensus header
  cosmos.base.query.v1beta1.PageRequest:
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    type: object
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
    properties:
      count_total:
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        type: boolean
      key:
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        type: string
        format: byte
      limit:
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        type: string
        format: uint64
      offset:
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        type: string
        format: uint64
      reverse:
        description: reverse is set to true if results are to be returned in the descending order.
        type: boolean
  cosmos.base.query.v1beta1.PageResponse:
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
    type: object
    properties:
      next_key:
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently. It will be empty if
          there are no more results.
        type: string
        format: byte
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
  cosmos.base.reflection.v1beta1.ListAllInterfacesResponse:
    description: ListAllInterfacesResponse is the response type of the ListAllInterfaces RPC.
    type: object
    properties:
      interface_names:
        description: interface_names is an array of all the registered interfaces.
        type: array
        items:
          type: string
  cosmos.base.reflection.v1beta1.ListImplementationsResponse:
    description: |-
      ListImplementationsResponse is the response type of the ListImplementations
      RPC.
    type: object
    properties:
      implementation_message_names:
        type: array
        items:
          type: string
  cosmos.base.reflection.v2alpha1.AuthnDescriptor:
    type: object
    title: |-
      AuthnDescriptor provides information on how to sign transactions without relying
      on the online RPCs GetTxMetadata and CombineUnsignedTxAndSignatures
    properties:
      sign_modes:
        type: array
        title: sign_modes defines the supported signature algorithm
        items:
          type: object
          $ref: '#/definitions/cosmos.base.reflection.v2alpha1.SigningModeDescriptor'
  cosmos.base.reflection.v2alpha1.ChainDescriptor:
    type: object
    title: ChainDescriptor describes chain information of the application
    properties:
      id:
        type: string
        title: id is the chain id
  cosmos.base.reflection.v2alpha1.CodecDescriptor:
    type: object
    title: CodecDescriptor describes the registered interfaces and provides metadata information on the types
    properties:
      interfaces:
        type: array
        title: interfaces is a list of the registerted interfaces descriptors
        items:
          type: object
          $ref: '#/definitions/cosmos.base.reflection.v2alpha1.InterfaceDescriptor'
  cosmos.base.reflection.v2alpha1.ConfigurationDescriptor:
    type: object
    title: ConfigurationDescriptor contains metadata information on the sdk.Config
    properties:
      bech32_account_address_prefix:
        type: string
        title: bech32_account_address_prefix is the account address prefix
  cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse:
    type: object
    title: GetAuthnDescriptorResponse is the response returned by the GetAuthnDescriptor RPC
    properties:
      authn:
        title: authn describes how to authenticate to the application when sending transactions
        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.AuthnDescriptor'
  cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse:
    type: object
    title: GetChainDescriptorResponse is the response returned by the GetChainDescriptor RPC
    properties:
      chain:
        title: chain describes application chain information
        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.ChainDescriptor'
  cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse:
    type: object
    title: GetCodecDescriptorResponse is the response returned by the GetCodecDescriptor RPC
    properties:
      codec:
        title: codec describes the application codec such as registered interfaces and implementations
        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.CodecDescriptor'
  cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse:
    type: object
    title: GetConfigurationDescriptorResponse is the response returned by the GetConfigurationDescriptor RPC
    properties:
      config:
        title: config describes the application's sdk.Config
        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.ConfigurationDescriptor'
  cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse:
    type: object
    title: GetQueryServicesDescriptorResponse is the response returned by the GetQueryServicesDescriptor RPC
    properties:
      queries:
        title: queries provides information on the available queryable services
        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.QueryServicesDescriptor'
  cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse:
    type: object
    title: GetTxDescriptorResponse is the response returned by the GetTxDescriptor RPC
    properties:
      tx:
        title: |-
          tx provides information on msgs that can be forwarded to the application
          alongside the accepted transaction protobuf type
        $ref: '#/definitions/cosmos.base.reflection.v2alpha1.TxDescriptor'
  cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor:
    type: object
    title: |-
      InterfaceAcceptingMessageDescriptor describes a protobuf message which contains
      an interface represented as a google.protobuf.Any
    properties:
      field_descriptor_names:
        type: array
        title: |-
          field_descriptor_names is a list of the protobuf name (not fullname) of the field
          which contains the interface as google.protobuf.Any (the interface is the same, but
          it can be in multiple fields of the same proto message)
        items:
          type: string
      fullname:
        type: string
        title: fullname is the protobuf fullname of the type containing the interface
  cosmos.base.reflection.v2alpha1.InterfaceDescriptor:
    type: object
    title: InterfaceDescriptor describes the implementation of an interface
    properties:
      fullname:
        type: string
        title: fullname is the name of the interface
      interface_accepting_messages:
        type: array
        title: |-
          interface_accepting_messages contains information regarding the proto messages which contain the interface as
          google.protobuf.Any field
        items:
          type: object
          $ref: '#/definitions/cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor'
      interface_implementers:
        type: array
        title: interface_implementers is a list of the descriptors of the interface implementers
        items:
          type: object
          $ref: '#/definitions/cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor'
  cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor:
    type: object
    title: InterfaceImplementerDescriptor describes an interface implementer
    properties:
      fullname:
        type: string
        title: fullname is the protobuf queryable name of the interface implementer
      type_url:
        type: string
        title: |-
          type_url defines the type URL used when marshalling the type as any
          this is required so we can provide type safe google.protobuf.Any marshalling and
          unmarshalling, making sure that we don't accept just 'any' type
          in our interface fields
  cosmos.base.reflection.v2alpha1.MsgDescriptor:
    type: object
    title: MsgDescriptor describes a cosmos-sdk message that can be delivered with a transaction
    properties:
      msg_type_url:
        description: msg_type_url contains the TypeURL of a sdk.Msg.
        type: string
  cosmos.base.reflection.v2alpha1.QueryMethodDescriptor:
    type: object
    title: |-
      QueryMethodDescriptor describes a queryable method of a query service
      no other info is provided beside method name and tendermint queryable path
      because it would be redundant with the grpc reflection service
    properties:
      full_query_path:
        type: string
        title: |-
          full_query_path is the path that can be used to query
          this method via tendermint abci.Query
      name:
        type: string
        title: name is the protobuf name (not fullname) of the method
  cosmos.base.reflection.v2alpha1.QueryServiceDescriptor:
    type: object
    title: QueryServiceDescriptor describes a cosmos-sdk queryable service
    properties:
      fullname:
        type: string
        title: fullname is the protobuf fullname of the service descriptor
      is_module:
        type: boolean
        title: is_module describes if this service is actually exposed by an application's module
      methods:
        type: array
        title: methods provides a list of query service methods
        items:
          type: object
          $ref: '#/definitions/cosmos.base.reflection.v2alpha1.QueryMethodDescriptor'
  cosmos.base.reflection.v2alpha1.QueryServicesDescriptor:
    type: object
    title: QueryServicesDescriptor contains the list of cosmos-sdk queriable services
    properties:
      query_services:
        type: array
        title: query_services is a list of cosmos-sdk QueryServiceDescriptor
        items:
          type: object
          $ref: '#/definitions/cosmos.base.reflection.v2alpha1.QueryServiceDescriptor'
  cosmos.base.reflection.v2alpha1.SigningModeDescriptor:
    type: object
    title: |-
      SigningModeDescriptor provides information on a signing flow of the application
      NOTE(fdymylja): here we could go as far as providing an entire flow on how
      to sign a message given a SigningModeDescriptor, but it's better to think about
      this another time
    properties:
      authn_info_provider_method_fullname:
        type: string
        title: |-
          authn_info_provider_method_fullname defines the fullname of the method to call to get
          the metadata required to authenticate using the provided sign_modes
      name:
        type: string
        title: name defines the unique name of the signing mode
      number:
        type: integer
        format: int32
        title: number is the unique int32 identifier for the sign_mode enum
  cosmos.base.reflection.v2alpha1.TxDescriptor:
    type: object
    title: TxDescriptor describes the accepted transaction type
    properties:
      fullname:
        description: |-
          fullname is the protobuf fullname of the raw transaction type (for instance the tx.Tx type)
          it is not meant to support polymorphism of transaction types, it is supposed to be used by
          reflection clients to understand if they can handle a specific transaction type in an application.
        type: string
      msgs:
        type: array
        title: msgs lists the accepted application messages (sdk.Msg)
        items:
          type: object
          $ref: '#/definitions/cosmos.base.reflection.v2alpha1.MsgDescriptor'
  cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
    description: |-
      ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

      Note: This type is a duplicate of the ResponseQuery proto type defined in
      Tendermint.
    type: object
    properties:
      code:
        type: integer
        format: int64
      codespace:
        type: string
      height:
        type: string
        format: int64
      index:
        type: string
        format: int64
      info:
        type: string
        title: nondeterministic
      key:
        type: string
        format: byte
      log:
        type: string
        title: nondeterministic
      proof_ops:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ProofOps'
      value:
        type: string
        format: byte
  cosmos.base.tendermint.v1beta1.Block:
    description: |-
      Block is tendermint type Block, with the Header proposer address
      field converted to bech32 string.
    type: object
    properties:
      data:
        $ref: '#/definitions/tendermint.types.Data'
      evidence:
        $ref: '#/definitions/tendermint.types.EvidenceList'
      header:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Header'
      last_commit:
        $ref: '#/definitions/tendermint.types.Commit'
  cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
    description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method.
    type: object
    properties:
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        $ref: '#/definitions/tendermint.types.Block'
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      sdk_block:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Block'
  cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
    description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method.
    type: object
    properties:
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        $ref: '#/definitions/tendermint.types.Block'
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      sdk_block:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Block'
  cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
    description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
    type: object
    properties:
      block_height:
        type: string
        format: int64
      pagination:
        description: pagination defines an pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      validators:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Validator'
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
    description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method.
    type: object
    properties:
      application_version:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.VersionInfo'
      default_node_info:
        $ref: '#/definitions/tendermint.p2p.DefaultNodeInfo'
  cosmos.base.tendermint.v1beta1.GetSyncingResponse:
    description: GetSyncingResponse is the response type for the Query/GetSyncing RPC method.
    type: object
    properties:
      syncing:
        type: boolean
  cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
    description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
    type: object
    properties:
      block_height:
        type: string
        format: int64
      pagination:
        description: pagination defines an pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      validators:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Validator'
  cosmos.base.tendermint.v1beta1.Header:
    description: Header defines the structure of a Tendermint block header.
    type: object
    properties:
      app_hash:
        type: string
        format: byte
        title: state after txs from the previous block
      chain_id:
        type: string
      consensus_hash:
        type: string
        format: byte
        title: consensus params for current block
      data_hash:
        type: string
        format: byte
        title: transactions
      evidence_hash:
        description: evidence included in the block
        type: string
        format: byte
        title: consensus info
      height:
        type: string
        format: int64
      last_block_id:
        title: prev block info
        $ref: '#/definitions/tendermint.types.BlockID'
      last_commit_hash:
        description: commit from validators from the last block
        type: string
        format: byte
        title: hashes of block data
      last_results_hash:
        type: string
        format: byte
        title: root hash of all results from the txs from the previous block
      next_validators_hash:
        type: string
        format: byte
        title: validators for the next block
      proposer_address:
        description: |-
          proposer_address is the original block proposer address, formatted as a Bech32 string.
          In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
          for better UX.

          original proposer of the block
        type: string
      time:
        type: string
        format: date-time
      validators_hash:
        description: validators for the current block
        type: string
        format: byte
        title: hashes from the app output from the prev block
      version:
        title: basic block info
        $ref: '#/definitions/tendermint.version.Consensus'
  cosmos.base.tendermint.v1beta1.Module:
    type: object
    title: Module is the type for VersionInfo
    properties:
      path:
        type: string
        title: module path
      sum:
        type: string
        title: checksum
      version:
        type: string
        title: module version
  cosmos.base.tendermint.v1beta1.ProofOp:
    description: |-
      ProofOp defines an operation used for calculating Merkle root. The data could
      be arbitrary format, providing necessary data for example neighbouring node
      hash.

      Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
    type: object
    properties:
      data:
        type: string
        format: byte
      key:
        type: string
        format: byte
      type:
        type: string
  cosmos.base.tendermint.v1beta1.ProofOps:
    description: |-
      ProofOps is Merkle proof defined by the list of ProofOps.

      Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
    type: object
    properties:
      ops:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ProofOp'
  cosmos.base.tendermint.v1beta1.Validator:
    description: Validator is the type for the validator-set.
    type: object
    properties:
      address:
        type: string
      proposer_priority:
        type: string
        format: int64
      pub_key:
        $ref: '#/definitions/google.protobuf.Any'
      voting_power:
        type: string
        format: int64
  cosmos.base.tendermint.v1beta1.VersionInfo:
    description: VersionInfo is the type for the GetNodeInfoResponse message.
    type: object
    properties:
      app_name:
        type: string
      build_deps:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Module'
      build_tags:
        type: string
      cosmos_sdk_version:
        type: string
      git_commit:
        type: string
      go_version:
        type: string
      name:
        type: string
      version:
        type: string
  cosmos.base.v1beta1.Coin:
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
    type: object
    properties:
      amount:
        type: string
      denom:
        type: string
  cosmos.base.v1beta1.DecCoin:
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
    type: object
    properties:
      amount:
        type: string
      denom:
        type: string
  cosmos.benchmark.v1.MsgLoadTest:
    description: MsgLoadTestOps defines a message containing a sequence of load test operations.
    type: object
    properties:
      caller:
        type: string
        format: byte
      ops:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.benchmark.v1.Op'
  cosmos.benchmark.v1.MsgLoadTestResponse:
    description: MsgLoadTestResponse defines a message containing the results of a load test operation.
    type: object
    properties:
      total_errors:
        type: string
        format: uint64
      total_time:
        type: string
        format: uint64
  cosmos.benchmark.v1.Op:
    description: Op is a message describing a benchmark operation.
    type: object
    properties:
      actor:
        type: string
      delete:
        type: boolean
      exists:
        type: boolean
      iterations:
        type: integer
        format: int64
      key_length:
        type: string
        format: uint64
      seed:
        type: string
        format: uint64
      value_length:
        type: string
        format: uint64
  cosmos.circuit.v1.AccountResponse:
    description: AccountResponse is the response type for the Query/Account RPC method.
    type: object
    properties:
      permission:
        $ref: '#/definitions/cosmos.circuit.v1.Permissions'
  cosmos.circuit.v1.AccountsResponse:
    description: AccountsResponse is the response type for the Query/Accounts RPC method.
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.circuit.v1.GenesisAccountPermissions'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.circuit.v1.DisabledListResponse:
    description: DisabledListResponse is the response type for the Query/DisabledList RPC method.
    type: object
    properties:
      disabled_list:
        type: array
        items:
          type: string
  cosmos.circuit.v1.GenesisAccountPermissions:
    type: object
    title: GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
    properties:
      address:
        type: string
      permissions:
        $ref: '#/definitions/cosmos.circuit.v1.Permissions'
  cosmos.circuit.v1.MsgAuthorizeCircuitBreaker:
    description: MsgAuthorizeCircuitBreaker defines the Msg/AuthorizeCircuitBreaker request type.
    type: object
    properties:
      grantee:
        description: grantee is the account authorized with the provided permissions.
        type: string
      granter:
        description: |-
          granter is the granter of the circuit breaker permissions and must have
          LEVEL_SUPER_ADMIN.
        type: string
      permissions:
        description: |-
          permissions are the circuit breaker permissions that the grantee receives.
          These will overwrite any existing permissions. LEVEL_NONE_UNSPECIFIED can
          be specified to revoke all permissions.
        $ref: '#/definitions/cosmos.circuit.v1.Permissions'
  cosmos.circuit.v1.MsgAuthorizeCircuitBreakerResponse:
    description: MsgAuthorizeCircuitBreakerResponse defines the Msg/AuthorizeCircuitBreaker response type.
    type: object
    properties:
      success:
        type: boolean
  cosmos.circuit.v1.MsgResetCircuitBreaker:
    description: MsgResetCircuitBreaker defines the Msg/ResetCircuitBreaker request type.
    type: object
    properties:
      authority:
        description: authority is the account authorized to trip or reset the circuit breaker.
        type: string
      msg_type_urls:
        description: |-
          msg_type_urls specifies a list of Msg type URLs to resume processing. If
          it is left empty all Msg processing for type URLs that the account is
          authorized to trip will resume.
        type: array
        items:
          type: string
  cosmos.circuit.v1.MsgResetCircuitBreakerResponse:
    description: MsgResetCircuitBreakerResponse defines the Msg/ResetCircuitBreaker response type.
    type: object
    properties:
      success:
        type: boolean
  cosmos.circuit.v1.MsgTripCircuitBreaker:
    description: MsgTripCircuitBreaker defines the Msg/TripCircuitBreaker request type.
    type: object
    properties:
      authority:
        description: authority is the account authorized to trip the circuit breaker.
        type: string
      msg_type_urls:
        description: |-
          msg_type_urls specifies a list of type URLs to immediately stop processing.
          IF IT IS LEFT EMPTY, ALL MSG PROCESSING WILL STOP IMMEDIATELY.
          This value is validated against the authority's permissions and if the
          authority does not have permissions to trip the specified msg type URLs
          (or all URLs), the operation will fail.
        type: array
        items:
          type: string
  cosmos.circuit.v1.MsgTripCircuitBreakerResponse:
    description: MsgTripCircuitBreakerResponse defines the Msg/TripCircuitBreaker response type.
    type: object
    properties:
      success:
        type: boolean
  cosmos.circuit.v1.Permissions:
    description: |-
      Permissions are the permissions that an account has to trip
      or reset the circuit breaker.
    type: object
    properties:
      level:
        description: level is the level of permissions granted to this account.
        $ref: '#/definitions/cosmos.circuit.v1.Permissions.Level'
      limit_type_urls:
        description: |-
          limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
          URLs that the account can trip. It is an error to use limit_type_urls with
          a level other than LEVEL_SOME_MSGS.
        type: array
        items:
          type: string
  cosmos.circuit.v1.Permissions.Level:
    description: |-
      Level is the permission level.

       - LEVEL_NONE_UNSPECIFIED: LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
      breaker permissions.
       - LEVEL_SOME_MSGS: LEVEL_SOME_MSGS indicates that the account will have permission to
      trip or reset the circuit breaker for some Msg type URLs. If this level
      is chosen, a non-empty list of Msg type URLs must be provided in
      limit_type_urls.
       - LEVEL_ALL_MSGS: LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
      breaker for Msg's of all type URLs.
       - LEVEL_SUPER_ADMIN: LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
      actions and can grant permissions to other accounts.
    type: string
    default: LEVEL_NONE_UNSPECIFIED
    enum:
      - LEVEL_NONE_UNSPECIFIED
      - LEVEL_SOME_MSGS
      - LEVEL_ALL_MSGS
      - LEVEL_SUPER_ADMIN
  cosmos.consensus.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      abci:
        $ref: '#/definitions/tendermint.types.ABCIParams'
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      block:
        description: |-
          params defines the x/consensus parameters to update.
          VersionsParams is not included in this Msg because it is tracked
          separarately in x/upgrade.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/tendermint.types.BlockParams'
      evidence:
        $ref: '#/definitions/tendermint.types.EvidenceParams'
      validator:
        $ref: '#/definitions/tendermint.types.ValidatorParams'
  cosmos.consensus.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.consensus.v1.QueryParamsResponse:
    description: QueryParamsResponse defines the response type for querying x/consensus parameters.
    type: object
    properties:
      params:
        description: |-
          params are the tendermint consensus params stored in the consensus module.
          Please note that `params.version` is not populated in this response, it is
          tracked separately in the x/upgrade module.
        $ref: '#/definitions/tendermint.types.ConsensusParams'
  cosmos.counter.v1.MsgIncreaseCountResponse:
    description: MsgIncreaseCountResponse is the Msg/Counter response type.
    type: object
    properties:
      new_count:
        description: new_count is the number of times the counter was incremented.
        type: string
        format: int64
  cosmos.counter.v1.MsgIncreaseCounter:
    description: MsgIncreaseCounter defines a count Msg service counter.
    type: object
    properties:
      count:
        description: count is the number of times to increment the counter.
        type: string
        format: int64
      signer:
        description: signer is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
  cosmos.counter.v1.QueryGetCountRequest:
    description: QueryGetCountRequest defines the request type for querying x/mock count.
    type: object
  cosmos.counter.v1.QueryGetCountResponse:
    description: QueryGetCountResponse defines the response type for querying x/mock count.
    type: object
    properties:
      total_count:
        type: string
        format: int64
  cosmos.crisis.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      constant_fee:
        description: constant_fee defines the x/crisis parameter.
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.crisis.v1beta1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.crisis.v1beta1.MsgVerifyInvariant:
    description: MsgVerifyInvariant represents a message to verify a particular invariance.
    type: object
    properties:
      invariant_module_name:
        description: name of the invariant module.
        type: string
      invariant_route:
        description: invariant_route is the msg's invariant route.
        type: string
      sender:
        description: sender is the account address of private key to send coins to fee collector account.
        type: string
  cosmos.crisis.v1beta1.MsgVerifyInvariantResponse:
    description: MsgVerifyInvariantResponse defines the Msg/VerifyInvariant response type.
    type: object
  cosmos.crypto.multisig.v1beta1.CompactBitArray:
    description: |-
      CompactBitArray is an implementation of a space efficient bit array.
      This is used to ensure that the encoded data takes up a minimal amount of
      space after proto encoding.
      This is not thread safe, and is not intended for concurrent usage.
    type: object
    properties:
      elems:
        type: string
        format: byte
      extra_bits_stored:
        type: integer
        format: int64
  cosmos.distribution.v1beta1.DelegationDelegatorReward:
    description: |-
      DelegationDelegatorReward represents the properties
      of a delegator's delegation reward.
    type: object
    properties:
      reward:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
      validator_address:
        type: string
  cosmos.distribution.v1beta1.MsgCommunityPoolSpend:
    description: |-
      MsgCommunityPoolSpend defines a message for sending tokens from the community
      pool to another account. This message is typically executed via a governance
      proposal with the governance module being the executing authority.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      recipient:
        type: string
  cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse:
    description: |-
      MsgCommunityPoolSpendResponse defines the response to executing a
      MsgCommunityPoolSpend message.
    type: object
  cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool:
    description: |-
      DepositValidatorRewardsPool defines the request structure to provide
      additional rewards to delegators from a specific validator.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      depositor:
        type: string
      validator_address:
        type: string
  cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse:
    description: |-
      MsgDepositValidatorRewardsPoolResponse defines the response to executing a
      MsgDepositValidatorRewardsPool message.
    type: object
  cosmos.distribution.v1beta1.MsgFundCommunityPool:
    description: |-
      MsgFundCommunityPool allows an account to directly
      fund the community pool.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      depositor:
        type: string
  cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse:
    description: MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type.
    type: object
  cosmos.distribution.v1beta1.MsgSetWithdrawAddress:
    description: |-
      MsgSetWithdrawAddress sets the withdraw address for
      a delegator (or validator self-delegation).
    type: object
    properties:
      delegator_address:
        type: string
      withdraw_address:
        type: string
  cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse:
    description: |-
      MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
      type.
    type: object
  cosmos.distribution.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/distribution parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.distribution.v1beta1.Params'
  cosmos.distribution.v1beta1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward:
    description: |-
      MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
      from a single validator.
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
  cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse:
    description: |-
      MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
      response type.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission:
    description: |-
      MsgWithdrawValidatorCommission withdraws the full commission to the validator
      address.
    type: object
    properties:
      validator_address:
        type: string
  cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse:
    description: |-
      MsgWithdrawValidatorCommissionResponse defines the
      Msg/WithdrawValidatorCommission response type.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.distribution.v1beta1.Params:
    description: Params defines the set of params for the distribution module.
    type: object
    properties:
      base_proposer_reward:
        description: |-
          Deprecated: The base_proposer_reward field is deprecated and is no longer used
          in the x/distribution module's reward mechanism.
        type: string
      bonus_proposer_reward:
        description: |-
          Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
          in the x/distribution module's reward mechanism.
        type: string
      community_tax:
        type: string
      withdraw_addr_enabled:
        type: boolean
  cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
    description: |-
      QueryCommunityPoolResponse is the response type for the Query/CommunityPool
      RPC method.
    type: object
    properties:
      pool:
        description: pool defines community pool's coins.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
  cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
    description: |-
      QueryDelegationRewardsResponse is the response type for the
      Query/DelegationRewards RPC method.
    type: object
    properties:
      rewards:
        description: rewards defines the rewards accrued by a delegation.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
  cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
    description: |-
      QueryDelegationTotalRewardsResponse is the response type for the
      Query/DelegationTotalRewards RPC method.
    type: object
    properties:
      rewards:
        description: rewards defines all the rewards accrued by a delegator.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.distribution.v1beta1.DelegationDelegatorReward'
      total:
        description: total defines the sum of all the rewards.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
  cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
    description: |-
      QueryDelegatorValidatorsResponse is the response type for the
      Query/DelegatorValidators RPC method.
    type: object
    properties:
      validators:
        description: validators defines the validators a delegator is delegating for.
        type: array
        items:
          type: string
  cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
    description: |-
      QueryDelegatorWithdrawAddressResponse is the response type for the
      Query/DelegatorWithdrawAddress RPC method.
    type: object
    properties:
      withdraw_address:
        description: withdraw_address defines the delegator address to query for.
        type: string
  cosmos.distribution.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/cosmos.distribution.v1beta1.Params'
  cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
    type: object
    title: |-
      QueryValidatorCommissionResponse is the response type for the
      Query/ValidatorCommission RPC method
    properties:
      commission:
        description: commission defines the commission the validator received.
        $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission'
  cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse:
    description: QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method.
    type: object
    properties:
      commission:
        description: commission defines the commission the validator received.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
      operator_address:
        description: operator_address defines the validator operator address.
        type: string
      self_bond_rewards:
        description: self_bond_rewards defines the self delegations rewards.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
  cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
    description: |-
      QueryValidatorOutstandingRewardsResponse is the response type for the
      Query/ValidatorOutstandingRewards RPC method.
    type: object
    properties:
      rewards:
        $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorOutstandingRewards'
  cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
    description: |-
      QueryValidatorSlashesResponse is the response type for the
      Query/ValidatorSlashes RPC method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      slashes:
        description: slashes defines the slashes the validator received.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorSlashEvent'
  cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
    description: |-
      ValidatorAccumulatedCommission represents accumulated commission
      for a validator kept as a running counter, can be withdrawn at any time.
    type: object
    properties:
      commission:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
  cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
    description: |-
      ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
      for a validator inexpensive to track, allows simple sanity checks.
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
  cosmos.distribution.v1beta1.ValidatorSlashEvent:
    description: |-
      ValidatorSlashEvent represents a validator slash event.
      Height is implicit within the store key.
      This is needed to calculate appropriate amount of staking tokens
      for delegations which are withdrawn after a slash has occurred.
    type: object
    properties:
      fraction:
        type: string
      validator_period:
        type: string
        format: uint64
  cosmos.epochs.v1beta1.EpochInfo:
    description: |-
      EpochInfo is a struct that describes the data going into
      a timer defined by the x/epochs module.
    type: object
    properties:
      current_epoch:
        description: |-
          current_epoch is the current epoch number, or in other words,
          how many times has the timer 'ticked'.
          The first tick (current_epoch=1) is defined as
          the first block whose blocktime is greater than the EpochInfo start_time.
        type: string
        format: int64
      current_epoch_start_height:
        type: string
        format: int64
        title: |-
          current_epoch_start_height is the block height at which the current epoch
          started. (The block height at which the timer last ticked)
      current_epoch_start_time:
        description: |-
          current_epoch_start_time describes the start time of the current timer
          interval. The interval is (current_epoch_start_time,
          current_epoch_start_time + duration] When the timer ticks, this is set to
          current_epoch_start_time = last_epoch_start_time + duration only one timer
          tick for a given identifier can occur per block.

          NOTE! The current_epoch_start_time may diverge significantly from the
          wall-clock time the epoch began at. Wall-clock time of epoch start may be
          >> current_epoch_start_time. Suppose current_epoch_start_time = 10,
          duration = 5. Suppose the chain goes offline at t=14, and comes back online
          at t=30, and produces blocks at every successive time. (t=31, 32, etc.)
          * The t=30 block will start the epoch for (10, 15]
          * The t=31 block will start the epoch for (15, 20]
          * The t=32 block will start the epoch for (20, 25]
          * The t=33 block will start the epoch for (25, 30]
          * The t=34 block will start the epoch for (30, 35]
          * The **t=36** block will start the epoch for (35, 40]
        type: string
        format: date-time
      duration:
        description: |-
          duration is the time in between epoch ticks.
          In order for intended behavior to be met, duration should
          be greater than the chains expected block time.
          Duration must be non-zero.
        type: string
      epoch_counting_started:
        description: |-
          epoch_counting_started is a boolean, that indicates whether this
          epoch timer has began yet.
        type: boolean
      identifier:
        description: identifier is a unique reference to this particular timer.
        type: string
      start_time:
        description: |-
          start_time is the time at which the timer first ever ticks.
          If start_time is in the future, the epoch will not begin until the start
          time.
        type: string
        format: date-time
  cosmos.epochs.v1beta1.QueryCurrentEpochResponse:
    description: |-
      QueryCurrentEpochResponse defines the gRPC response structure for
      querying an epoch by its identifier.
    type: object
    properties:
      current_epoch:
        type: string
        format: int64
  cosmos.epochs.v1beta1.QueryEpochInfosResponse:
    description: |-
      QueryEpochInfosRequest defines the gRPC response structure for
      querying all epoch info.
    type: object
    properties:
      epochs:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.epochs.v1beta1.EpochInfo'
  cosmos.evidence.v1beta1.MsgSubmitEvidence:
    description: |-
      MsgSubmitEvidence represents a message that supports submitting arbitrary
      Evidence of misbehavior such as equivocation or counterfactual signing.
    type: object
    properties:
      evidence:
        description: evidence defines the evidence of misbehavior.
        $ref: '#/definitions/google.protobuf.Any'
      submitter:
        description: submitter is the signer account address of evidence.
        type: string
  cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse:
    description: MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type.
    type: object
    properties:
      hash:
        description: hash defines the hash of the evidence.
        type: string
        format: byte
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
    description: |-
      QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
      method.
    type: object
    properties:
      evidence:
        description: evidence returns all evidences.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.evidence.v1beta1.QueryEvidenceResponse:
    description: QueryEvidenceResponse is the response type for the Query/Evidence RPC method.
    type: object
    properties:
      evidence:
        description: evidence returns the requested evidence.
        $ref: '#/definitions/google.protobuf.Any'
  cosmos.feegrant.v1beta1.Grant:
    type: object
    title: Grant is stored in the KVStore to record a grant with full context
    properties:
      allowance:
        description: allowance can be any of basic, periodic, allowed fee allowance.
        $ref: '#/definitions/google.protobuf.Any'
      grantee:
        description: grantee is the address of the user being granted an allowance of another user's funds.
        type: string
      granter:
        description: granter is the address of the user granting an allowance of their funds.
        type: string
  cosmos.feegrant.v1beta1.MsgGrantAllowance:
    description: |-
      MsgGrantAllowance adds permission for Grantee to spend up to Allowance
      of fees from the account of Granter.
    type: object
    properties:
      allowance:
        description: allowance can be any of basic, periodic, allowed fee allowance.
        $ref: '#/definitions/google.protobuf.Any'
      grantee:
        description: grantee is the address of the user being granted an allowance of another user's funds.
        type: string
      granter:
        description: granter is the address of the user granting an allowance of their funds.
        type: string
  cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse:
    description: MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse response type.
    type: object
  cosmos.feegrant.v1beta1.MsgPruneAllowances:
    description: MsgPruneAllowances prunes expired fee allowances.
    type: object
    properties:
      pruner:
        description: pruner is the address of the user pruning expired allowances.
        type: string
  cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse:
    description: MsgPruneAllowancesResponse defines the Msg/PruneAllowancesResponse response type.
    type: object
  cosmos.feegrant.v1beta1.MsgRevokeAllowance:
    description: MsgRevokeAllowance removes any existing Allowance from Granter to Grantee.
    type: object
    properties:
      grantee:
        description: grantee is the address of the user being granted an allowance of another user's funds.
        type: string
      granter:
        description: granter is the address of the user granting an allowance of their funds.
        type: string
  cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse:
    description: MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse response type.
    type: object
  cosmos.feegrant.v1beta1.QueryAllowanceResponse:
    description: QueryAllowanceResponse is the response type for the Query/Allowance RPC method.
    type: object
    properties:
      allowance:
        description: allowance is a allowance granted for grantee by granter.
        $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
  cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
    description: QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.
    type: object
    properties:
      allowances:
        description: allowances that have been issued by the granter.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
      pagination:
        description: pagination defines an pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.feegrant.v1beta1.QueryAllowancesResponse:
    description: QueryAllowancesResponse is the response type for the Query/Allowances RPC method.
    type: object
    properties:
      allowances:
        description: allowances are allowance's granted for grantee by granter.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
      pagination:
        description: pagination defines an pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.gov.v1.Deposit:
    description: |-
      Deposit defines an amount deposited by an account address to an active
      proposal.
    type: object
    properties:
      amount:
        description: amount to be deposited by depositor.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
  cosmos.gov.v1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    type: object
    properties:
      max_deposit_period:
        description: |-
          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
          months.
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.gov.v1.MsgCancelProposal:
    description: MsgCancelProposal is the Msg/CancelProposal request type.
    type: object
    properties:
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      proposer:
        description: proposer is the account address of the proposer.
        type: string
  cosmos.gov.v1.MsgCancelProposalResponse:
    description: |-
      MsgCancelProposalResponse defines the response structure for executing a
      MsgCancelProposal message.
    type: object
    properties:
      canceled_height:
        description: canceled_height defines the block height at which the proposal is canceled.
        type: string
        format: uint64
      canceled_time:
        description: canceled_time is the time when proposal is canceled.
        type: string
        format: date-time
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
  cosmos.gov.v1.MsgDeposit:
    description: MsgDeposit defines a message to submit a deposit to an existing proposal.
    type: object
    properties:
      amount:
        description: amount to be deposited by depositor.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
  cosmos.gov.v1.MsgDepositResponse:
    description: MsgDepositResponse defines the Msg/Deposit response type.
    type: object
  cosmos.gov.v1.MsgExecLegacyContent:
    description: |-
      MsgExecLegacyContent is used to wrap the legacy content field into a message.
      This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
    type: object
    properties:
      authority:
        description: authority must be the gov module address.
        type: string
      content:
        description: content is the proposal's content.
        $ref: '#/definitions/google.protobuf.Any'
  cosmos.gov.v1.MsgExecLegacyContentResponse:
    description: MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response type.
    type: object
  cosmos.gov.v1.MsgSubmitProposal:
    description: |-
      MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
      proposal Content.
    type: object
    properties:
      expedited:
        type: boolean
        title: expedited defines if the proposal is expedited or not
      initial_deposit:
        description: initial_deposit is the deposit value that must be paid at proposal submission.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      messages:
        description: messages are the arbitrary messages to be executed if proposal passes.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      metadata:
        description: metadata is any arbitrary metadata attached to the proposal.
        type: string
      proposer:
        description: proposer is the account address of the proposer.
        type: string
      summary:
        type: string
        title: summary is the summary of the proposal
      title:
        description: title is the title of the proposal.
        type: string
  cosmos.gov.v1.MsgSubmitProposalResponse:
    description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
    type: object
    properties:
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
  cosmos.gov.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/gov parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.gov.v1.Params'
  cosmos.gov.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.gov.v1.MsgVote:
    description: MsgVote defines a message to cast a vote.
    type: object
    properties:
      metadata:
        description: metadata is any arbitrary metadata attached to the Vote.
        type: string
      option:
        description: option defines the vote option.
        $ref: '#/definitions/cosmos.gov.v1.VoteOption'
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      voter:
        description: voter is the voter address for the proposal.
        type: string
  cosmos.gov.v1.MsgVoteResponse:
    description: MsgVoteResponse defines the Msg/Vote response type.
    type: object
  cosmos.gov.v1.MsgVoteWeighted:
    description: MsgVoteWeighted defines a message to cast a vote.
    type: object
    properties:
      metadata:
        description: metadata is any arbitrary metadata attached to the VoteWeighted.
        type: string
      options:
        description: options defines the weighted vote options.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1.WeightedVoteOption'
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      voter:
        description: voter is the voter address for the proposal.
        type: string
  cosmos.gov.v1.MsgVoteWeightedResponse:
    description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
    type: object
  cosmos.gov.v1.Params:
    description: Params defines the parameters for the x/gov module.
    type: object
    properties:
      burn_proposal_deposit_prevote:
        type: boolean
        title: burn deposits if the proposal does not enter voting period
      burn_vote_quorum:
        type: boolean
        title: burn deposits if a proposal does not meet quorum
      burn_vote_veto:
        type: boolean
        title: burn deposits if quorum with vote type no_veto is met
      expedited_min_deposit:
        description: Minimum expedited deposit for a proposal to enter voting period.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      expedited_threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.'
        type: string
      expedited_voting_period:
        description: Duration of the voting period of an expedited proposal.
        type: string
      max_deposit_period:
        description: |-
          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
          months.
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      min_deposit_ratio:
        description: |-
          The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
          Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
          required.
        type: string
      min_initial_deposit_ratio:
        description: The ratio representing the proportion of the deposit value that must be paid at proposal submission.
        type: string
      proposal_cancel_dest:
        description: |-
          The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
          If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.
        type: string
      proposal_cancel_ratio:
        description: The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.
        type: string
      quorum:
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
           considered valid.
        type: string
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
        type: string
      veto_threshold:
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
           vetoed. Default value: 1/3.
        type: string
      voting_period:
        description: Duration of the voting period.
        type: string
  cosmos.gov.v1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    type: object
    properties:
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        type: string
        format: date-time
      expedited:
        type: boolean
        title: expedited defines if the proposal is expedited
      failed_reason:
        type: string
        title: failed_reason defines the reason why the proposal failed
      final_tally_result:
        description: |-
          final_tally_result is the final tally result of the proposal. When
          querying a proposal via gRPC, this field is not populated until the
          proposal's voting period has ended.
        $ref: '#/definitions/cosmos.gov.v1.TallyResult'
      id:
        description: id defines the unique id of the proposal.
        type: string
        format: uint64
      messages:
        description: messages are the arbitrary messages to be executed if the proposal passes.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      metadata:
        type: string
        title: |-
          metadata is any arbitrary metadata attached to the proposal.
          the recommended format of the metadata is to be found here:
          https://docs.cosmos.network/v0.47/modules/gov#proposal-3
      proposer:
        type: string
        title: proposer is the address of the proposal sumbitter
      status:
        description: status defines the proposal status.
        $ref: '#/definitions/cosmos.gov.v1.ProposalStatus'
      submit_time:
        description: submit_time is the time of proposal submission.
        type: string
        format: date-time
      summary:
        type: string
        title: summary is a short summary of the proposal
      title:
        type: string
        title: title is the title of the proposal
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        type: string
        format: date-time
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        type: string
        format: date-time
  cosmos.gov.v1.ProposalStatus:
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
    type: string
    default: PROPOSAL_STATUS_UNSPECIFIED
    enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
  cosmos.gov.v1.QueryConstitutionResponse:
    type: object
    title: QueryConstitutionResponse is the response type for the Query/Constitution RPC method
    properties:
      constitution:
        type: string
  cosmos.gov.v1.QueryDepositResponse:
    description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
    type: object
    properties:
      deposit:
        description: deposit defines the requested deposit.
        $ref: '#/definitions/cosmos.gov.v1.Deposit'
  cosmos.gov.v1.QueryDepositsResponse:
    description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
    type: object
    properties:
      deposits:
        description: deposits defines the requested deposits.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1.Deposit'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.gov.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      deposit_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          deposit_params defines the parameters related to deposit.
        $ref: '#/definitions/cosmos.gov.v1.DepositParams'
      params:
        description: params defines all the paramaters of x/gov module.
        $ref: '#/definitions/cosmos.gov.v1.Params'
      tally_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          tally_params defines the parameters related to tally.
        $ref: '#/definitions/cosmos.gov.v1.TallyParams'
      voting_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          voting_params defines the parameters related to voting.
        $ref: '#/definitions/cosmos.gov.v1.VotingParams'
  cosmos.gov.v1.QueryProposalResponse:
    description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
    type: object
    properties:
      proposal:
        description: proposal is the requested governance proposal.
        $ref: '#/definitions/cosmos.gov.v1.Proposal'
  cosmos.gov.v1.QueryProposalsResponse:
    description: |-
      QueryProposalsResponse is the response type for the Query/Proposals RPC
      method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      proposals:
        description: proposals defines all the requested governance proposals.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1.Proposal'
  cosmos.gov.v1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
    type: object
    properties:
      tally:
        description: tally defines the requested tally.
        $ref: '#/definitions/cosmos.gov.v1.TallyResult'
  cosmos.gov.v1.QueryVoteResponse:
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    type: object
    properties:
      vote:
        description: vote defines the queried vote.
        $ref: '#/definitions/cosmos.gov.v1.Vote'
  cosmos.gov.v1.QueryVotesResponse:
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      votes:
        description: votes defines the queried votes.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1.Vote'
  cosmos.gov.v1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    type: object
    properties:
      quorum:
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
          considered valid.
        type: string
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
        type: string
      veto_threshold:
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
          vetoed. Default value: 1/3.
        type: string
  cosmos.gov.v1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    type: object
    properties:
      abstain_count:
        description: abstain_count is the number of abstain votes on a proposal.
        type: string
      no_count:
        description: no_count is the number of no votes on a proposal.
        type: string
      no_with_veto_count:
        description: no_with_veto_count is the number of no with veto votes on a proposal.
        type: string
      yes_count:
        description: yes_count is the number of yes votes on a proposal.
        type: string
  cosmos.gov.v1.Vote:
    description: |-
      Vote defines a vote on a governance proposal.
      A Vote consists of a proposal ID, the voter, and the vote option.
    type: object
    properties:
      metadata:
        type: string
        title: |-
          metadata is any arbitrary metadata attached to the vote.
          the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
      options:
        description: options is the weighted vote options.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1.WeightedVoteOption'
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      voter:
        description: voter is the voter address of the proposal.
        type: string
  cosmos.gov.v1.VoteOption:
    description: |-
      VoteOption enumerates the valid vote options for a given governance proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    type: string
    default: VOTE_OPTION_UNSPECIFIED
    enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
  cosmos.gov.v1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    type: object
    properties:
      voting_period:
        description: Duration of the voting period.
        type: string
  cosmos.gov.v1.WeightedVoteOption:
    description: WeightedVoteOption defines a unit of vote for vote split.
    type: object
    properties:
      option:
        description: option defines the valid vote options, it must not contain duplicate vote options.
        $ref: '#/definitions/cosmos.gov.v1.VoteOption'
      weight:
        description: weight is the vote weight associated with the vote option.
        type: string
  cosmos.gov.v1beta1.Deposit:
    description: |-
      Deposit defines an amount deposited by an account address to an active
      proposal.
    type: object
    properties:
      amount:
        description: amount to be deposited by depositor.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
  cosmos.gov.v1beta1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    type: object
    properties:
      max_deposit_period:
        description: |-
          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
          months.
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.gov.v1beta1.MsgDeposit:
    description: MsgDeposit defines a message to submit a deposit to an existing proposal.
    type: object
    properties:
      amount:
        description: amount to be deposited by depositor.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
  cosmos.gov.v1beta1.MsgDepositResponse:
    description: MsgDepositResponse defines the Msg/Deposit response type.
    type: object
  cosmos.gov.v1beta1.MsgSubmitProposal:
    description: |-
      MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
      proposal Content.
    type: object
    properties:
      content:
        description: content is the proposal's content.
        $ref: '#/definitions/google.protobuf.Any'
      initial_deposit:
        description: initial_deposit is the deposit value that must be paid at proposal submission.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      proposer:
        description: proposer is the account address of the proposer.
        type: string
  cosmos.gov.v1beta1.MsgSubmitProposalResponse:
    description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
    type: object
    properties:
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
  cosmos.gov.v1beta1.MsgVote:
    description: MsgVote defines a message to cast a vote.
    type: object
    properties:
      option:
        description: option defines the vote option.
        $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      voter:
        description: voter is the voter address for the proposal.
        type: string
  cosmos.gov.v1beta1.MsgVoteResponse:
    description: MsgVoteResponse defines the Msg/Vote response type.
    type: object
  cosmos.gov.v1beta1.MsgVoteWeighted:
    description: MsgVoteWeighted defines a message to cast a vote.
    type: object
    properties:
      options:
        description: options defines the weighted vote options.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1beta1.WeightedVoteOption'
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      voter:
        description: voter is the voter address for the proposal.
        type: string
  cosmos.gov.v1beta1.MsgVoteWeightedResponse:
    description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
    type: object
  cosmos.gov.v1beta1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    type: object
    properties:
      content:
        description: content is the proposal's content.
        $ref: '#/definitions/google.protobuf.Any'
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        type: string
        format: date-time
      final_tally_result:
        description: |-
          final_tally_result is the final tally result of the proposal. When
          querying a proposal via gRPC, this field is not populated until the
          proposal's voting period has ended.
        $ref: '#/definitions/cosmos.gov.v1beta1.TallyResult'
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      status:
        description: status defines the proposal status.
        $ref: '#/definitions/cosmos.gov.v1beta1.ProposalStatus'
      submit_time:
        description: submit_time is the time of proposal submission.
        type: string
        format: date-time
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        type: string
        format: date-time
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        type: string
        format: date-time
  cosmos.gov.v1beta1.ProposalStatus:
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
    type: string
    default: PROPOSAL_STATUS_UNSPECIFIED
    enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
  cosmos.gov.v1beta1.QueryDepositResponse:
    description: QueryDepositResponse is the response type for the Query/Deposit RPC method.
    type: object
    properties:
      deposit:
        description: deposit defines the requested deposit.
        $ref: '#/definitions/cosmos.gov.v1beta1.Deposit'
  cosmos.gov.v1beta1.QueryDepositsResponse:
    description: QueryDepositsResponse is the response type for the Query/Deposits RPC method.
    type: object
    properties:
      deposits:
        description: deposits defines the requested deposits.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1beta1.Deposit'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.gov.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      deposit_params:
        description: deposit_params defines the parameters related to deposit.
        $ref: '#/definitions/cosmos.gov.v1beta1.DepositParams'
      tally_params:
        description: tally_params defines the parameters related to tally.
        $ref: '#/definitions/cosmos.gov.v1beta1.TallyParams'
      voting_params:
        description: voting_params defines the parameters related to voting.
        $ref: '#/definitions/cosmos.gov.v1beta1.VotingParams'
  cosmos.gov.v1beta1.QueryProposalResponse:
    description: QueryProposalResponse is the response type for the Query/Proposal RPC method.
    type: object
    properties:
      proposal:
        $ref: '#/definitions/cosmos.gov.v1beta1.Proposal'
  cosmos.gov.v1beta1.QueryProposalsResponse:
    description: |-
      QueryProposalsResponse is the response type for the Query/Proposals RPC
      method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      proposals:
        description: proposals defines all the requested governance proposals.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1beta1.Proposal'
  cosmos.gov.v1beta1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the response type for the Query/Tally RPC method.
    type: object
    properties:
      tally:
        description: tally defines the requested tally.
        $ref: '#/definitions/cosmos.gov.v1beta1.TallyResult'
  cosmos.gov.v1beta1.QueryVoteResponse:
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    type: object
    properties:
      vote:
        description: vote defines the queried vote.
        $ref: '#/definitions/cosmos.gov.v1beta1.Vote'
  cosmos.gov.v1beta1.QueryVotesResponse:
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      votes:
        description: votes defines the queried votes.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1beta1.Vote'
  cosmos.gov.v1beta1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    type: object
    properties:
      quorum:
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
          considered valid.
        type: string
        format: byte
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.'
        type: string
        format: byte
      veto_threshold:
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
          vetoed. Default value: 1/3.
        type: string
        format: byte
  cosmos.gov.v1beta1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    type: object
    properties:
      abstain:
        description: abstain is the number of abstain votes on a proposal.
        type: string
      no:
        description: no is the number of no votes on a proposal.
        type: string
      no_with_veto:
        description: no_with_veto is the number of no with veto votes on a proposal.
        type: string
      yes:
        description: yes is the number of yes votes on a proposal.
        type: string
  cosmos.gov.v1beta1.Vote:
    description: |-
      Vote defines a vote on a governance proposal.
      A Vote consists of a proposal ID, the voter, and the vote option.
    type: object
    properties:
      option:
        description: |-
          Deprecated: Prefer to use `options` instead. This field is set in queries
          if and only if `len(options) == 1` and that option has weight 1. In all
          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
        $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
      options:
        description: options is the weighted vote options.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.gov.v1beta1.WeightedVoteOption'
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        type: string
        format: uint64
      voter:
        description: voter is the voter address of the proposal.
        type: string
  cosmos.gov.v1beta1.VoteOption:
    description: |-
      VoteOption enumerates the valid vote options for a given governance proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    type: string
    default: VOTE_OPTION_UNSPECIFIED
    enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
  cosmos.gov.v1beta1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    type: object
    properties:
      voting_period:
        description: Duration of the voting period.
        type: string
  cosmos.gov.v1beta1.WeightedVoteOption:
    description: WeightedVoteOption defines a unit of vote for vote split.
    type: object
    properties:
      option:
        description: option defines the valid vote options, it must not contain duplicate vote options.
        $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
      weight:
        description: weight is the vote weight associated with the vote option.
        type: string
  cosmos.group.v1.Exec:
    description: |-
      Exec defines modes of execution of a proposal on creation or on new vote.

       - EXEC_UNSPECIFIED: An empty value means that there should be a separate
      MsgExec request for the proposal to execute.
       - EXEC_TRY: Try to execute the proposal immediately.
      If the proposal is not allowed per the DecisionPolicy,
      the proposal will still be open and could
      be executed at a later point.
    type: string
    default: EXEC_UNSPECIFIED
    enum:
      - EXEC_UNSPECIFIED
      - EXEC_TRY
  cosmos.group.v1.GroupInfo:
    description: GroupInfo represents the high-level on-chain information for a group.
    type: object
    properties:
      admin:
        description: admin is the account address of the group's admin.
        type: string
      created_at:
        description: created_at is a timestamp specifying when a group was created.
        type: string
        format: date-time
      id:
        description: id is the unique ID of the group.
        type: string
        format: uint64
      metadata:
        type: string
        title: |-
          metadata is any arbitrary metadata to attached to the group.
          the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
      total_weight:
        description: total_weight is the sum of the group members' weights.
        type: string
      version:
        type: string
        format: uint64
        title: |-
          version is used to track changes to a group's membership structure that
          would break existing proposals. Whenever any members weight is changed,
          or any member is added or removed this version is incremented and will
          cause proposals based on older versions of this group to fail
  cosmos.group.v1.GroupMember:
    description: GroupMember represents the relationship between a group and a member.
    type: object
    properties:
      group_id:
        description: group_id is the unique ID of the group.
        type: string
        format: uint64
      member:
        description: member is the member data.
        $ref: '#/definitions/cosmos.group.v1.Member'
  cosmos.group.v1.GroupPolicyInfo:
    description: GroupPolicyInfo represents the high-level on-chain information for a group policy.
    type: object
    properties:
      address:
        description: address is the account address of group policy.
        type: string
      admin:
        description: admin is the account address of the group admin.
        type: string
      created_at:
        description: created_at is a timestamp specifying when a group policy was created.
        type: string
        format: date-time
      decision_policy:
        description: decision_policy specifies the group policy's decision policy.
        $ref: '#/definitions/google.protobuf.Any'
      group_id:
        description: group_id is the unique ID of the group.
        type: string
        format: uint64
      metadata:
        type: string
        title: |-
          metadata is any arbitrary metadata attached to the group policy.
          the recommended format of the metadata is to be found here:
          https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
      version:
        description: |-
          version is used to track changes to a group's GroupPolicyInfo structure that
          would create a different result on a running proposal.
        type: string
        format: uint64
  cosmos.group.v1.Member:
    description: |-
      Member represents a group member with an account address,
      non-zero weight, metadata and added_at timestamp.
    type: object
    properties:
      added_at:
        description: added_at is a timestamp specifying when a member was added.
        type: string
        format: date-time
      address:
        description: address is the member's account address.
        type: string
      metadata:
        description: metadata is any arbitrary metadata attached to the member.
        type: string
      weight:
        description: weight is the member's voting weight that should be greater than 0.
        type: string
  cosmos.group.v1.MemberRequest:
    description: |-
      MemberRequest represents a group member to be used in Msg server requests.
      Contrary to `Member`, it doesn't have any `added_at` field
      since this field cannot be set as part of requests.
    type: object
    properties:
      address:
        description: address is the member's account address.
        type: string
      metadata:
        description: metadata is any arbitrary metadata attached to the member.
        type: string
      weight:
        description: weight is the member's voting weight that should be greater than 0.
        type: string
  cosmos.group.v1.MsgCreateGroup:
    description: MsgCreateGroup is the Msg/CreateGroup request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group admin.
        type: string
      members:
        description: members defines the group members.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.MemberRequest'
      metadata:
        description: metadata is any arbitrary metadata to attached to the group.
        type: string
  cosmos.group.v1.MsgCreateGroupPolicy:
    description: MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group admin.
        type: string
      decision_policy:
        description: decision_policy specifies the group policy's decision policy.
        $ref: '#/definitions/google.protobuf.Any'
      group_id:
        description: group_id is the unique ID of the group.
        type: string
        format: uint64
      metadata:
        description: metadata is any arbitrary metadata attached to the group policy.
        type: string
  cosmos.group.v1.MsgCreateGroupPolicyResponse:
    description: MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type.
    type: object
    properties:
      address:
        description: address is the account address of the newly created group policy.
        type: string
  cosmos.group.v1.MsgCreateGroupResponse:
    description: MsgCreateGroupResponse is the Msg/CreateGroup response type.
    type: object
    properties:
      group_id:
        description: group_id is the unique ID of the newly created group.
        type: string
        format: uint64
  cosmos.group.v1.MsgCreateGroupWithPolicy:
    description: MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group and group policy admin.
        type: string
      decision_policy:
        description: decision_policy specifies the group policy's decision policy.
        $ref: '#/definitions/google.protobuf.Any'
      group_metadata:
        description: group_metadata is any arbitrary metadata attached to the group.
        type: string
      group_policy_as_admin:
        description: |-
          group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group
          and group policy admin.
        type: boolean
      group_policy_metadata:
        description: group_policy_metadata is any arbitrary metadata attached to the group policy.
        type: string
      members:
        description: members defines the group members.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.MemberRequest'
  cosmos.group.v1.MsgCreateGroupWithPolicyResponse:
    description: MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response type.
    type: object
    properties:
      group_id:
        description: group_id is the unique ID of the newly created group with policy.
        type: string
        format: uint64
      group_policy_address:
        description: group_policy_address is the account address of the newly created group policy.
        type: string
  cosmos.group.v1.MsgExec:
    description: MsgExec is the Msg/Exec request type.
    type: object
    properties:
      executor:
        description: executor is the account address used to execute the proposal.
        type: string
      proposal_id:
        description: proposal is the unique ID of the proposal.
        type: string
        format: uint64
  cosmos.group.v1.MsgExecResponse:
    description: MsgExecResponse is the Msg/Exec request type.
    type: object
    properties:
      result:
        description: result is the final result of the proposal execution.
        $ref: '#/definitions/cosmos.group.v1.ProposalExecutorResult'
  cosmos.group.v1.MsgLeaveGroup:
    description: MsgLeaveGroup is the Msg/LeaveGroup request type.
    type: object
    properties:
      address:
        description: address is the account address of the group member.
        type: string
      group_id:
        description: group_id is the unique ID of the group.
        type: string
        format: uint64
  cosmos.group.v1.MsgLeaveGroupResponse:
    description: MsgLeaveGroupResponse is the Msg/LeaveGroup response type.
    type: object
  cosmos.group.v1.MsgSubmitProposal:
    description: MsgSubmitProposal is the Msg/SubmitProposal request type.
    type: object
    properties:
      exec:
        description: |-
          exec defines the mode of execution of the proposal,
          whether it should be executed immediately on creation or not.
          If so, proposers signatures are considered as Yes votes.
        $ref: '#/definitions/cosmos.group.v1.Exec'
      group_policy_address:
        description: group_policy_address is the account address of group policy.
        type: string
      messages:
        description: messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      metadata:
        description: metadata is any arbitrary metadata attached to the proposal.
        type: string
      proposers:
        description: |-
          proposers are the account addresses of the proposers.
          Proposers signatures will be counted as yes votes.
        type: array
        items:
          type: string
      summary:
        description: summary is the summary of the proposal.
        type: string
      title:
        description: title is the title of the proposal.
        type: string
  cosmos.group.v1.MsgSubmitProposalResponse:
    description: MsgSubmitProposalResponse is the Msg/SubmitProposal response type.
    type: object
    properties:
      proposal_id:
        description: proposal is the unique ID of the proposal.
        type: string
        format: uint64
  cosmos.group.v1.MsgUpdateGroupAdmin:
    description: MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type.
    type: object
    properties:
      admin:
        description: admin is the current account address of the group admin.
        type: string
      group_id:
        description: group_id is the unique ID of the group.
        type: string
        format: uint64
      new_admin:
        description: new_admin is the group new admin account address.
        type: string
  cosmos.group.v1.MsgUpdateGroupAdminResponse:
    description: MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type.
    type: object
  cosmos.group.v1.MsgUpdateGroupMembers:
    description: MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group admin.
        type: string
      group_id:
        description: group_id is the unique ID of the group.
        type: string
        format: uint64
      member_updates:
        description: |-
          member_updates is the list of members to update,
          set weight to 0 to remove a member.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.MemberRequest'
  cosmos.group.v1.MsgUpdateGroupMembersResponse:
    description: MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type.
    type: object
  cosmos.group.v1.MsgUpdateGroupMetadata:
    description: MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group admin.
        type: string
      group_id:
        description: group_id is the unique ID of the group.
        type: string
        format: uint64
      metadata:
        description: metadata is the updated group's metadata.
        type: string
  cosmos.group.v1.MsgUpdateGroupMetadataResponse:
    description: MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type.
    type: object
  cosmos.group.v1.MsgUpdateGroupPolicyAdmin:
    description: MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group admin.
        type: string
      group_policy_address:
        description: group_policy_address is the account address of the group policy.
        type: string
      new_admin:
        description: new_admin is the new group policy admin.
        type: string
  cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse:
    description: MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response type.
    type: object
  cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy:
    description: MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group admin.
        type: string
      decision_policy:
        description: decision_policy is the updated group policy's decision policy.
        $ref: '#/definitions/google.protobuf.Any'
      group_policy_address:
        description: group_policy_address is the account address of group policy.
        type: string
  cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse:
    description: MsgUpdateGroupPolicyDecisionPolicyResponse is the Msg/UpdateGroupPolicyDecisionPolicy response type.
    type: object
  cosmos.group.v1.MsgUpdateGroupPolicyMetadata:
    description: MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type.
    type: object
    properties:
      admin:
        description: admin is the account address of the group admin.
        type: string
      group_policy_address:
        description: group_policy_address is the account address of group policy.
        type: string
      metadata:
        description: metadata is the group policy metadata to be updated.
        type: string
  cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse:
    description: MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata response type.
    type: object
  cosmos.group.v1.MsgVote:
    description: MsgVote is the Msg/Vote request type.
    type: object
    properties:
      exec:
        description: |-
          exec defines whether the proposal should be executed
          immediately after voting or not.
        $ref: '#/definitions/cosmos.group.v1.Exec'
      metadata:
        description: metadata is any arbitrary metadata attached to the vote.
        type: string
      option:
        description: option is the voter's choice on the proposal.
        $ref: '#/definitions/cosmos.group.v1.VoteOption'
      proposal_id:
        description: proposal is the unique ID of the proposal.
        type: string
        format: uint64
      voter:
        description: voter is the voter account address.
        type: string
  cosmos.group.v1.MsgVoteResponse:
    description: MsgVoteResponse is the Msg/Vote response type.
    type: object
  cosmos.group.v1.MsgWithdrawProposal:
    description: MsgWithdrawProposal is the Msg/WithdrawProposal request type.
    type: object
    properties:
      address:
        description: address is the admin of the group policy or one of the proposer of the proposal.
        type: string
      proposal_id:
        description: proposal is the unique ID of the proposal.
        type: string
        format: uint64
  cosmos.group.v1.MsgWithdrawProposalResponse:
    description: MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type.
    type: object
  cosmos.group.v1.Proposal:
    description: |-
      Proposal defines a group proposal. Any member of a group can submit a proposal
      for a group policy to decide upon.
      A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
      passes as well as some optional metadata associated with the proposal.
    type: object
    properties:
      executor_result:
        description: executor_result is the final result of the proposal execution. Initial value is NotRun.
        $ref: '#/definitions/cosmos.group.v1.ProposalExecutorResult'
      final_tally_result:
        description: |-
          final_tally_result contains the sums of all weighted votes for this
          proposal for each vote option. It is empty at submission, and only
          populated after tallying, at voting period end or at proposal execution,
          whichever happens first.
        $ref: '#/definitions/cosmos.group.v1.TallyResult'
      group_policy_address:
        description: group_policy_address is the account address of group policy.
        type: string
      group_policy_version:
        description: |-
          group_policy_version tracks the version of the group policy at proposal submission.
          When a decision policy is changed, existing proposals from previous policy
          versions will become invalid with the `ABORTED` status.
          This field is here for informational purposes only.
        type: string
        format: uint64
      group_version:
        description: |-
          group_version tracks the version of the group at proposal submission.
          This field is here for informational purposes only.
        type: string
        format: uint64
      id:
        description: id is the unique id of the proposal.
        type: string
        format: uint64
      messages:
        description: messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      metadata:
        type: string
        title: |-
          metadata is any arbitrary metadata attached to the proposal.
          the recommended format of the metadata is to be found here:
          https://docs.cosmos.network/v0.47/modules/group#proposal-4
      proposers:
        description: proposers are the account addresses of the proposers.
        type: array
        items:
          type: string
      status:
        description: status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
        $ref: '#/definitions/cosmos.group.v1.ProposalStatus'
      submit_time:
        description: submit_time is a timestamp specifying when a proposal was submitted.
        type: string
        format: date-time
      summary:
        type: string
        title: summary is a short summary of the proposal
      title:
        type: string
        title: title is the title of the proposal
      voting_period_end:
        description: |-
          voting_period_end is the timestamp before which voting must be done.
          Unless a successful MsgExec is called before (to execute a proposal whose
          tally is successful before the voting period ends), tallying will be done
          at this point, and the `final_tally_result`and `status` fields will be
          accordingly updated.
        type: string
        format: date-time
  cosmos.group.v1.ProposalExecutorResult:
    description: |-
      ProposalExecutorResult defines types of proposal executor results.

       - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.
       - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.
       - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.
       - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state.
    type: string
    default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
    enum:
      - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
      - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
      - PROPOSAL_EXECUTOR_RESULT_SUCCESS
      - PROPOSAL_EXECUTOR_RESULT_FAILURE
  cosmos.group.v1.ProposalStatus:
    description: |-
      ProposalStatus defines proposal statuses.

       - PROPOSAL_STATUS_UNSPECIFIED: An empty value is invalid and not allowed.
       - PROPOSAL_STATUS_SUBMITTED: Initial status of a proposal when submitted.
       - PROPOSAL_STATUS_ACCEPTED: Final status of a proposal when the final tally is done and the outcome
      passes the group policy's decision policy.
       - PROPOSAL_STATUS_REJECTED: Final status of a proposal when the final tally is done and the outcome
      is rejected by the group policy's decision policy.
       - PROPOSAL_STATUS_ABORTED: Final status of a proposal when the group policy is modified before the
      final tally.
       - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting start time by the owner.
      When this happens the final status is Withdrawn.
    type: string
    default: PROPOSAL_STATUS_UNSPECIFIED
    enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_SUBMITTED
      - PROPOSAL_STATUS_ACCEPTED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_ABORTED
      - PROPOSAL_STATUS_WITHDRAWN
  cosmos.group.v1.QueryGroupInfoResponse:
    description: QueryGroupInfoResponse is the Query/GroupInfo response type.
    type: object
    properties:
      info:
        description: info is the GroupInfo of the group.
        $ref: '#/definitions/cosmos.group.v1.GroupInfo'
  cosmos.group.v1.QueryGroupMembersResponse:
    description: QueryGroupMembersResponse is the Query/GroupMembersResponse response type.
    type: object
    properties:
      members:
        description: members are the members of the group with given group_id.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.GroupMember'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.group.v1.QueryGroupPoliciesByAdminResponse:
    description: QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type.
    type: object
    properties:
      group_policies:
        description: group_policies are the group policies info with provided admin.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.group.v1.QueryGroupPoliciesByGroupResponse:
    description: QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type.
    type: object
    properties:
      group_policies:
        description: group_policies are the group policies info associated with the provided group.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.group.v1.QueryGroupPolicyInfoResponse:
    description: QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type.
    type: object
    properties:
      info:
        description: info is the GroupPolicyInfo of the group policy.
        $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
  cosmos.group.v1.QueryGroupsByAdminResponse:
    description: QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type.
    type: object
    properties:
      groups:
        description: groups are the groups info with the provided admin.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.GroupInfo'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.group.v1.QueryGroupsByMemberResponse:
    description: QueryGroupsByMemberResponse is the Query/GroupsByMember response type.
    type: object
    properties:
      groups:
        description: groups are the groups info with the provided group member.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.GroupInfo'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.group.v1.QueryGroupsResponse:
    description: QueryGroupsResponse is the Query/Groups response type.
    type: object
    properties:
      groups:
        description: '`groups` is all the groups present in state.'
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.GroupInfo'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.group.v1.QueryProposalResponse:
    description: QueryProposalResponse is the Query/Proposal response type.
    type: object
    properties:
      proposal:
        description: proposal is the proposal info.
        $ref: '#/definitions/cosmos.group.v1.Proposal'
  cosmos.group.v1.QueryProposalsByGroupPolicyResponse:
    description: QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      proposals:
        description: proposals are the proposals with given group policy.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.Proposal'
  cosmos.group.v1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the Query/TallyResult response type.
    type: object
    properties:
      tally:
        description: tally defines the requested tally.
        $ref: '#/definitions/cosmos.group.v1.TallyResult'
  cosmos.group.v1.QueryVoteByProposalVoterResponse:
    description: QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type.
    type: object
    properties:
      vote:
        description: vote is the vote with given proposal_id and voter.
        $ref: '#/definitions/cosmos.group.v1.Vote'
  cosmos.group.v1.QueryVotesByProposalResponse:
    description: QueryVotesByProposalResponse is the Query/VotesByProposal response type.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      votes:
        description: votes are the list of votes for given proposal_id.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.Vote'
  cosmos.group.v1.QueryVotesByVoterResponse:
    description: QueryVotesByVoterResponse is the Query/VotesByVoter response type.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      votes:
        description: votes are the list of votes by given voter.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.group.v1.Vote'
  cosmos.group.v1.TallyResult:
    description: TallyResult represents the sum of weighted votes for each vote option.
    type: object
    properties:
      abstain_count:
        description: abstain_count is the weighted sum of abstainers.
        type: string
      no_count:
        description: no_count is the weighted sum of no votes.
        type: string
      no_with_veto_count:
        description: no_with_veto_count is the weighted sum of veto.
        type: string
      yes_count:
        description: yes_count is the weighted sum of yes votes.
        type: string
  cosmos.group.v1.Vote:
    type: object
    title: Vote represents a vote for a proposal.string metadata
    properties:
      metadata:
        type: string
        title: |-
          metadata is any arbitrary metadata attached to the vote.
          the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
      option:
        description: option is the voter's choice on the proposal.
        $ref: '#/definitions/cosmos.group.v1.VoteOption'
      proposal_id:
        description: proposal is the unique ID of the proposal.
        type: string
        format: uint64
      submit_time:
        description: submit_time is the timestamp when the vote was submitted.
        type: string
        format: date-time
      voter:
        description: voter is the account address of the voter.
        type: string
  cosmos.group.v1.VoteOption:
    description: |-
      VoteOption enumerates the valid vote options for a given proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will
      return an error.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    type: string
    default: VOTE_OPTION_UNSPECIFIED
    enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
  cosmos.mint.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/mint parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.mint.v1beta1.Params'
  cosmos.mint.v1beta1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.mint.v1beta1.Params:
    description: Params defines the parameters for the x/mint module.
    type: object
    properties:
      blocks_per_year:
        type: string
        format: uint64
        title: expected blocks per year
      goal_bonded:
        type: string
        title: goal of percent bonded atoms
      inflation_max:
        type: string
        title: maximum inflation rate
      inflation_min:
        type: string
        title: minimum inflation rate
      inflation_rate_change:
        type: string
        title: maximum annual change in inflation rate
      mint_denom:
        type: string
        title: type of coin to mint
  cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
    description: |-
      QueryAnnualProvisionsResponse is the response type for the
      Query/AnnualProvisions RPC method.
    type: object
    properties:
      annual_provisions:
        description: annual_provisions is the current minting annual provisions value.
        type: string
        format: byte
  cosmos.mint.v1beta1.QueryInflationResponse:
    description: |-
      QueryInflationResponse is the response type for the Query/Inflation RPC
      method.
    type: object
    properties:
      inflation:
        description: inflation is the current minting inflation value.
        type: string
        format: byte
  cosmos.mint.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/cosmos.mint.v1beta1.Params'
  cosmos.nft.v1beta1.Class:
    description: Class defines the class of the nft type.
    type: object
    properties:
      data:
        title: data is the app specific metadata of the NFT class. Optional
        $ref: '#/definitions/google.protobuf.Any'
      description:
        type: string
        title: description is a brief description of nft classification. Optional
      id:
        type: string
        title: id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
      name:
        type: string
        title: name defines the human-readable name of the NFT classification. Optional
      symbol:
        type: string
        title: symbol is an abbreviated name for nft classification. Optional
      uri:
        type: string
        title: uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
      uri_hash:
        type: string
        title: uri_hash is a hash of the document pointed by uri. Optional
  cosmos.nft.v1beta1.MsgSend:
    description: MsgSend represents a message to send a nft from one account to another account.
    type: object
    properties:
      class_id:
        type: string
        title: class_id defines the unique identifier of the nft classification, similar to the contract address of ERC721
      id:
        type: string
        title: id defines the unique identification of nft
      receiver:
        type: string
        title: receiver is the receiver address of nft
      sender:
        type: string
        title: sender is the address of the owner of nft
  cosmos.nft.v1beta1.MsgSendResponse:
    description: MsgSendResponse defines the Msg/Send response type.
    type: object
  cosmos.nft.v1beta1.NFT:
    description: NFT defines the NFT.
    type: object
    properties:
      class_id:
        type: string
        title: class_id associated with the NFT, similar to the contract address of ERC721
      data:
        title: data is an app specific data of the NFT. Optional
        $ref: '#/definitions/google.protobuf.Any'
      id:
        type: string
        title: id is a unique identifier of the NFT
      uri:
        type: string
        title: uri for the NFT metadata stored off chain
      uri_hash:
        type: string
        title: uri_hash is a hash of the document pointed by uri
  cosmos.nft.v1beta1.QueryBalanceResponse:
    type: object
    title: QueryBalanceResponse is the response type for the Query/Balance RPC method
    properties:
      amount:
        type: string
        format: uint64
        title: amount is the number of all NFTs of a given class owned by the owner
  cosmos.nft.v1beta1.QueryClassResponse:
    type: object
    title: QueryClassResponse is the response type for the Query/Class RPC method
    properties:
      class:
        description: class defines the class of the nft type.
        $ref: '#/definitions/cosmos.nft.v1beta1.Class'
  cosmos.nft.v1beta1.QueryClassesResponse:
    type: object
    title: QueryClassesResponse is the response type for the Query/Classes RPC method
    properties:
      classes:
        description: class defines the class of the nft type.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.nft.v1beta1.Class'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.nft.v1beta1.QueryNFTResponse:
    type: object
    title: QueryNFTResponse is the response type for the Query/NFT RPC method
    properties:
      nft:
        title: owner is the owner address of the nft
        $ref: '#/definitions/cosmos.nft.v1beta1.NFT'
  cosmos.nft.v1beta1.QueryNFTsResponse:
    type: object
    title: QueryNFTsResponse is the response type for the Query/NFTs RPC methods
    properties:
      nfts:
        type: array
        title: NFT defines the NFT
        items:
          type: object
          $ref: '#/definitions/cosmos.nft.v1beta1.NFT'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.nft.v1beta1.QueryOwnerResponse:
    type: object
    title: QueryOwnerResponse is the response type for the Query/Owner RPC method
    properties:
      owner:
        type: string
        title: owner is the owner address of the nft
  cosmos.nft.v1beta1.QuerySupplyResponse:
    type: object
    title: QuerySupplyResponse is the response type for the Query/Supply RPC method
    properties:
      amount:
        type: string
        format: uint64
        title: amount is the number of all NFTs from the given class
  cosmos.params.v1beta1.ParamChange:
    description: |-
      ParamChange defines an individual parameter change, for use in
      ParameterChangeProposal.
    type: object
    properties:
      key:
        type: string
      subspace:
        type: string
      value:
        type: string
  cosmos.params.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      param:
        description: param defines the queried parameter.
        $ref: '#/definitions/cosmos.params.v1beta1.ParamChange'
  cosmos.params.v1beta1.QuerySubspacesResponse:
    description: |-
      QuerySubspacesResponse defines the response types for querying for all
      registered subspaces and all keys for a subspace.
    type: object
    properties:
      subspaces:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.params.v1beta1.Subspace'
  cosmos.params.v1beta1.Subspace:
    description: |-
      Subspace defines a parameter subspace name and all the keys that exist for
      the subspace.
    type: object
    properties:
      keys:
        type: array
        items:
          type: string
      subspace:
        type: string
  cosmos.protocolpool.v1.ContinuousFund:
    description: ContinuousFund defines the fields of continuous fund proposal.
    type: object
    properties:
      expiry:
        description: Optional, if expiry is set, removes the state object when expired.
        type: string
        format: date-time
      percentage:
        description: Percentage is the percentage of funds to be allocated from Community pool.
        type: string
      recipient:
        description: Recipient is the address string of the account receiving funds.
        type: string
  cosmos.protocolpool.v1.MsgCancelContinuousFund:
    description: MsgCancelContinuousFund defines a message to cancel continuous funds for a specific recipient.
    type: object
    properties:
      authority:
        description: Authority is the account address of authority.
        type: string
      recipient:
        description: Recipient is the account address string of the recipient whose funds are to be cancelled.
        type: string
  cosmos.protocolpool.v1.MsgCancelContinuousFundResponse:
    description: |-
      MsgCancelContinuousFundResponse defines the response to executing a
      MsgCancelContinuousFund message.
    type: object
    properties:
      canceled_height:
        description: CanceledHeight defines the canceled block height.
        type: string
        format: uint64
      canceled_time:
        description: CanceledTime is the canceled time.
        type: string
        format: date-time
      recipient:
        description: Recipient is the account address string of the recipient whose funds are cancelled.
        type: string
  cosmos.protocolpool.v1.MsgCommunityPoolSpend:
    description: |-
      MsgCommunityPoolSpend defines a message for sending tokens from the community
      pool to another account. This message is typically executed via a governance
      proposal with the governance module being the executing authority.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      authority:
        description: Authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      recipient:
        type: string
  cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse:
    description: |-
      MsgCommunityPoolSpendResponse defines the response to executing a
      MsgCommunityPoolSpend message.
    type: object
  cosmos.protocolpool.v1.MsgCreateContinuousFund:
    description: MsgCreateContinuousFund defines a message for adding continuous funds.
    type: object
    properties:
      authority:
        description: Authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      expiry:
        description: Optional, if expiry is set, removes the state object when expired.
        type: string
        format: date-time
      percentage:
        description: Percentage is the percentage of funds to be allocated from Community pool.
        type: string
      recipient:
        description: Recipient address of the account receiving funds.
        type: string
  cosmos.protocolpool.v1.MsgCreateContinuousFundResponse:
    description: |-
      MsgCreateContinuousFundResponse defines the response to executing a
      MsgCreateContinuousFund message.
    type: object
  cosmos.protocolpool.v1.MsgFundCommunityPool:
    description: |-
      MsgFundCommunityPool allows an account to directly
      fund the community pool.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      depositor:
        type: string
  cosmos.protocolpool.v1.MsgFundCommunityPoolResponse:
    description: MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type.
    type: object
  cosmos.protocolpool.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/protocolpool parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.protocolpool.v1.Params'
  cosmos.protocolpool.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.protocolpool.v1.Params:
    description: Params defines the parameters for the protocolpool module.
    type: object
    properties:
      distribution_frequency:
        description: |-
          DistributionFrequency is the frequency (in terms of blocks) that funds are distributed out from the
          x/protocolpool module.
        type: string
        format: uint64
      enabled_distribution_denoms:
        description: |-
          EnabledDistributionDenoms lists the denoms that are allowed to be distributed.
          This is to avoid spending time distributing undesired tokens to continuous funds and budgets.
        type: array
        items:
          type: string
  cosmos.protocolpool.v1.QueryCommunityPoolResponse:
    description: |-
      QueryCommunityPoolResponse is the response type for the Query/CommunityPool
      RPC method.
    type: object
    properties:
      pool:
        description: pool defines community pool's coins.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.protocolpool.v1.QueryContinuousFundResponse:
    description: |-
      QueryUnclaimedBudgetResponse is the response type for the Query/ContinuousFund
      RPC method.
    type: object
    properties:
      continuous_fund:
        description: ContinuousFunds is the given continuous fund returned in the query.
        $ref: '#/definitions/cosmos.protocolpool.v1.ContinuousFund'
  cosmos.protocolpool.v1.QueryContinuousFundsResponse:
    description: |-
      QueryUnclaimedBudgetResponse is the response type for the Query/ContinuousFunds
      RPC method.
    type: object
    properties:
      continuous_funds:
        description: ContinuousFunds defines all continuous funds in state.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.protocolpool.v1.ContinuousFund'
  cosmos.protocolpool.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        $ref: '#/definitions/cosmos.protocolpool.v1.Params'
  cosmos.slashing.v1beta1.MsgUnjail:
    type: object
    title: MsgUnjail defines the Msg/Unjail request type
    properties:
      validator_addr:
        type: string
  cosmos.slashing.v1beta1.MsgUnjailResponse:
    type: object
    title: MsgUnjailResponse defines the Msg/Unjail response type
  cosmos.slashing.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/slashing parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.slashing.v1beta1.Params'
  cosmos.slashing.v1beta1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.slashing.v1beta1.Params:
    description: Params represents the parameters used for by the slashing module.
    type: object
    properties:
      downtime_jail_duration:
        type: string
      min_signed_per_window:
        type: string
        format: byte
      signed_blocks_window:
        type: string
        format: int64
      slash_fraction_double_sign:
        type: string
        format: byte
      slash_fraction_downtime:
        type: string
        format: byte
  cosmos.slashing.v1beta1.QueryParamsResponse:
    type: object
    title: QueryParamsResponse is the response type for the Query/Params RPC method
    properties:
      params:
        $ref: '#/definitions/cosmos.slashing.v1beta1.Params'
  cosmos.slashing.v1beta1.QuerySigningInfoResponse:
    type: object
    title: |-
      QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
      method
    properties:
      val_signing_info:
        title: val_signing_info is the signing info of requested val cons address
        $ref: '#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo'
  cosmos.slashing.v1beta1.QuerySigningInfosResponse:
    type: object
    title: |-
      QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
      method
    properties:
      info:
        type: array
        title: info is the signing info of all validators
        items:
          type: object
          $ref: '#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo'
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.slashing.v1beta1.ValidatorSigningInfo:
    description: |-
      ValidatorSigningInfo defines a validator's signing info for monitoring their
      liveness activity.
    type: object
    properties:
      address:
        type: string
      index_offset:
        description: |-
          Index which is incremented every time a validator is bonded in a block and
          _may_ have signed a pre-commit or not. This in conjunction with the
          signed_blocks_window param determines the index in the missed block bitmap.
        type: string
        format: int64
      jailed_until:
        description: Timestamp until which the validator is jailed due to liveness downtime.
        type: string
        format: date-time
      missed_blocks_counter:
        description: |-
          A counter of missed (unsigned) blocks. It is used to avoid unnecessary
          reads in the missed block bitmap.
        type: string
        format: int64
      start_height:
        type: string
        format: int64
        title: Height at which validator was first a candidate OR was un-jailed
      tombstoned:
        description: |-
          Whether or not a validator has been tombstoned (killed out of validator
          set). It is set once the validator commits an equivocation or for any other
          configured misbehavior.
        type: boolean
  cosmos.staking.v1beta1.BondStatus:
    description: |-
      BondStatus is the status of a validator.

       - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
       - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
       - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
       - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
    type: string
    default: BOND_STATUS_UNSPECIFIED
    enum:
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
  cosmos.staking.v1beta1.Commission:
    description: Commission defines commission parameters for a given validator.
    type: object
    properties:
      commission_rates:
        description: commission_rates defines the initial commission rates to be used for creating a validator.
        $ref: '#/definitions/cosmos.staking.v1beta1.CommissionRates'
      update_time:
        description: update_time is the last time the commission rate was changed.
        type: string
        format: date-time
  cosmos.staking.v1beta1.CommissionRates:
    description: |-
      CommissionRates defines the initial commission rates to be used for creating
      a validator.
    type: object
    properties:
      max_change_rate:
        description: max_change_rate defines the maximum daily increase of the validator commission, as a fraction.
        type: string
      max_rate:
        description: max_rate defines the maximum commission rate which validator can ever charge, as a fraction.
        type: string
      rate:
        description: rate is the commission rate charged to delegators, as a fraction.
        type: string
  cosmos.staking.v1beta1.Delegation:
    description: |-
      Delegation represents the bond with tokens held by an account. It is
      owned by one delegator, and is associated with the voting power of one
      validator.
    type: object
    properties:
      delegator_address:
        description: delegator_address is the encoded address of the delegator.
        type: string
      shares:
        description: shares define the delegation shares received.
        type: string
      validator_address:
        description: validator_address is the encoded address of the validator.
        type: string
  cosmos.staking.v1beta1.DelegationResponse:
    description: |-
      DelegationResponse is equivalent to Delegation except that it contains a
      balance in addition to shares which is more suitable for client responses.
    type: object
    properties:
      balance:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      delegation:
        $ref: '#/definitions/cosmos.staking.v1beta1.Delegation'
  cosmos.staking.v1beta1.Description:
    description: Description defines a validator description.
    type: object
    properties:
      details:
        description: details define other optional details.
        type: string
      identity:
        description: identity defines an optional identity signature (ex. UPort or Keybase).
        type: string
      moniker:
        description: moniker defines a human-readable name for the validator.
        type: string
      security_contact:
        description: security_contact defines an optional email for security contact.
        type: string
      website:
        description: website defines an optional website link.
        type: string
  cosmos.staking.v1beta1.HistoricalInfo:
    description: |-
      HistoricalInfo contains header and validator information for a given block.
      It is stored as part of staking module's state, which persists the `n` most
      recent HistoricalInfo
      (`n` is set by the staking module's `historical_entries` parameter).
    type: object
    properties:
      header:
        $ref: '#/definitions/tendermint.types.Header'
      valset:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
  cosmos.staking.v1beta1.MsgBeginRedelegate:
    description: |-
      MsgBeginRedelegate defines a SDK message for performing a redelegation
      of coins from a delegator and source validator to a destination validator.
    type: object
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      delegator_address:
        type: string
      validator_dst_address:
        type: string
      validator_src_address:
        type: string
  cosmos.staking.v1beta1.MsgBeginRedelegateResponse:
    description: MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
    type: object
    properties:
      completion_time:
        type: string
        format: date-time
  cosmos.staking.v1beta1.MsgCancelUnbondingDelegation:
    type: object
    title: MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator
    properties:
      amount:
        title: amount is always less than or equal to unbonding delegation entry balance
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      creation_height:
        description: creation_height is the height which the unbonding took place.
        type: string
        format: int64
      delegator_address:
        type: string
      validator_address:
        type: string
  cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse:
    type: object
    title: MsgCancelUnbondingDelegationResponse
  cosmos.staking.v1beta1.MsgCreateValidator:
    description: MsgCreateValidator defines a SDK message for creating a new validator.
    type: object
    properties:
      commission:
        $ref: '#/definitions/cosmos.staking.v1beta1.CommissionRates'
      delegator_address:
        description: |-
          Deprecated: Use of Delegator Address in MsgCreateValidator is deprecated.
          The validator address bytes and delegator address bytes refer to the same account while creating validator (defer
          only in bech32 notation).
        type: string
      description:
        $ref: '#/definitions/cosmos.staking.v1beta1.Description'
      min_self_delegation:
        type: string
      pubkey:
        $ref: '#/definitions/google.protobuf.Any'
      validator_address:
        type: string
      value:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  cosmos.staking.v1beta1.MsgCreateValidatorResponse:
    description: MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
    type: object
  cosmos.staking.v1beta1.MsgDelegate:
    description: |-
      MsgDelegate defines a SDK message for performing a delegation of coins
      from a delegator to a validator.
    type: object
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      delegator_address:
        type: string
      validator_address:
        type: string
  cosmos.staking.v1beta1.MsgDelegateResponse:
    description: MsgDelegateResponse defines the Msg/Delegate response type.
    type: object
  cosmos.staking.v1beta1.MsgEditValidator:
    description: MsgEditValidator defines a SDK message for editing an existing validator.
    type: object
    properties:
      commission_rate:
        type: string
        title: |-
          We pass a reference to the new commission rate and min self delegation as
          it's not mandatory to update. If not updated, the deserialized rate will be
          zero with no way to distinguish if an update was intended.
          REF: #2373
      description:
        $ref: '#/definitions/cosmos.staking.v1beta1.Description'
      min_self_delegation:
        type: string
      validator_address:
        type: string
  cosmos.staking.v1beta1.MsgEditValidatorResponse:
    description: MsgEditValidatorResponse defines the Msg/EditValidator response type.
    type: object
  cosmos.staking.v1beta1.MsgUndelegate:
    description: |-
      MsgUndelegate defines a SDK message for performing an undelegation from a
      delegate and a validator.
    type: object
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      delegator_address:
        type: string
      validator_address:
        type: string
  cosmos.staking.v1beta1.MsgUndelegateResponse:
    description: MsgUndelegateResponse defines the Msg/Undelegate response type.
    type: object
    properties:
      amount:
        title: amount returns the amount of undelegated coins
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      completion_time:
        type: string
        format: date-time
  cosmos.staking.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the x/staking parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/cosmos.staking.v1beta1.Params'
  cosmos.staking.v1beta1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  cosmos.staking.v1beta1.Params:
    description: Params defines the parameters for the x/staking module.
    type: object
    properties:
      bond_denom:
        description: bond_denom defines the bondable coin denomination.
        type: string
      historical_entries:
        description: historical_entries is the number of historical entries to persist.
        type: integer
        format: int64
      max_entries:
        description: max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
        type: integer
        format: int64
      max_validators:
        description: max_validators is the maximum number of validators.
        type: integer
        format: int64
      min_commission_rate:
        type: string
        title: min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
      unbonding_time:
        description: unbonding_time is the time duration of unbonding.
        type: string
  cosmos.staking.v1beta1.Pool:
    description: |-
      Pool is used for tracking bonded and not-bonded token supply of the bond
      denomination.
    type: object
    properties:
      bonded_tokens:
        type: string
      not_bonded_tokens:
        type: string
  cosmos.staking.v1beta1.QueryDelegationResponse:
    description: QueryDelegationResponse is response type for the Query/Delegation RPC method.
    type: object
    properties:
      delegation_response:
        description: delegation_responses defines the delegation info of a delegation.
        $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
  cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
    description: |-
      QueryDelegatorDelegationsResponse is response type for the
      Query/DelegatorDelegations RPC method.
    type: object
    properties:
      delegation_responses:
        description: delegation_responses defines all the delegations' info of a delegator.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
    description: |-
      QueryUnbondingDelegatorDelegationsResponse is response type for the
      Query/UnbondingDelegatorDelegations RPC method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      unbonding_responses:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
  cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
    description: |-
      QueryDelegatorValidatorResponse response type for the
      Query/DelegatorValidator RPC method.
    type: object
    properties:
      validator:
        description: validator defines the validator info.
        $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
  cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
    description: |-
      QueryDelegatorValidatorsResponse is response type for the
      Query/DelegatorValidators RPC method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      validators:
        description: validators defines the validators' info of a delegator.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
  cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
    description: |-
      QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
      method.
    type: object
    properties:
      hist:
        description: hist defines the historical info at the given height.
        $ref: '#/definitions/cosmos.staking.v1beta1.HistoricalInfo'
  cosmos.staking.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/cosmos.staking.v1beta1.Params'
  cosmos.staking.v1beta1.QueryPoolResponse:
    description: QueryPoolResponse is response type for the Query/Pool RPC method.
    type: object
    properties:
      pool:
        description: pool defines the pool info.
        $ref: '#/definitions/cosmos.staking.v1beta1.Pool'
  cosmos.staking.v1beta1.QueryRedelegationsResponse:
    description: |-
      QueryRedelegationsResponse is response type for the Query/Redelegations RPC
      method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      redelegation_responses:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationResponse'
  cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
    description: |-
      QueryDelegationResponse is response type for the Query/UnbondingDelegation
      RPC method.
    type: object
    properties:
      unbond:
        description: unbond defines the unbonding information of a delegation.
        $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
  cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
    type: object
    title: |-
      QueryValidatorDelegationsResponse is response type for the
      Query/ValidatorDelegations RPC method
    properties:
      delegation_responses:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  cosmos.staking.v1beta1.QueryValidatorResponse:
    type: object
    title: QueryValidatorResponse is response type for the Query/Validator RPC method
    properties:
      validator:
        description: validator defines the validator info.
        $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
  cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
    description: |-
      QueryValidatorUnbondingDelegationsResponse is response type for the
      Query/ValidatorUnbondingDelegations RPC method.
    type: object
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      unbonding_responses:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
  cosmos.staking.v1beta1.QueryValidatorsResponse:
    type: object
    title: QueryValidatorsResponse is response type for the Query/Validators RPC method
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      validators:
        description: validators contains all the queried validators.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
  cosmos.staking.v1beta1.Redelegation:
    description: |-
      Redelegation contains the list of a particular delegator's redelegating bonds
      from a particular source validator to a particular destination validator.
    type: object
    properties:
      delegator_address:
        description: delegator_address is the bech32-encoded address of the delegator.
        type: string
      entries:
        description: |-
          entries are the redelegation entries.

          redelegation entries
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntry'
      validator_dst_address:
        description: validator_dst_address is the validator redelegation destination operator address.
        type: string
      validator_src_address:
        description: validator_src_address is the validator redelegation source operator address.
        type: string
  cosmos.staking.v1beta1.RedelegationEntry:
    description: RedelegationEntry defines a redelegation object with relevant metadata.
    type: object
    properties:
      completion_time:
        description: completion_time defines the unix time for redelegation completion.
        type: string
        format: date-time
      creation_height:
        description: creation_height  defines the height which the redelegation took place.
        type: string
        format: int64
      initial_balance:
        description: initial_balance defines the initial balance when redelegation started.
        type: string
      shares_dst:
        description: shares_dst is the amount of destination-validator shares created by redelegation.
        type: string
      unbonding_id:
        type: string
        format: uint64
        title: Incrementing id that uniquely identifies this entry
      unbonding_on_hold_ref_count:
        type: string
        format: int64
        title: Strictly positive if this entry's unbonding has been stopped by external modules
  cosmos.staking.v1beta1.RedelegationEntryResponse:
    description: |-
      RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
      contains a balance in addition to shares which is more suitable for client
      responses.
    type: object
    properties:
      balance:
        type: string
      redelegation_entry:
        $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntry'
  cosmos.staking.v1beta1.RedelegationResponse:
    description: |-
      RedelegationResponse is equivalent to a Redelegation except that its entries
      contain a balance in addition to shares which is more suitable for client
      responses.
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntryResponse'
      redelegation:
        $ref: '#/definitions/cosmos.staking.v1beta1.Redelegation'
  cosmos.staking.v1beta1.UnbondingDelegation:
    description: |-
      UnbondingDelegation stores all of a single delegator's unbonding bonds
      for a single validator in an time-ordered list.
    type: object
    properties:
      delegator_address:
        description: delegator_address is the encoded address of the delegator.
        type: string
      entries:
        description: |-
          entries are the unbonding delegation entries.

          unbonding delegation entries
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry'
      validator_address:
        description: validator_address is the encoded address of the validator.
        type: string
  cosmos.staking.v1beta1.UnbondingDelegationEntry:
    description: UnbondingDelegationEntry defines an unbonding object with relevant metadata.
    type: object
    properties:
      balance:
        description: balance defines the tokens to receive at completion.
        type: string
      completion_time:
        description: completion_time is the unix time for unbonding completion.
        type: string
        format: date-time
      creation_height:
        description: creation_height is the height which the unbonding took place.
        type: string
        format: int64
      initial_balance:
        description: initial_balance defines the tokens initially scheduled to receive at completion.
        type: string
      unbonding_id:
        type: string
        format: uint64
        title: Incrementing id that uniquely identifies this entry
      unbonding_on_hold_ref_count:
        type: string
        format: int64
        title: Strictly positive if this entry's unbonding has been stopped by external modules
  cosmos.staking.v1beta1.Validator:
    description: |-
      Validator defines a validator, together with the total amount of the
      Validator's bond shares and their exchange rate to coins. Slashing results in
      a decrease in the exchange rate, allowing correct calculation of future
      undelegations without iterating over delegators. When coins are delegated to
      this validator, the validator is credited with a delegation whose number of
      bond shares is based on the amount of coins delegated divided by the current
      exchange rate. Voting power can be calculated as total bonded shares
      multiplied by exchange rate.
    type: object
    properties:
      commission:
        description: commission defines the commission parameters.
        $ref: '#/definitions/cosmos.staking.v1beta1.Commission'
      consensus_pubkey:
        description: consensus_pubkey is the consensus public key of the validator, as a Protobuf Any.
        $ref: '#/definitions/google.protobuf.Any'
      delegator_shares:
        description: delegator_shares defines total shares issued to a validator's delegators.
        type: string
      description:
        description: description defines the description terms for the validator.
        $ref: '#/definitions/cosmos.staking.v1beta1.Description'
      jailed:
        description: jailed defined whether the validator has been jailed from bonded status or not.
        type: boolean
      min_self_delegation:
        description: min_self_delegation is the validator's self declared minimum self delegation.
        type: string
      operator_address:
        description: operator_address defines the address of the validator's operator; bech encoded in JSON.
        type: string
      status:
        description: status is the validator status (bonded/unbonding/unbonded).
        $ref: '#/definitions/cosmos.staking.v1beta1.BondStatus'
      tokens:
        description: tokens define the delegated tokens (incl. self-delegation).
        type: string
      unbonding_height:
        description: unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
        type: string
        format: int64
      unbonding_ids:
        type: array
        title: list of unbonding ids, each uniquely identifing an unbonding of this validator
        items:
          type: string
          format: uint64
      unbonding_on_hold_ref_count:
        type: string
        format: int64
        title: strictly positive if this validator's unbonding has been stopped by external modules
      unbonding_time:
        description: unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
        type: string
        format: date-time
  cosmos.store.streaming.abci.ListenCommitRequest:
    type: object
    title: ListenCommitRequest is the request type for the ListenCommit RPC method
    properties:
      block_height:
        type: string
        format: int64
        title: explicitly pass in block height as ResponseCommit does not contain this info
      change_set:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.store.v1beta1.StoreKVPair'
      res:
        $ref: '#/definitions/tendermint.abci.ResponseCommit'
  cosmos.store.streaming.abci.ListenCommitResponse:
    type: object
    title: ListenCommitResponse is the response type for the ListenCommit RPC method
  cosmos.store.streaming.abci.ListenFinalizeBlockRequest:
    type: object
    title: ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
    properties:
      req:
        $ref: '#/definitions/tendermint.abci.RequestFinalizeBlock'
      res:
        $ref: '#/definitions/tendermint.abci.ResponseFinalizeBlock'
  cosmos.store.streaming.abci.ListenFinalizeBlockResponse:
    type: object
    title: ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
  cosmos.store.v1beta1.StoreKVPair:
    type: object
    title: |-
      StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
      It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
      Deletes
    properties:
      delete:
        type: boolean
        title: true indicates a delete operation, false indicates a set operation
      key:
        type: string
        format: byte
      store_key:
        type: string
        title: the store key for the KVStore this pair originates from
      value:
        type: string
        format: byte
  cosmos.tx.signing.v1beta1.SignMode:
    description: |-
      SignMode represents a signing mode with its own security guarantees.

      This enum should be considered a registry of all known sign modes
      in the Cosmos ecosystem. Apps are not expected to support all known
      sign modes. Apps that would like to support custom  sign modes are
      encouraged to open a small PR against this file to add a new case
      to this SignMode enum describing their sign mode so that different
      apps have a consistent version of this enum.

       - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
      rejected.
       - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
      verified with raw bytes from Tx.
       - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
      human-readable textual representation on top of the binary representation
      from SIGN_MODE_DIRECT.

      Since: cosmos-sdk 0.50
       - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
      SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
      require signers signing over other signers' `signer_info`.

      Since: cosmos-sdk 0.46
       - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
      Amino JSON and will be removed in the future.
       - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
      SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

      Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
      but is not implemented on the SDK by default. To enable EIP-191, you need
      to pass a custom `TxConfig` that has an implementation of
      `SignModeHandler` for EIP-191. The SDK may decide to fully support
      EIP-191 in the future.

      Since: cosmos-sdk 0.45.2
    type: string
    default: SIGN_MODE_UNSPECIFIED
    enum:
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_DIRECT_AUX
      - SIGN_MODE_LEGACY_AMINO_JSON
      - SIGN_MODE_EIP_191
  cosmos.tx.v1beta1.AuthInfo:
    description: |-
      AuthInfo describes the fee and signer modes that are used to sign a
      transaction.
    type: object
    properties:
      fee:
        description: |-
          Fee is the fee and gas limit for the transaction. The first signer is the
          primary signer and the one which pays the fee. The fee can be calculated
          based on the cost of evaluating the body and doing signature verification
          of the signers. This can be estimated via simulation.
        $ref: '#/definitions/cosmos.tx.v1beta1.Fee'
      signer_infos:
        description: |-
          signer_infos defines the signing modes for the required signers. The number
          and order of elements must match the required signers from TxBody's
          messages. The first element is the primary signer and the one which pays
          the fee.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.tx.v1beta1.SignerInfo'
      tip:
        description: |-
          Tip is the optional tip used for transactions fees paid in another denom.

          This field is ignored if the chain didn't enable tips, i.e. didn't add the
          `TipDecorator` in its posthandler.
        $ref: '#/definitions/cosmos.tx.v1beta1.Tip'
  cosmos.tx.v1beta1.BroadcastMode:
    description: |-
      BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
      method.

       - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
       - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
      BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
       - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
      for a CheckTx execution response only.
       - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
      returns immediately.
    type: string
    default: BROADCAST_MODE_UNSPECIFIED
    enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
  cosmos.tx.v1beta1.BroadcastTxRequest:
    description: |-
      BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
      RPC method.
    type: object
    properties:
      mode:
        $ref: '#/definitions/cosmos.tx.v1beta1.BroadcastMode'
      tx_bytes:
        description: tx_bytes is the raw transaction.
        type: string
        format: byte
  cosmos.tx.v1beta1.BroadcastTxResponse:
    description: |-
      BroadcastTxResponse is the response type for the
      Service.BroadcastTx method.
    type: object
    properties:
      tx_response:
        description: tx_response is the queried TxResponses.
        $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
  cosmos.tx.v1beta1.Fee:
    description: |-
      Fee includes the amount of coins paid in fees and the maximum
      gas to be used by the transaction. The ratio yields an effective "gasprice",
      which must be above some miminum to be accepted into the mempool.
    type: object
    properties:
      amount:
        type: array
        title: amount is the amount of coins to be paid as a fee
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      gas_limit:
        type: string
        format: uint64
        title: |-
          gas_limit is the maximum gas that can be used in transaction processing
          before an out of gas error occurs
      granter:
        type: string
        title: |-
          if set, the fee payer (either the first signer or the value of the payer
          field) requests that a fee grant be used to pay fees instead of the fee
          payer's own balance. If an appropriate fee grant does not exist or the
          chain does not support fee grants, this will fail
      payer:
        description: |-
          if unset, the first signer is responsible for paying the fees. If set, the
          specified account must pay the fees. the payer must be a tx signer (and
          thus have signed this field in AuthInfo). setting this field does *not*
          change the ordering of required signers for the transaction.
        type: string
  cosmos.tx.v1beta1.GetBlockWithTxsResponse:
    description: |-
      GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs
      method.
    type: object
    properties:
      block:
        $ref: '#/definitions/tendermint.types.Block'
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      pagination:
        description: pagination defines a pagination for the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      txs:
        description: txs are the transactions in the block.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
  cosmos.tx.v1beta1.GetTxResponse:
    description: GetTxResponse is the response type for the Service.GetTx method.
    type: object
    properties:
      tx:
        description: tx is the queried transaction.
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
      tx_response:
        description: tx_response is the queried TxResponses.
        $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
  cosmos.tx.v1beta1.GetTxsEventResponse:
    description: |-
      GetTxsEventResponse is the response type for the Service.TxsByEvents
      RPC method.
    type: object
    properties:
      pagination:
        description: |-
          pagination defines a pagination for the response.
          Deprecated post v0.46.x: use total instead.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      total:
        type: string
        format: uint64
        title: total is total number of results available
      tx_responses:
        description: tx_responses is the list of queried TxResponses.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
      txs:
        description: txs is the list of queried transactions.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
  cosmos.tx.v1beta1.ModeInfo:
    description: ModeInfo describes the signing mode of a single or nested multisig signer.
    type: object
    properties:
      multi:
        title: multi represents a nested multisig signer
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi'
      single:
        title: single represents a single signer
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Single'
  cosmos.tx.v1beta1.ModeInfo.Multi:
    type: object
    title: Multi is the mode info for a multisig public key
    properties:
      bitarray:
        title: bitarray specifies which keys within the multisig are signing
        $ref: '#/definitions/cosmos.crypto.multisig.v1beta1.CompactBitArray'
      mode_infos:
        type: array
        title: |-
          mode_infos is the corresponding modes of the signers of the multisig
          which could include nested multisig public keys
        items:
          type: object
          $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
  cosmos.tx.v1beta1.ModeInfo.Single:
    type: object
    title: |-
      Single is the mode info for a single signer. It is structured as a message
      to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
      future
    properties:
      mode:
        title: mode is the signing mode of the single signer
        $ref: '#/definitions/cosmos.tx.signing.v1beta1.SignMode'
  cosmos.tx.v1beta1.OrderBy:
    description: |-
      - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
      to ASC in this case.
       - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
       - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
    type: string
    title: OrderBy defines the sorting order
    default: ORDER_BY_UNSPECIFIED
    enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
  cosmos.tx.v1beta1.SignerInfo:
    description: |-
      SignerInfo describes the public key and signing mode of a single top-level
      signer.
    type: object
    properties:
      mode_info:
        title: |-
          mode_info describes the signing mode of the signer and is a nested
          structure to support nested multisig pubkey's
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
      public_key:
        description: |-
          public_key is the public key of the signer. It is optional for accounts
          that already exist in state. If unset, the verifier can use the required \
          signer address for this position and lookup the public key.
        $ref: '#/definitions/google.protobuf.Any'
      sequence:
        description: |-
          sequence is the sequence of the account, which describes the
          number of committed transactions signed by a given address. It is used to
          prevent replay attacks.
        type: string
        format: uint64
  cosmos.tx.v1beta1.SimulateRequest:
    description: |-
      SimulateRequest is the request type for the Service.Simulate
      RPC method.
    type: object
    properties:
      tx:
        description: |-
          tx is the transaction to simulate.
          Deprecated. Send raw tx bytes instead.
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
      tx_bytes:
        description: tx_bytes is the raw transaction.
        type: string
        format: byte
  cosmos.tx.v1beta1.SimulateResponse:
    description: |-
      SimulateResponse is the response type for the
      Service.SimulateRPC method.
    type: object
    properties:
      gas_info:
        description: gas_info is the information about gas used in the simulation.
        $ref: '#/definitions/cosmos.base.abci.v1beta1.GasInfo'
      result:
        description: result is the result of the simulation.
        $ref: '#/definitions/cosmos.base.abci.v1beta1.Result'
  cosmos.tx.v1beta1.Tip:
    description: Tip is the tip used for meta-transactions.
    type: object
    properties:
      amount:
        type: array
        title: amount is the amount of the tip
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      tipper:
        type: string
        title: tipper is the address of the account paying for the tip
  cosmos.tx.v1beta1.Tx:
    description: Tx is the standard type used for broadcasting transactions.
    type: object
    properties:
      auth_info:
        title: |-
          auth_info is the authorization related content of the transaction,
          specifically signers, signer modes and fee
        $ref: '#/definitions/cosmos.tx.v1beta1.AuthInfo'
      body:
        title: body is the processable content of the transaction
        $ref: '#/definitions/cosmos.tx.v1beta1.TxBody'
      signatures:
        description: |-
          signatures is a list of signatures that matches the length and order of
          AuthInfo's signer_infos to allow connecting signature meta information like
          public key and signing mode by position.
        type: array
        items:
          type: string
          format: byte
  cosmos.tx.v1beta1.TxBody:
    description: TxBody is the body of a transaction that all signers sign over.
    type: object
    properties:
      extension_options:
        type: array
        title: |-
          extension_options are arbitrary options that can be added by chains
          when the default options are not sufficient. If any of these are present
          and can't be handled, the transaction will be rejected
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      memo:
        description: |-
          memo is any arbitrary note/comment to be added to the transaction.
          WARNING: in clients, any publicly exposed text should not be called memo,
          but should be called `note` instead (see
          https://github.com/cosmos/cosmos-sdk/issues/9122).
        type: string
      messages:
        description: |-
          messages is a list of messages to be executed. The required signers of
          those messages define the number and order of elements in AuthInfo's
          signer_infos and Tx's signatures. Each required signer address is added to
          the list only the first time it occurs.
          By convention, the first required signer (usually from the first message)
          is referred to as the primary signer and pays the fee for the whole
          transaction.
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      non_critical_extension_options:
        type: array
        title: |-
          extension_options are arbitrary options that can be added by chains
          when the default options are not sufficient. If any of these are present
          and can't be handled, they will be ignored
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      timeout_height:
        description: |-
          timeout_height is the block height after which this transaction will not
          be processed by the chain.
        type: string
        format: uint64
      timeout_timestamp:
        description: |-
          timeout_timestamp is the block time after which this transaction will not
          be processed by the chain.

          Note, if unordered=true this value MUST be set
          and will act as a short-lived TTL in which the transaction is deemed valid
          and kept in memory to prevent duplicates.
        type: string
        format: date-time
      unordered:
        description: |-
          unordered, when set to true, indicates that the transaction signer(s)
          intend for the transaction to be evaluated and executed in an un-ordered
          fashion. Specifically, the account's nonce will NOT be checked or
          incremented, which allows for fire-and-forget as well as concurrent
          transaction execution.

          Note, when set to true, the existing 'timeout_timestamp' value must
          be set and will be used to correspond to a timestamp in which the transaction is deemed
          valid.

          When true, the sequence value MUST be 0, and any transaction with unordered=true and a non-zero sequence value will
          be rejected.
          External services that make assumptions about sequence values may need to be updated because of this.
        type: boolean
  cosmos.tx.v1beta1.TxDecodeAminoRequest:
    description: |-
      TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
      RPC method.
    type: object
    properties:
      amino_binary:
        type: string
        format: byte
  cosmos.tx.v1beta1.TxDecodeAminoResponse:
    description: |-
      TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
      RPC method.
    type: object
    properties:
      amino_json:
        type: string
  cosmos.tx.v1beta1.TxDecodeRequest:
    description: |-
      TxDecodeRequest is the request type for the Service.TxDecode
      RPC method.
    type: object
    properties:
      tx_bytes:
        description: tx_bytes is the raw transaction.
        type: string
        format: byte
  cosmos.tx.v1beta1.TxDecodeResponse:
    description: |-
      TxDecodeResponse is the response type for the
      Service.TxDecode method.
    type: object
    properties:
      tx:
        description: tx is the decoded transaction.
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
  cosmos.tx.v1beta1.TxEncodeAminoRequest:
    description: |-
      TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
      RPC method.
    type: object
    properties:
      amino_json:
        type: string
  cosmos.tx.v1beta1.TxEncodeAminoResponse:
    description: |-
      TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
      RPC method.
    type: object
    properties:
      amino_binary:
        type: string
        format: byte
  cosmos.tx.v1beta1.TxEncodeRequest:
    description: |-
      TxEncodeRequest is the request type for the Service.TxEncode
      RPC method.
    type: object
    properties:
      tx:
        description: tx is the transaction to encode.
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
  cosmos.tx.v1beta1.TxEncodeResponse:
    description: |-
      TxEncodeResponse is the response type for the
      Service.TxEncode method.
    type: object
    properties:
      tx_bytes:
        description: tx_bytes is the encoded transaction bytes.
        type: string
        format: byte
  cosmos.upgrade.v1beta1.ModuleVersion:
    description: ModuleVersion specifies a module and its consensus version.
    type: object
    properties:
      name:
        type: string
        title: name of the app module
      version:
        type: string
        format: uint64
        title: consensus version of the app module
  cosmos.upgrade.v1beta1.MsgCancelUpgrade:
    description: MsgCancelUpgrade is the Msg/CancelUpgrade request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
  cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse:
    description: MsgCancelUpgradeResponse is the Msg/CancelUpgrade response type.
    type: object
  cosmos.upgrade.v1beta1.MsgSoftwareUpgrade:
    description: MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      plan:
        description: plan is the upgrade plan.
        $ref: '#/definitions/cosmos.upgrade.v1beta1.Plan'
  cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse:
    description: MsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade response type.
    type: object
  cosmos.upgrade.v1beta1.Plan:
    description: Plan specifies information about a planned upgrade and when it should occur.
    type: object
    properties:
      height:
        description: The height at which the upgrade must be performed.
        type: string
        format: int64
      info:
        type: string
        title: |-
          Any application specific upgrade info to be included on-chain
          such as a git commit that validators could automatically upgrade to
      name:
        description: |-
          Sets the name for the upgrade. This name will be used by the upgraded
          version of the software to apply any special "on-upgrade" commands during
          the first BeginBlock method after the upgrade is applied. It is also used
          to detect whether a software version can handle a given upgrade. If no
          upgrade handler with this name has been set in the software, it will be
          assumed that the software is out-of-date when the upgrade Time or Height is
          reached and the software will exit.
        type: string
      time:
        description: |-
          Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
          has been removed from the SDK.
          If this field is not empty, an error will be thrown.
        type: string
        format: date-time
      upgraded_client_state:
        description: |-
          Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
          moved to the IBC module in the sub module 02-client.
          If this field is not empty, an error will be thrown.
        $ref: '#/definitions/google.protobuf.Any'
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
    description: |-
      QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
      method.
    type: object
    properties:
      height:
        description: height is the block height at which the plan was applied.
        type: string
        format: int64
  cosmos.upgrade.v1beta1.QueryAuthorityResponse:
    type: object
    title: QueryAuthorityResponse is the response type for Query/Authority
    properties:
      address:
        type: string
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
    description: |-
      QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
      method.
    type: object
    properties:
      plan:
        description: plan is the current upgrade plan.
        $ref: '#/definitions/cosmos.upgrade.v1beta1.Plan'
  cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
    description: |-
      QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
      RPC method.
    type: object
    properties:
      module_versions:
        description: module_versions is a list of module names with their consensus versions.
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.upgrade.v1beta1.ModuleVersion'
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
    description: |-
      QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
      RPC method.
    type: object
    properties:
      upgraded_consensus_state:
        type: string
        format: byte
  cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount:
    description: |-
      MsgCreateVestingAccount defines a message that enables creating a vesting
      account.
    type: object
    properties:
      from_address:
        type: string
      start_time:
        description: start of vesting as unix time (in seconds).
        type: string
        format: int64
      to_address:
        type: string
      vesting_periods:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.vesting.v1beta1.Period'
  cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse:
    description: |-
      MsgCreateVestingAccountResponse defines the Msg/CreatePeriodicVestingAccount
      response type.
    type: object
  cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount:
    description: |-
      MsgCreatePermanentLockedAccount defines a message that enables creating a permanent
      locked account.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      from_address:
        type: string
      to_address:
        type: string
  cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse:
    description: MsgCreatePermanentLockedAccountResponse defines the Msg/CreatePermanentLockedAccount response type.
    type: object
  cosmos.vesting.v1beta1.MsgCreateVestingAccount:
    description: |-
      MsgCreateVestingAccount defines a message that enables creating a vesting
      account.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      delayed:
        type: boolean
      end_time:
        description: end of vesting as unix time (in seconds).
        type: string
        format: int64
      from_address:
        type: string
      to_address:
        type: string
  cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse:
    description: MsgCreateVestingAccountResponse defines the Msg/CreateVestingAccount response type.
    type: object
  cosmos.vesting.v1beta1.Period:
    description: Period defines a length of time and amount of coins that will vest.
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      length:
        description: Period duration in seconds.
        type: string
        format: int64
  google.protobuf.Any:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  google.rpc.Status:
    type: object
    properties:
      code:
        type: integer
        format: int32
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
      message:
        type: string
  ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount:
    type: object
    title: MsgRegisterInterchainAccount defines the payload for Msg/RegisterAccount
    properties:
      connection_id:
        type: string
      ordering:
        $ref: '#/definitions/ibc.core.channel.v1.Order'
      owner:
        type: string
      version:
        type: string
  ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse:
    type: object
    title: MsgRegisterInterchainAccountResponse defines the response for Msg/RegisterAccount
    properties:
      channel_id:
        type: string
      port_id:
        type: string
  ibc.applications.interchain_accounts.controller.v1.MsgSendTx:
    type: object
    title: MsgSendTx defines the payload for Msg/SendTx
    properties:
      connection_id:
        type: string
      owner:
        type: string
      packet_data:
        $ref: '#/definitions/ibc.applications.interchain_accounts.v1.InterchainAccountPacketData'
      relative_timeout:
        description: |-
          Relative timeout timestamp provided will be added to the current block time during transaction execution.
          The timeout timestamp must be non-zero.
        type: string
        format: uint64
  ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse:
    type: object
    title: MsgSendTxResponse defines the response for MsgSendTx
    properties:
      sequence:
        type: string
        format: uint64
  ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams:
    type: object
    title: MsgUpdateParams defines the payload for Msg/UpdateParams
    properties:
      params:
        description: |-
          params defines the 27-interchain-accounts/controller parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.Params'
      signer:
        type: string
        title: signer address
  ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse:
    type: object
    title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
  ibc.applications.interchain_accounts.controller.v1.Params:
    description: |-
      Params defines the set of on-chain interchain accounts parameters.
      The following parameters may be used to disable the controller submodule.
    type: object
    properties:
      controller_enabled:
        description: controller_enabled enables or disables the controller submodule.
        type: boolean
  ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse:
    description: QueryInterchainAccountResponse the response type for the Query/InterchainAccount RPC method.
    type: object
    properties:
      address:
        type: string
  ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/ibc.applications.interchain_accounts.controller.v1.Params'
  ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafe:
    type: object
    title: MsgModuleQuerySafe defines the payload for Msg/ModuleQuerySafe
    properties:
      requests:
        description: requests defines the module safe queries to execute.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.QueryRequest'
      signer:
        type: string
        title: signer address
  ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafeResponse:
    type: object
    title: MsgModuleQuerySafeResponse defines the response for Msg/ModuleQuerySafe
    properties:
      height:
        type: string
        format: uint64
        title: height at which the responses were queried
      responses:
        type: array
        title: protobuf encoded responses for each query
        items:
          type: string
          format: byte
  ibc.applications.interchain_accounts.host.v1.MsgUpdateParams:
    type: object
    title: MsgUpdateParams defines the payload for Msg/UpdateParams
    properties:
      params:
        description: |-
          params defines the 27-interchain-accounts/host parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.Params'
      signer:
        type: string
        title: signer address
  ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse:
    type: object
    title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
  ibc.applications.interchain_accounts.host.v1.Params:
    description: |-
      Params defines the set of on-chain interchain accounts parameters.
      The following parameters may be used to disable the host submodule.
    type: object
    properties:
      allow_messages:
        description: allow_messages defines a list of sdk message typeURLs allowed to be executed on a host chain.
        type: array
        items:
          type: string
      host_enabled:
        description: host_enabled enables or disables the host submodule.
        type: boolean
  ibc.applications.interchain_accounts.host.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/ibc.applications.interchain_accounts.host.v1.Params'
  ibc.applications.interchain_accounts.host.v1.QueryRequest:
    description: |-
      QueryRequest defines the parameters for a particular query request
      by an interchain account.
    type: object
    properties:
      data:
        type: string
        format: byte
        title: |-
          data defines the payload of the query request as defined by ADR-021.
          https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing
      path:
        type: string
        title: |-
          path defines the path of the query request as defined by ADR-021.
          https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing
  ibc.applications.interchain_accounts.v1.InterchainAccountPacketData:
    description: InterchainAccountPacketData is comprised of a raw transaction, type of transaction and optional memo field.
    type: object
    properties:
      data:
        type: string
        format: byte
      memo:
        type: string
      type:
        $ref: '#/definitions/ibc.applications.interchain_accounts.v1.Type'
  ibc.applications.interchain_accounts.v1.Type:
    description: |-
      - TYPE_UNSPECIFIED: Default zero value enumeration
       - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain
    type: string
    title: |-
      Type defines a classification of message issued from a controller chain to its associated interchain accounts
      host
    default: TYPE_UNSPECIFIED
    enum:
      - TYPE_UNSPECIFIED
      - TYPE_EXECUTE_TX
  ibc.applications.transfer.v1.Denom:
    description: Denom holds the base denom of a Token and a trace of the chains it was sent through.
    type: object
    properties:
      base:
        type: string
        title: the base token denomination
      trace:
        type: array
        title: the trace of the token
        items:
          type: object
          $ref: '#/definitions/ibc.applications.transfer.v1.Hop'
  ibc.applications.transfer.v1.Hop:
    type: object
    title: Hop defines a port ID, channel ID pair specifying a unique "hop" in a trace
    properties:
      channel_id:
        type: string
      port_id:
        type: string
  ibc.applications.transfer.v1.MsgTransfer:
    type: object
    title: |-
      MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between
      ICS20 enabled chains. See ICS Spec here:
      https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
    properties:
      encoding:
        type: string
        title: optional encoding
      memo:
        type: string
        title: optional memo
      receiver:
        type: string
        title: the recipient address on the destination chain
      sender:
        type: string
        title: the sender address
      source_channel:
        type: string
        title: the channel by which the packet will be sent
      source_port:
        type: string
        title: the port on which the packet will be sent
      timeout_height:
        description: |-
          Timeout height relative to the current block height.
          If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
          If you are sending with IBC v2 protocol, timeout_timestamp must be set, and timeout_height must be omitted.
        $ref: '#/definitions/ibc.core.client.v1.Height'
      timeout_timestamp:
        description: |-
          Timeout timestamp in absolute nanoseconds since unix epoch.
          If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
          If you are sending with IBC v2 protocol, timeout_timestamp must be set.
        type: string
        format: uint64
      token:
        title: token to be transferred
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  ibc.applications.transfer.v1.MsgTransferResponse:
    description: MsgTransferResponse defines the Msg/Transfer response type.
    type: object
    properties:
      sequence:
        type: string
        format: uint64
        title: sequence number of the transfer packet sent
  ibc.applications.transfer.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      params:
        description: |-
          params defines the transfer parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/ibc.applications.transfer.v1.Params'
      signer:
        type: string
        title: signer address
  ibc.applications.transfer.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  ibc.applications.transfer.v1.Params:
    description: |-
      Params defines the set of IBC transfer parameters.
      NOTE: To prevent a single token from being transferred, set the
      TransfersEnabled parameter to true and then set the bank module's SendEnabled
      parameter for the denomination to false.
    type: object
    properties:
      receive_enabled:
        description: |-
          receive_enabled enables or disables all cross-chain token transfers to this
          chain.
        type: boolean
      send_enabled:
        description: |-
          send_enabled enables or disables all cross-chain token transfers from this
          chain.
        type: boolean
  ibc.applications.transfer.v1.QueryDenomHashResponse:
    description: |-
      QueryDenomHashResponse is the response type for the Query/DenomHash RPC
      method.
    type: object
    properties:
      hash:
        description: hash (in hex format) of the denomination trace information.
        type: string
  ibc.applications.transfer.v1.QueryDenomResponse:
    description: |-
      QueryDenomResponse is the response type for the Query/Denom RPC
      method.
    type: object
    properties:
      denom:
        description: denom returns the requested denomination.
        $ref: '#/definitions/ibc.applications.transfer.v1.Denom'
  ibc.applications.transfer.v1.QueryDenomsResponse:
    description: |-
      QueryDenomsResponse is the response type for the Query/Denoms RPC
      method.
    type: object
    properties:
      denoms:
        description: denoms returns all denominations.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.applications.transfer.v1.Denom'
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.applications.transfer.v1.QueryEscrowAddressResponse:
    description: QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method.
    type: object
    properties:
      escrow_address:
        type: string
        title: the escrow account address
  ibc.applications.transfer.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/ibc.applications.transfer.v1.Params'
  ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse:
    description: QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom RPC method.
    type: object
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  ibc.core.channel.v1.Channel:
    description: |-
      Channel defines pipeline for exactly-once packet delivery between specific
      modules on separate blockchains, which has at least one end capable of
      sending packets and one end capable of receiving packets.
    type: object
    properties:
      connection_hops:
        type: array
        title: |-
          list of connection identifiers, in order, along which packets sent on
          this channel will travel
        items:
          type: string
      counterparty:
        title: counterparty channel end
        $ref: '#/definitions/ibc.core.channel.v1.Counterparty'
      ordering:
        title: whether the channel is ordered or unordered
        $ref: '#/definitions/ibc.core.channel.v1.Order'
      state:
        title: current state of the channel end
        $ref: '#/definitions/ibc.core.channel.v1.State'
      version:
        type: string
        title: opaque channel version, which is agreed upon during the handshake
  ibc.core.channel.v1.Counterparty:
    type: object
    title: Counterparty defines a channel end counterparty
    properties:
      channel_id:
        type: string
        title: channel end on the counterparty chain
      port_id:
        description: port on the counterparty chain which owns the other end of the channel.
        type: string
  ibc.core.channel.v1.IdentifiedChannel:
    description: |-
      IdentifiedChannel defines a channel with additional port and channel
      identifier fields.
    type: object
    properties:
      channel_id:
        type: string
        title: channel identifier
      connection_hops:
        type: array
        title: |-
          list of connection identifiers, in order, along which packets sent on
          this channel will travel
        items:
          type: string
      counterparty:
        title: counterparty channel end
        $ref: '#/definitions/ibc.core.channel.v1.Counterparty'
      ordering:
        title: whether the channel is ordered or unordered
        $ref: '#/definitions/ibc.core.channel.v1.Order'
      port_id:
        type: string
        title: port identifier
      state:
        title: current state of the channel end
        $ref: '#/definitions/ibc.core.channel.v1.State'
      version:
        type: string
        title: opaque channel version, which is agreed upon during the handshake
  ibc.core.channel.v1.MsgAcknowledgement:
    type: object
    title: MsgAcknowledgement receives incoming IBC acknowledgement
    properties:
      acknowledgement:
        type: string
        format: byte
      packet:
        $ref: '#/definitions/ibc.core.channel.v1.Packet'
      proof_acked:
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      signer:
        type: string
  ibc.core.channel.v1.MsgAcknowledgementResponse:
    description: MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
    type: object
    properties:
      result:
        $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
  ibc.core.channel.v1.MsgChannelCloseConfirm:
    description: |-
      MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B
      to acknowledge the change of channel state to CLOSED on Chain A.
    type: object
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_init:
        type: string
        format: byte
      signer:
        type: string
  ibc.core.channel.v1.MsgChannelCloseConfirmResponse:
    description: |-
      MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm response
      type.
    type: object
  ibc.core.channel.v1.MsgChannelCloseInit:
    description: |-
      MsgChannelCloseInit defines a msg sent by a Relayer to Chain A
      to close a channel with Chain B.
    type: object
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      signer:
        type: string
  ibc.core.channel.v1.MsgChannelCloseInitResponse:
    description: MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response type.
    type: object
  ibc.core.channel.v1.MsgChannelOpenAck:
    description: |-
      MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge
      the change of channel state to TRYOPEN on Chain B.
    type: object
    properties:
      channel_id:
        type: string
      counterparty_channel_id:
        type: string
      counterparty_version:
        type: string
      port_id:
        type: string
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_try:
        type: string
        format: byte
      signer:
        type: string
  ibc.core.channel.v1.MsgChannelOpenAckResponse:
    description: MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response type.
    type: object
  ibc.core.channel.v1.MsgChannelOpenConfirm:
    description: |-
      MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to
      acknowledge the change of channel state to OPEN on Chain A.
    type: object
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      proof_ack:
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      signer:
        type: string
  ibc.core.channel.v1.MsgChannelOpenConfirmResponse:
    description: |-
      MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm response
      type.
    type: object
  ibc.core.channel.v1.MsgChannelOpenInit:
    description: |-
      MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It
      is called by a relayer on Chain A.
    type: object
    properties:
      channel:
        $ref: '#/definitions/ibc.core.channel.v1.Channel'
      port_id:
        type: string
      signer:
        type: string
  ibc.core.channel.v1.MsgChannelOpenInitResponse:
    description: MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response type.
    type: object
    properties:
      channel_id:
        type: string
      version:
        type: string
  ibc.core.channel.v1.MsgChannelOpenTry:
    description: |-
      MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
      on Chain B. The version field within the Channel field has been deprecated. Its
      value will be ignored by core IBC.
    type: object
    properties:
      channel:
        description: 'NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC.'
        $ref: '#/definitions/ibc.core.channel.v1.Channel'
      counterparty_version:
        type: string
      port_id:
        type: string
      previous_channel_id:
        description: 'Deprecated: this field is unused. Crossing hello''s are no longer supported in core IBC.'
        type: string
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_init:
        type: string
        format: byte
      signer:
        type: string
  ibc.core.channel.v1.MsgChannelOpenTryResponse:
    description: MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response type.
    type: object
    properties:
      channel_id:
        type: string
      version:
        type: string
  ibc.core.channel.v1.MsgRecvPacket:
    type: object
    title: MsgRecvPacket receives incoming IBC packet
    properties:
      packet:
        $ref: '#/definitions/ibc.core.channel.v1.Packet'
      proof_commitment:
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      signer:
        type: string
  ibc.core.channel.v1.MsgRecvPacketResponse:
    description: MsgRecvPacketResponse defines the Msg/RecvPacket response type.
    type: object
    properties:
      result:
        $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
  ibc.core.channel.v1.MsgTimeout:
    type: object
    title: MsgTimeout receives timed-out packet
    properties:
      next_sequence_recv:
        type: string
        format: uint64
      packet:
        $ref: '#/definitions/ibc.core.channel.v1.Packet'
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_unreceived:
        type: string
        format: byte
      signer:
        type: string
  ibc.core.channel.v1.MsgTimeoutOnClose:
    description: MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
    type: object
    properties:
      next_sequence_recv:
        type: string
        format: uint64
      packet:
        $ref: '#/definitions/ibc.core.channel.v1.Packet'
      proof_close:
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_unreceived:
        type: string
        format: byte
      signer:
        type: string
  ibc.core.channel.v1.MsgTimeoutOnCloseResponse:
    description: MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response type.
    type: object
    properties:
      result:
        $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
  ibc.core.channel.v1.MsgTimeoutResponse:
    description: MsgTimeoutResponse defines the Msg/Timeout response type.
    type: object
    properties:
      result:
        $ref: '#/definitions/ibc.core.channel.v1.ResponseResultType'
  ibc.core.channel.v1.Order:
    description: |-
      - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
       - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
      which they were sent.
       - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
    type: string
    title: Order defines if a channel is ORDERED or UNORDERED
    default: ORDER_NONE_UNSPECIFIED
    enum:
      - ORDER_NONE_UNSPECIFIED
      - ORDER_UNORDERED
      - ORDER_ORDERED
  ibc.core.channel.v1.Packet:
    type: object
    title: Packet defines a type that carries data across different chains through IBC
    properties:
      data:
        type: string
        format: byte
        title: actual opaque bytes transferred directly to the application module
      destination_channel:
        description: identifies the channel end on the receiving chain.
        type: string
      destination_port:
        description: identifies the port on the receiving chain.
        type: string
      sequence:
        description: |-
          number corresponds to the order of sends and receives, where a Packet
          with an earlier sequence number must be sent and received before a Packet
          with a later sequence number.
        type: string
        format: uint64
      source_channel:
        description: identifies the channel end on the sending chain.
        type: string
      source_port:
        description: identifies the port on the sending chain.
        type: string
      timeout_height:
        title: block height after which the packet times out
        $ref: '#/definitions/ibc.core.client.v1.Height'
      timeout_timestamp:
        type: string
        format: uint64
        title: block timestamp (in nanoseconds) after which the packet times out
  ibc.core.channel.v1.PacketState:
    description: |-
      PacketState defines the generic type necessary to retrieve and store
      packet commitments, acknowledgements, and receipts.
      Caller is responsible for knowing the context necessary to interpret this
      state as a commitment, acknowledgement, or a receipt.
    type: object
    properties:
      channel_id:
        description: channel unique identifier.
        type: string
      data:
        description: embedded data that represents packet state.
        type: string
        format: byte
      port_id:
        description: channel port identifier.
        type: string
      sequence:
        description: packet sequence.
        type: string
        format: uint64
  ibc.core.channel.v1.QueryChannelClientStateResponse:
    type: object
    title: |-
      QueryChannelClientStateResponse is the Response type for the
      Query/QueryChannelClientState RPC method
    properties:
      identified_client_state:
        title: client state associated with the channel
        $ref: '#/definitions/ibc.core.client.v1.IdentifiedClientState'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v1.QueryChannelConsensusStateResponse:
    type: object
    title: |-
      QueryChannelClientStateResponse is the Response type for the
      Query/QueryChannelClientState RPC method
    properties:
      client_id:
        type: string
        title: client ID associated with the consensus state
      consensus_state:
        title: consensus state associated with the channel
        $ref: '#/definitions/google.protobuf.Any'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v1.QueryChannelResponse:
    description: |-
      QueryChannelResponse is the response type for the Query/Channel RPC method.
      Besides the Channel end, it includes a proof and the height from which the
      proof was retrieved.
    type: object
    properties:
      channel:
        title: channel associated with the request identifiers
        $ref: '#/definitions/ibc.core.channel.v1.Channel'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v1.QueryChannelsResponse:
    description: QueryChannelsResponse is the response type for the Query/Channels RPC method.
    type: object
    properties:
      channels:
        description: list of stored channels of the chain.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v1.IdentifiedChannel'
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.channel.v1.QueryConnectionChannelsResponse:
    type: object
    title: |-
      QueryConnectionChannelsResponse is the Response type for the
      Query/QueryConnectionChannels RPC method
    properties:
      channels:
        description: list of channels associated with a connection.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v1.IdentifiedChannel'
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
    type: object
    title: |-
      QuerySequenceResponse is the response type for the
      Query/QueryNextSequenceReceiveResponse RPC method
    properties:
      next_sequence_receive:
        type: string
        format: uint64
        title: next sequence receive number
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v1.QueryNextSequenceSendResponse:
    type: object
    title: |-
      QueryNextSequenceSendResponse is the request type for the
      Query/QueryNextSequenceSend RPC method
    properties:
      next_sequence_send:
        type: string
        format: uint64
        title: next sequence send number
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
    type: object
    title: |-
      QueryPacketAcknowledgementResponse defines the client query response for a
      packet which also includes a proof and the height from which the
      proof was retrieved
    properties:
      acknowledgement:
        type: string
        format: byte
        title: packet associated with the request fields
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
    type: object
    title: |-
      QueryPacketAcknowledgemetsResponse is the request type for the
      Query/QueryPacketAcknowledgements RPC method
    properties:
      acknowledgements:
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v1.PacketState'
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.channel.v1.QueryPacketCommitmentResponse:
    type: object
    title: |-
      QueryPacketCommitmentResponse defines the client query response for a packet
      which also includes a proof and the height from which the proof was
      retrieved
    properties:
      commitment:
        type: string
        format: byte
        title: packet associated with the request fields
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v1.QueryPacketCommitmentsResponse:
    type: object
    title: |-
      QueryPacketCommitmentsResponse is the request type for the
      Query/QueryPacketCommitments RPC method
    properties:
      commitments:
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v1.PacketState'
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.channel.v1.QueryPacketReceiptResponse:
    type: object
    title: |-
      QueryPacketReceiptResponse defines the client query response for a packet
      receipt which also includes a proof, and the height from which the proof was
      retrieved
    properties:
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
      received:
        type: boolean
        title: success flag for if receipt exists
  ibc.core.channel.v1.QueryUnreceivedAcksResponse:
    type: object
    title: |-
      QueryUnreceivedAcksResponse is the response type for the
      Query/UnreceivedAcks RPC method
    properties:
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      sequences:
        type: array
        title: list of unreceived acknowledgement sequences
        items:
          type: string
          format: uint64
  ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
    type: object
    title: |-
      QueryUnreceivedPacketsResponse is the response type for the
      Query/UnreceivedPacketCommitments RPC method
    properties:
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      sequences:
        type: array
        title: list of unreceived packet sequences
        items:
          type: string
          format: uint64
  ibc.core.channel.v1.ResponseResultType:
    description: |-
      - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
       - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
       - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
       - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully
    type: string
    title: ResponseResultType defines the possible outcomes of the execution of a message
    default: RESPONSE_RESULT_TYPE_UNSPECIFIED
    enum:
      - RESPONSE_RESULT_TYPE_UNSPECIFIED
      - RESPONSE_RESULT_TYPE_NOOP
      - RESPONSE_RESULT_TYPE_SUCCESS
      - RESPONSE_RESULT_TYPE_FAILURE
  ibc.core.channel.v1.State:
    description: |-
      State defines if a channel is in one of the following states:
      CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.

       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
       - STATE_INIT: A channel has just started the opening handshake.
       - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
       - STATE_OPEN: A channel has completed the handshake. Open channels are
      ready to send and receive packets.
       - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
      packets.
    type: string
    default: STATE_UNINITIALIZED_UNSPECIFIED
    enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
      - STATE_CLOSED
  ibc.core.channel.v2.Acknowledgement:
    description: |-
      Acknowledgement contains a list of all ack results associated with a single packet.
      In the case of a successful receive, the acknowledgement will contain an app acknowledgement
      for each application that received a payload in the same order that the payloads were sent
      in the packet.
      If the receive is not successful, the acknowledgement will contain a single app acknowledgment
      which will be a constant error acknowledgment as defined by the IBC v2 protocol.
    type: object
    properties:
      app_acknowledgements:
        type: array
        items:
          type: string
          format: byte
  ibc.core.channel.v2.MsgAcknowledgement:
    description: MsgAcknowledgement receives incoming IBC acknowledgement.
    type: object
    properties:
      acknowledgement:
        $ref: '#/definitions/ibc.core.channel.v2.Acknowledgement'
      packet:
        $ref: '#/definitions/ibc.core.channel.v2.Packet'
      proof_acked:
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      signer:
        type: string
  ibc.core.channel.v2.MsgAcknowledgementResponse:
    description: MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
    type: object
    properties:
      result:
        $ref: '#/definitions/ibc.core.channel.v2.ResponseResultType'
  ibc.core.channel.v2.MsgRecvPacket:
    description: MsgRecvPacket receives an incoming IBC packet.
    type: object
    properties:
      packet:
        $ref: '#/definitions/ibc.core.channel.v2.Packet'
      proof_commitment:
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      signer:
        type: string
  ibc.core.channel.v2.MsgRecvPacketResponse:
    description: MsgRecvPacketResponse defines the Msg/RecvPacket response type.
    type: object
    properties:
      result:
        $ref: '#/definitions/ibc.core.channel.v2.ResponseResultType'
  ibc.core.channel.v2.MsgSendPacket:
    description: MsgSendPacket sends an outgoing IBC packet.
    type: object
    properties:
      payloads:
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v2.Payload'
      signer:
        type: string
      source_client:
        type: string
      timeout_timestamp:
        type: string
        format: uint64
  ibc.core.channel.v2.MsgSendPacketResponse:
    description: MsgSendPacketResponse defines the Msg/SendPacket response type.
    type: object
    properties:
      sequence:
        type: string
        format: uint64
  ibc.core.channel.v2.MsgTimeout:
    type: object
    title: MsgTimeout receives timed-out packet
    properties:
      packet:
        $ref: '#/definitions/ibc.core.channel.v2.Packet'
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_unreceived:
        type: string
        format: byte
      signer:
        type: string
  ibc.core.channel.v2.MsgTimeoutResponse:
    description: MsgTimeoutResponse defines the Msg/Timeout response type.
    type: object
    properties:
      result:
        $ref: '#/definitions/ibc.core.channel.v2.ResponseResultType'
  ibc.core.channel.v2.Packet:
    type: object
    title: Packet defines a type that carries data across different chains through IBC
    properties:
      destination_client:
        description: identifies the receiving client on the receiving chain.
        type: string
      payloads:
        description: a list of payloads, each one for a specific application.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v2.Payload'
      sequence:
        description: |-
          number corresponds to the order of sends and receives, where a Packet
          with an earlier sequence number must be sent and received before a Packet
          with a later sequence number.
        type: string
        format: uint64
      source_client:
        description: identifies the sending client on the sending chain.
        type: string
      timeout_timestamp:
        description: timeout timestamp in seconds after which the packet times out.
        type: string
        format: uint64
  ibc.core.channel.v2.PacketState:
    description: |-
      PacketState defines the generic type necessary to retrieve and store
      packet commitments, acknowledgements, and receipts.
      Caller is responsible for knowing the context necessary to interpret this
      state as a commitment, acknowledgement, or a receipt.
    type: object
    properties:
      client_id:
        description: client unique identifier.
        type: string
      data:
        description: embedded data that represents packet state.
        type: string
        format: byte
      sequence:
        description: packet sequence.
        type: string
        format: uint64
  ibc.core.channel.v2.Payload:
    type: object
    title: Payload contains the source and destination ports and payload for the application (version, encoding, raw bytes)
    properties:
      destination_port:
        description: specifies the destination port of the packet.
        type: string
      encoding:
        description: the encoding used for the provided value.
        type: string
      source_port:
        description: specifies the source port of the packet.
        type: string
      value:
        description: the raw bytes for the payload.
        type: string
        format: byte
      version:
        description: version of the specified application.
        type: string
  ibc.core.channel.v2.QueryNextSequenceSendResponse:
    type: object
    title: QueryNextSequenceSendResponse is the response type for the Query/QueryNextSequenceSend RPC method
    properties:
      next_sequence_send:
        type: string
        format: uint64
        title: next sequence send number
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v2.QueryPacketAcknowledgementResponse:
    description: QueryPacketAcknowledgementResponse is the response type for the Query/PacketAcknowledgement RPC method.
    type: object
    properties:
      acknowledgement:
        type: string
        format: byte
        title: acknowledgement associated with the request fields
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v2.QueryPacketAcknowledgementsResponse:
    type: object
    title: |-
      QueryPacketAcknowledgemetsResponse is the request type for the
      Query/QueryPacketAcknowledgements RPC method
    properties:
      acknowledgements:
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v2.PacketState'
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.channel.v2.QueryPacketCommitmentResponse:
    description: QueryPacketCommitmentResponse is the response type for the Query/PacketCommitment RPC method.
    type: object
    properties:
      commitment:
        type: string
        format: byte
        title: packet associated with the request fields
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.channel.v2.QueryPacketCommitmentsResponse:
    description: QueryPacketCommitmentResponse is the response type for the Query/PacketCommitment RPC method.
    type: object
    properties:
      commitments:
        description: collection of packet commitments for the requested channel identifier.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.channel.v2.PacketState'
      height:
        description: query block height.
        $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        description: pagination response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.channel.v2.QueryPacketReceiptResponse:
    description: QueryPacketReceiptResponse is the response type for the Query/PacketReceipt RPC method.
    type: object
    properties:
      proof:
        type: string
        format: byte
        title: merkle proof of existence or absence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
      received:
        type: boolean
        title: success flag for if receipt exists
  ibc.core.channel.v2.QueryUnreceivedAcksResponse:
    type: object
    title: |-
      QueryUnreceivedAcksResponse is the response type for the
      Query/UnreceivedAcks RPC method
    properties:
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      sequences:
        type: array
        title: list of unreceived acknowledgement sequences
        items:
          type: string
          format: uint64
  ibc.core.channel.v2.QueryUnreceivedPacketsResponse:
    type: object
    title: QueryUnreceivedPacketsResponse is the response type for the Query/UnreceivedPacketCommitments RPC method
    properties:
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      sequences:
        type: array
        title: list of unreceived packet sequences
        items:
          type: string
          format: uint64
  ibc.core.channel.v2.ResponseResultType:
    description: |-
      - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
       - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
       - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
       - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully
    type: string
    title: ResponseResultType defines the possible outcomes of the execution of a message
    default: RESPONSE_RESULT_TYPE_UNSPECIFIED
    enum:
      - RESPONSE_RESULT_TYPE_UNSPECIFIED
      - RESPONSE_RESULT_TYPE_NOOP
      - RESPONSE_RESULT_TYPE_SUCCESS
      - RESPONSE_RESULT_TYPE_FAILURE
  ibc.core.client.v1.ConsensusStateWithHeight:
    description: |-
      ConsensusStateWithHeight defines a consensus state with an additional height
      field.
    type: object
    properties:
      consensus_state:
        title: consensus state
        $ref: '#/definitions/google.protobuf.Any'
      height:
        title: consensus state height
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.client.v1.Height:
    description: |-
      Normally the RevisionHeight is incremented at each height while keeping
      RevisionNumber the same. However some consensus algorithms may choose to
      reset the height in certain conditions e.g. hard forks, state-machine
      breaking changes In these cases, the RevisionNumber is incremented so that
      height continues to be monitonically increasing even as the RevisionHeight
      gets reset

      Please note that json tags for generated Go code are overridden to explicitly exclude the omitempty jsontag.
      This enforces the Go json marshaller to always emit zero values for both revision_number and revision_height.
    type: object
    title: |-
      Height is a monotonically increasing data type
      that can be compared against another Height for the purposes of updating and
      freezing clients
    properties:
      revision_height:
        type: string
        format: uint64
        title: the height within the given revision
      revision_number:
        type: string
        format: uint64
        title: the revision that the client is currently on
  ibc.core.client.v1.IdentifiedClientState:
    description: |-
      IdentifiedClientState defines a client state with an additional client
      identifier field.
    type: object
    properties:
      client_id:
        type: string
        title: client identifier
      client_state:
        title: client state
        $ref: '#/definitions/google.protobuf.Any'
  ibc.core.client.v1.MsgCreateClient:
    type: object
    title: MsgCreateClient defines a message to create an IBC client
    properties:
      client_state:
        title: light client state
        $ref: '#/definitions/google.protobuf.Any'
      consensus_state:
        description: |-
          consensus state associated with the client that corresponds to a given
          height.
        $ref: '#/definitions/google.protobuf.Any'
      signer:
        type: string
        title: signer address
  ibc.core.client.v1.MsgCreateClientResponse:
    description: MsgCreateClientResponse defines the Msg/CreateClient response type.
    type: object
    properties:
      client_id:
        type: string
  ibc.core.client.v1.MsgDeleteClientCreator:
    type: object
    title: MsgDeleteClientCreator defines a message to delete the client creator of a client
    properties:
      client_id:
        type: string
        title: client identifier
      signer:
        type: string
        title: signer address
  ibc.core.client.v1.MsgDeleteClientCreatorResponse:
    description: MsgDeleteClientCreatorResponse defines the Msg/DeleteClientCreator response type.
    type: object
  ibc.core.client.v1.MsgIBCSoftwareUpgrade:
    type: object
    title: MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade of an IBC client using a v1 governance proposal
    properties:
      plan:
        $ref: '#/definitions/cosmos.upgrade.v1beta1.Plan'
      signer:
        type: string
        title: signer address
      upgraded_client_state:
        description: |-
          An UpgradedClientState must be provided to perform an IBC breaking upgrade.
          This will make the chain commit to the correct upgraded (self) client state
          before the upgrade occurs, so that connecting chains can verify that the
          new upgraded client is valid by verifying a proof on the previous version
          of the chain. This will allow IBC connections to persist smoothly across
          planned chain upgrades. Correspondingly, the UpgradedClientState field has been
          deprecated in the Cosmos SDK to allow for this logic to exist solely in
          the 02-client module.
        $ref: '#/definitions/google.protobuf.Any'
  ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse:
    description: MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade response type.
    type: object
  ibc.core.client.v1.MsgRecoverClient:
    description: MsgRecoverClient defines the message used to recover a frozen or expired client.
    type: object
    properties:
      signer:
        type: string
        title: signer address
      subject_client_id:
        type: string
        title: the client identifier for the client to be updated if the proposal passes
      substitute_client_id:
        type: string
        title: |-
          the substitute client identifier for the client which will replace the subject
          client
  ibc.core.client.v1.MsgRecoverClientResponse:
    description: MsgRecoverClientResponse defines the Msg/RecoverClient response type.
    type: object
  ibc.core.client.v1.MsgSubmitMisbehaviour:
    description: |-
      MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
      light client misbehaviour.
      This message has been deprecated. Use MsgUpdateClient instead.
    type: object
    properties:
      client_id:
        type: string
        title: client unique identifier
      misbehaviour:
        title: misbehaviour used for freezing the light client
        $ref: '#/definitions/google.protobuf.Any'
      signer:
        type: string
        title: signer address
  ibc.core.client.v1.MsgSubmitMisbehaviourResponse:
    description: |-
      MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour response
      type.
    type: object
  ibc.core.client.v1.MsgUpdateClient:
    description: |-
      MsgUpdateClient defines an sdk.Msg to update a IBC client state using
      the given client message.
    type: object
    properties:
      client_id:
        type: string
        title: client unique identifier
      client_message:
        title: client message to update the light client
        $ref: '#/definitions/google.protobuf.Any'
      signer:
        type: string
        title: signer address
  ibc.core.client.v1.MsgUpdateClientResponse:
    description: MsgUpdateClientResponse defines the Msg/UpdateClient response type.
    type: object
  ibc.core.client.v1.MsgUpdateParams:
    description: MsgUpdateParams defines the sdk.Msg type to update the client parameters.
    type: object
    properties:
      params:
        description: |-
          params defines the client parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/ibc.core.client.v1.Params'
      signer:
        type: string
        title: signer address
  ibc.core.client.v1.MsgUpdateParamsResponse:
    description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
    type: object
  ibc.core.client.v1.MsgUpgradeClient:
    type: object
    title: |-
      MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client
      state
    properties:
      client_id:
        type: string
        title: client unique identifier
      client_state:
        title: upgraded client state
        $ref: '#/definitions/google.protobuf.Any'
      consensus_state:
        title: |-
          upgraded consensus state, only contains enough information to serve as a
          basis of trust in update logic
        $ref: '#/definitions/google.protobuf.Any'
      proof_upgrade_client:
        type: string
        format: byte
        title: proof that old chain committed to new client
      proof_upgrade_consensus_state:
        type: string
        format: byte
        title: proof that old chain committed to new consensus state
      signer:
        type: string
        title: signer address
  ibc.core.client.v1.MsgUpgradeClientResponse:
    description: MsgUpgradeClientResponse defines the Msg/UpgradeClient response type.
    type: object
  ibc.core.client.v1.Params:
    description: Params defines the set of IBC light client parameters.
    type: object
    properties:
      allowed_clients:
        description: |-
          allowed_clients defines the list of allowed client state types which can be created
          and interacted with. If a client type is removed from the allowed clients list, usage
          of this client will be disabled until it is added again to the list.
        type: array
        items:
          type: string
  ibc.core.client.v1.QueryClientCreatorResponse:
    description: |-
      QueryClientCreatorResponse is the response type for the Query/ClientCreator RPC
      method.
    type: object
    properties:
      creator:
        type: string
        title: creator of the client
  ibc.core.client.v1.QueryClientParamsResponse:
    description: |-
      QueryClientParamsResponse is the response type for the Query/ClientParams RPC
      method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/ibc.core.client.v1.Params'
  ibc.core.client.v1.QueryClientStateResponse:
    description: |-
      QueryClientStateResponse is the response type for the Query/ClientState RPC
      method. Besides the client state, it includes a proof and the height from
      which the proof was retrieved.
    type: object
    properties:
      client_state:
        title: client state associated with the request identifier
        $ref: '#/definitions/google.protobuf.Any'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.client.v1.QueryClientStatesResponse:
    description: |-
      QueryClientStatesResponse is the response type for the Query/ClientStates RPC
      method.
    type: object
    properties:
      client_states:
        description: list of stored ClientStates of the chain.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.client.v1.IdentifiedClientState'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.client.v1.QueryClientStatusResponse:
    description: |-
      QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
      method. It returns the current status of the IBC client.
    type: object
    properties:
      status:
        type: string
  ibc.core.client.v1.QueryConsensusStateHeightsResponse:
    type: object
    title: |-
      QueryConsensusStateHeightsResponse is the response type for the
      Query/ConsensusStateHeights RPC method
    properties:
      consensus_state_heights:
        type: array
        title: consensus state heights
        items:
          type: object
          $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.client.v1.QueryConsensusStateResponse:
    type: object
    title: |-
      QueryConsensusStateResponse is the response type for the Query/ConsensusState
      RPC method
    properties:
      consensus_state:
        title: consensus state associated with the client identifier at the given height
        $ref: '#/definitions/google.protobuf.Any'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.client.v1.QueryConsensusStatesResponse:
    type: object
    title: |-
      QueryConsensusStatesResponse is the response type for the
      Query/ConsensusStates RPC method
    properties:
      consensus_states:
        type: array
        title: consensus states associated with the identifier
        items:
          type: object
          $ref: '#/definitions/ibc.core.client.v1.ConsensusStateWithHeight'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.client.v1.QueryUpgradedClientStateResponse:
    description: |-
      QueryUpgradedClientStateResponse is the response type for the
      Query/UpgradedClientState RPC method.
    type: object
    properties:
      upgraded_client_state:
        title: client state associated with the request identifier
        $ref: '#/definitions/google.protobuf.Any'
  ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
    description: |-
      QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState RPC method.
    type: object
    properties:
      upgraded_consensus_state:
        title: Consensus state associated with the request identifier
        $ref: '#/definitions/google.protobuf.Any'
  ibc.core.client.v1.QueryVerifyMembershipRequest:
    type: object
    title: QueryVerifyMembershipRequest is the request type for the Query/VerifyMembership RPC method
    properties:
      block_delay:
        type: string
        format: uint64
        title: optional block delay
      client_id:
        description: client unique identifier.
        type: string
      merkle_path:
        description: the commitment key path.
        $ref: '#/definitions/ibc.core.commitment.v2.MerklePath'
      proof:
        description: the proof to be verified by the client.
        type: string
        format: byte
      proof_height:
        description: the height of the commitment root at which the proof is verified.
        $ref: '#/definitions/ibc.core.client.v1.Height'
      time_delay:
        type: string
        format: uint64
        title: optional time delay
      value:
        description: the value which is proven.
        type: string
        format: byte
  ibc.core.client.v1.QueryVerifyMembershipResponse:
    type: object
    title: QueryVerifyMembershipResponse is the response type for the Query/VerifyMembership RPC method
    properties:
      success:
        description: boolean indicating success or failure of proof verification.
        type: boolean
  ibc.core.client.v2.Config:
    type: object
    title: |-
      Config is a **per-client** configuration struct that sets which relayers are allowed to relay v2 IBC messages
      for a given client.
      If it is set, then only relayers in the allow list can send v2 messages
      If it is not set, then the client allows permissionless relaying of v2 messages
    properties:
      allowed_relayers:
        type: array
        title: allowed_relayers defines the set of allowed relayers for IBC V2 protocol for the given client
        items:
          type: string
  ibc.core.client.v2.CounterpartyInfo:
    type: object
    title: CounterpartyInfo defines the key that the counterparty will use to message our client
    properties:
      client_id:
        type: string
        title: client identifier is the identifier used to send packet messages to our client
      merkle_prefix:
        type: array
        title: merkle prefix key is the prefix that ics provable keys are stored under
        items:
          type: string
          format: byte
  ibc.core.client.v2.MsgRegisterCounterparty:
    type: object
    title: MsgRegisterCounterparty defines a message to register a counterparty on a client
    properties:
      client_id:
        type: string
        title: client identifier
      counterparty_client_id:
        type: string
        title: counterparty client identifier
      counterparty_merkle_prefix:
        type: array
        title: counterparty merkle prefix
        items:
          type: string
          format: byte
      signer:
        type: string
        title: signer address
  ibc.core.client.v2.MsgRegisterCounterpartyResponse:
    description: MsgRegisterCounterpartyResponse defines the Msg/RegisterCounterparty response type.
    type: object
  ibc.core.client.v2.MsgUpdateClientConfig:
    type: object
    title: MsgUpdateClientConfig defines the sdk.Msg type to update the configuration for a given client
    properties:
      client_id:
        type: string
        title: client identifier
      config:
        description: 'NOTE: All fields in the config must be supplied.'
        title: allowed relayers
        $ref: '#/definitions/ibc.core.client.v2.Config'
      signer:
        type: string
        title: signer address
  ibc.core.client.v2.MsgUpdateClientConfigResponse:
    description: MsgUpdateClientConfigResponse defines the MsgUpdateClientConfig response type.
    type: object
  ibc.core.client.v2.QueryConfigResponse:
    type: object
    title: QueryConfigResponse is the response type for the Query/Config RPC method
    properties:
      config:
        $ref: '#/definitions/ibc.core.client.v2.Config'
  ibc.core.client.v2.QueryCounterpartyInfoResponse:
    description: |-
      QueryCounterpartyInfoResponse is the response type for the
      Query/CounterpartyInfo RPC method.
    type: object
    properties:
      counterparty_info:
        $ref: '#/definitions/ibc.core.client.v2.CounterpartyInfo'
  ibc.core.commitment.v1.MerklePrefix:
    type: object
    title: |-
      MerklePrefix is merkle path prefixed to the key.
      The constructed key from the Path and the key will be append(Path.KeyPath,
      append(Path.KeyPrefix, key...))
    properties:
      key_prefix:
        type: string
        format: byte
  ibc.core.commitment.v2.MerklePath:
    description: |-
      MerklePath is the path used to verify commitment proofs, which can be an
      arbitrary structured object (defined by a commitment type).
      ICS-23 verification supports membership proofs for nested merkle trees.
      The ICS-24 standard provable keys MUST be stored in the lowest level tree with an optional prefix.
      The IC24 provable tree may then be stored in a higher level tree(s) that hash up to the root hash
      stored in the consensus state of the client.
      Each element of the path represents the key of a merkle tree from the root to the leaf.
      The elements of the path before the final element must be the path to the tree that contains
      the ICS24 provable store. Thus, it should remain constant for all ICS24 proofs.
      The final element of the path is the key of the leaf in the ICS24 provable store,
      Thus IBC core will append the ICS24 path to the final element of the MerklePath
      stored in the counterparty to create the full path to the leaf for proof verification.
      Examples:
      Cosmos SDK:
      The Cosmos SDK commits to a multi-tree where each store is an IAVL tree and all store hashes
      are hashed in a simple merkle tree to get the final root hash. Thus, the MerklePath in the counterparty
      MerklePrefix has the following structure: ["ibc", ""]
      The core IBC handler will append the ICS24 path to the final element of the MerklePath
      like so: ["ibc", "{packetCommitmentPath}"] which will then be used for final verification.
      Ethereum:
      The Ethereum client commits to a single Patricia merkle trie. The ICS24 provable store is managed
      by the smart contract state. Each smart contract has a specific prefix reserved within the global trie.
      Thus the MerklePath in the counterparty is the prefix to the smart contract state in the global trie.
      Since there is only one tree in the commitment structure of ethereum the MerklePath in the counterparty
      MerklePrefix has the following structure: ["IBCCoreContractAddressStoragePrefix"]
      The core IBC handler will append the ICS24 path to the final element of the MerklePath
      like so: ["IBCCoreContractAddressStoragePrefix{packetCommitmentPath}"] which will then be used for final
      verification. Thus the MerklePath in the counterparty MerklePrefix is the nested key path from the root hash of the
      consensus state down to the ICS24 provable store. The IBC handler retrieves the counterparty key path to the ICS24
      provable store from the MerklePath and appends the ICS24 path to get the final key path to the value being verified
      by the client against the root hash in the client's consensus state.
    type: object
    properties:
      key_path:
        type: array
        items:
          type: string
          format: byte
  ibc.core.connection.v1.ConnectionEnd:
    description: |-
      ConnectionEnd defines a stateful object on a chain connected to another
      separate one.
      NOTE: there must only be 2 defined ConnectionEnds to establish
      a connection between two chains.
    type: object
    properties:
      client_id:
        description: client associated with this connection.
        type: string
      counterparty:
        description: counterparty chain associated with this connection.
        $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
      delay_period:
        description: |-
          delay period that must pass before a consensus state can be used for
          packet-verification NOTE: delay period logic is only implemented by some
          clients.
        type: string
        format: uint64
      state:
        description: current state of the connection end.
        $ref: '#/definitions/ibc.core.connection.v1.State'
      versions:
        description: |-
          IBC version which can be utilised to determine encodings or protocols for
          channels or packets utilising this connection.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.connection.v1.Version'
  ibc.core.connection.v1.Counterparty:
    description: Counterparty defines the counterparty chain associated with a connection end.
    type: object
    properties:
      client_id:
        description: |-
          identifies the client on the counterparty chain associated with a given
          connection.
        type: string
      connection_id:
        description: |-
          identifies the connection end on the counterparty chain associated with a
          given connection.
        type: string
      prefix:
        description: commitment merkle prefix of the counterparty chain.
        $ref: '#/definitions/ibc.core.commitment.v1.MerklePrefix'
  ibc.core.connection.v1.IdentifiedConnection:
    description: |-
      IdentifiedConnection defines a connection with additional connection
      identifier field.
    type: object
    properties:
      client_id:
        description: client associated with this connection.
        type: string
      counterparty:
        description: counterparty chain associated with this connection.
        $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
      delay_period:
        description: delay period associated with this connection.
        type: string
        format: uint64
      id:
        description: connection identifier.
        type: string
      state:
        description: current state of the connection end.
        $ref: '#/definitions/ibc.core.connection.v1.State'
      versions:
        type: array
        title: |-
          IBC version which can be utilised to determine encodings or protocols for
          channels or packets utilising this connection
        items:
          type: object
          $ref: '#/definitions/ibc.core.connection.v1.Version'
  ibc.core.connection.v1.MsgConnectionOpenAck:
    description: |-
      MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
      acknowledge the change of connection state to TRYOPEN on Chain B.
    type: object
    properties:
      client_state:
        description: 'Deprecated: this field is unused.'
        $ref: '#/definitions/google.protobuf.Any'
      connection_id:
        type: string
      consensus_height:
        description: 'Deprecated: this field is unused.'
        $ref: '#/definitions/ibc.core.client.v1.Height'
      counterparty_connection_id:
        type: string
      host_consensus_state_proof:
        description: 'Deprecated: this field is unused.'
        type: string
        format: byte
      proof_client:
        description: 'Deprecated: this field is unused.'
        type: string
        format: byte
      proof_consensus:
        description: 'Deprecated: this field is unused.'
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_try:
        type: string
        format: byte
        title: |-
          proof of the initialization the connection on Chain B: `UNINITIALIZED ->
          TRYOPEN`
      signer:
        type: string
      version:
        $ref: '#/definitions/ibc.core.connection.v1.Version'
  ibc.core.connection.v1.MsgConnectionOpenAckResponse:
    description: MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response type.
    type: object
  ibc.core.connection.v1.MsgConnectionOpenConfirm:
    description: |-
      MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
      acknowledge the change of connection state to OPEN on Chain A.
    type: object
    properties:
      connection_id:
        type: string
      proof_ack:
        type: string
        format: byte
        title: 'proof for the change of the connection state on Chain A: `INIT -> OPEN`'
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      signer:
        type: string
  ibc.core.connection.v1.MsgConnectionOpenConfirmResponse:
    description: |-
      MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
      response type.
    type: object
  ibc.core.connection.v1.MsgConnectionOpenInit:
    description: |-
      MsgConnectionOpenInit defines the msg sent by an account on Chain A to
      initialize a connection with Chain B.
    type: object
    properties:
      client_id:
        type: string
      counterparty:
        $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
      delay_period:
        type: string
        format: uint64
      signer:
        type: string
      version:
        $ref: '#/definitions/ibc.core.connection.v1.Version'
  ibc.core.connection.v1.MsgConnectionOpenInitResponse:
    description: |-
      MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
      type.
    type: object
  ibc.core.connection.v1.MsgConnectionOpenTry:
    description: |-
      MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
      connection on Chain B.
    type: object
    properties:
      client_id:
        type: string
      client_state:
        description: 'Deprecated: this field is unused.'
        $ref: '#/definitions/google.protobuf.Any'
      consensus_height:
        description: 'Deprecated: this field is unused.'
        $ref: '#/definitions/ibc.core.client.v1.Height'
      counterparty:
        $ref: '#/definitions/ibc.core.connection.v1.Counterparty'
      counterparty_versions:
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.connection.v1.Version'
      delay_period:
        type: string
        format: uint64
      host_consensus_state_proof:
        description: 'Deprecated: this field is unused.'
        type: string
        format: byte
      previous_connection_id:
        description: 'Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC.'
        type: string
      proof_client:
        description: 'Deprecated: this field is unused.'
        type: string
        format: byte
      proof_consensus:
        description: 'Deprecated: this field is unused.'
        type: string
        format: byte
      proof_height:
        $ref: '#/definitions/ibc.core.client.v1.Height'
      proof_init:
        type: string
        format: byte
        title: |-
          proof of the initialization the connection on Chain A: `UNINITIALIZED ->
          INIT`
      signer:
        type: string
  ibc.core.connection.v1.MsgConnectionOpenTryResponse:
    description: MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response type.
    type: object
  ibc.core.connection.v1.MsgUpdateParams:
    description: MsgUpdateParams defines the sdk.Msg type to update the connection parameters.
    type: object
    properties:
      params:
        description: |-
          params defines the connection parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/ibc.core.connection.v1.Params'
      signer:
        type: string
        title: signer address
  ibc.core.connection.v1.MsgUpdateParamsResponse:
    description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
    type: object
  ibc.core.connection.v1.Params:
    description: Params defines the set of Connection parameters.
    type: object
    properties:
      max_expected_time_per_block:
        description: |-
          maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
          largest amount of time that the chain might reasonably take to produce the next block under normal operating
          conditions. A safe choice is 3-5x the expected time per block.
        type: string
        format: uint64
  ibc.core.connection.v1.QueryClientConnectionsResponse:
    type: object
    title: |-
      QueryClientConnectionsResponse is the response type for the
      Query/ClientConnections RPC method
    properties:
      connection_paths:
        description: slice of all the connection paths associated with a client.
        type: array
        items:
          type: string
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was generated
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.connection.v1.QueryConnectionClientStateResponse:
    type: object
    title: |-
      QueryConnectionClientStateResponse is the response type for the
      Query/ConnectionClientState RPC method
    properties:
      identified_client_state:
        title: client state associated with the channel
        $ref: '#/definitions/ibc.core.client.v1.IdentifiedClientState'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.connection.v1.QueryConnectionConsensusStateResponse:
    type: object
    title: |-
      QueryConnectionConsensusStateResponse is the response type for the
      Query/ConnectionConsensusState RPC method
    properties:
      client_id:
        type: string
        title: client ID associated with the consensus state
      consensus_state:
        title: consensus state associated with the channel
        $ref: '#/definitions/google.protobuf.Any'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.connection.v1.QueryConnectionParamsResponse:
    description: QueryConnectionParamsResponse is the response type for the Query/ConnectionParams RPC method.
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        $ref: '#/definitions/ibc.core.connection.v1.Params'
  ibc.core.connection.v1.QueryConnectionResponse:
    description: |-
      QueryConnectionResponse is the response type for the Query/Connection RPC
      method. Besides the connection end, it includes a proof and the height from
      which the proof was retrieved.
    type: object
    properties:
      connection:
        title: connection associated with the request identifier
        $ref: '#/definitions/ibc.core.connection.v1.ConnectionEnd'
      proof:
        type: string
        format: byte
        title: merkle proof of existence
      proof_height:
        title: height at which the proof was retrieved
        $ref: '#/definitions/ibc.core.client.v1.Height'
  ibc.core.connection.v1.QueryConnectionsResponse:
    description: |-
      QueryConnectionsResponse is the response type for the Query/Connections RPC
      method.
    type: object
    properties:
      connections:
        description: list of stored connections of the chain.
        type: array
        items:
          type: object
          $ref: '#/definitions/ibc.core.connection.v1.IdentifiedConnection'
      height:
        title: query block height
        $ref: '#/definitions/ibc.core.client.v1.Height'
      pagination:
        title: pagination response
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.core.connection.v1.State:
    description: |-
      State defines if a connection is in one of the following states:
      INIT, TRYOPEN, OPEN or UNINITIALIZED.

       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
       - STATE_INIT: A connection end has just started the opening handshake.
       - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty
      chain.
       - STATE_OPEN: A connection end has completed the handshake.
    type: string
    default: STATE_UNINITIALIZED_UNSPECIFIED
    enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
  ibc.core.connection.v1.Version:
    description: |-
      Version defines the versioning scheme used to negotiate the IBC version in
      the connection handshake.
    type: object
    properties:
      features:
        type: array
        title: list of features compatible with the specified identifier
        items:
          type: string
      identifier:
        type: string
        title: unique version identifier
  ibc.lightclients.wasm.v1.MsgMigrateContract:
    description: MsgMigrateContract defines the request type for the MigrateContract rpc.
    type: object
    properties:
      checksum:
        type: string
        format: byte
        title: checksum is the sha256 hash of the new wasm byte code for the contract
      client_id:
        type: string
        title: the client id of the contract
      msg:
        type: string
        format: byte
        title: the json encoded message to be passed to the contract on migration
      signer:
        type: string
        title: signer address
  ibc.lightclients.wasm.v1.MsgMigrateContractResponse:
    type: object
    title: MsgMigrateContractResponse defines the response type for the MigrateContract rpc
  ibc.lightclients.wasm.v1.MsgRemoveChecksum:
    description: MsgRemoveChecksum defines the request type for the MsgRemoveChecksum rpc.
    type: object
    properties:
      checksum:
        type: string
        format: byte
        title: checksum is the sha256 hash to be removed from the store
      signer:
        type: string
        title: signer address
  ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse:
    type: object
    title: MsgStoreChecksumResponse defines the response type for the StoreCode rpc
  ibc.lightclients.wasm.v1.MsgStoreCode:
    description: MsgStoreCode defines the request type for the StoreCode rpc.
    type: object
    properties:
      signer:
        type: string
        title: signer address
      wasm_byte_code:
        type: string
        format: byte
        title: wasm byte code of light client contract. It can be raw or gzip compressed
  ibc.lightclients.wasm.v1.MsgStoreCodeResponse:
    type: object
    title: MsgStoreCodeResponse defines the response type for the StoreCode rpc
    properties:
      checksum:
        type: string
        format: byte
        title: checksum is the sha256 hash of the stored code
  ibc.lightclients.wasm.v1.QueryChecksumsResponse:
    description: QueryChecksumsResponse is the response type for the Query/Checksums RPC method.
    type: object
    properties:
      checksums:
        description: checksums is a list of the hex encoded checksums of all wasm codes stored.
        type: array
        items:
          type: string
      pagination:
        description: pagination defines the pagination in the response.
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  ibc.lightclients.wasm.v1.QueryCodeResponse:
    description: QueryCodeResponse is the response type for the Query/Code RPC method.
    type: object
    properties:
      data:
        type: string
        format: byte
  sunrise.da.v0.Invalidity:
    type: object
    title: Invalidity
    properties:
      indices:
        type: array
        items:
          type: string
          format: int64
      metadata_uri:
        type: string
      sender:
        type: string
  sunrise.da.v0.MsgPublishData:
    type: object
    title: MsgPublishData
    properties:
      data_source_info:
        type: string
      metadata_uri:
        type: string
      parity_shard_count:
        type: string
        format: uint64
      sender:
        type: string
      shard_double_hashes:
        type: array
        items:
          type: string
          format: byte
  sunrise.da.v0.MsgPublishDataResponse:
    type: object
    title: MsgPublishDataResponse
  sunrise.da.v0.MsgRegisterProofDeputy:
    type: object
    title: MsgRegisterProofDeputy
    properties:
      deputy_address:
        type: string
      sender:
        type: string
  sunrise.da.v0.MsgRegisterProofDeputyResponse:
    type: object
    title: MsgRegisterProofDeputyResponse
  sunrise.da.v0.MsgSubmitInvalidity:
    type: object
    title: MsgSubmitInvalidity
    properties:
      indices:
        type: array
        items:
          type: string
          format: int64
      metadata_uri:
        type: string
      sender:
        type: string
  sunrise.da.v0.MsgSubmitInvalidityResponse:
    type: object
    title: MsgSubmitInvalidityResponse
  sunrise.da.v0.MsgSubmitValidityProof:
    type: object
    title: MsgSubmitValidityProof
    properties:
      indices:
        type: array
        items:
          type: string
          format: int64
      metadata_uri:
        type: string
      proofs:
        type: array
        items:
          type: string
          format: byte
      sender:
        type: string
      validator_address:
        type: string
  sunrise.da.v0.MsgSubmitValidityProofResponse:
    type: object
    title: MsgSubmitValidityProofResponse
  sunrise.da.v0.MsgUnregisterProofDeputy:
    type: object
    title: MsgUnregisterProofDeputy
    properties:
      sender:
        type: string
  sunrise.da.v0.MsgUnregisterProofDeputyResponse:
    type: object
    title: MsgUnregisterProofDeputyResponse
  sunrise.da.v0.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: |-
          authority is the address that controls the module (defaults to x/gov unless
          overwritten).
        type: string
      params:
        description: 'NOTE: All parameters must be supplied.'
        $ref: '#/definitions/sunrise.da.v0.Params'
  sunrise.da.v0.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.da.v0.Params:
    description: Params defines the parameters for the module.
    type: object
    properties:
      challenge_period:
        type: string
      challenge_threshold:
        description: Invalid shard threshold required to go to STATUS_CHALLENGING.
        type: string
      max_shard_count:
        type: string
        format: uint64
        title: max_shard_count used in sunrise-data
      max_shard_size:
        type: string
        format: uint64
        title: max_shard_size used in sunrise-data
      min_shard_count:
        type: string
        format: uint64
        title: min_shard_count used in sunrise-data
      proof_period:
        type: string
      publish_data_collateral:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      publish_data_gas:
        type: string
        format: uint64
      rejected_removal_period:
        type: string
      replication_factor:
        type: string
        title: https://docs.sunriselayer.io/learn/sunrise/data-availability#the-condition-of-data-availability
      slash_epoch:
        type: string
        format: uint64
        title: How many blocks of slash are done every
      slash_fault_threshold:
        type: string
        title: |-
          (number of challenges a validator did not submit proof / number of all challenge) is over this threshold in an epoch
          that validator will be slashed
      slash_fraction:
        type: string
        title: voting power deducted during slash
      submit_invalidity_collateral:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      verified_removal_period:
        type: string
      zkp_proving_key:
        type: string
        format: byte
        title: proving key used in sunrise-data
      zkp_verifying_key:
        type: string
        format: byte
  sunrise.da.v0.Proof:
    type: object
    title: Proof
    properties:
      indices:
        type: array
        items:
          type: string
          format: int64
      metadata_uri:
        type: string
      proofs:
        type: array
        items:
          type: string
          format: byte
      sender:
        type: string
  sunrise.da.v0.PublishedData:
    type: object
    title: PublishedData
    properties:
      challenger:
        type: string
      data_source_info:
        type: string
      metadata_uri:
        type: string
      parity_shard_count:
        type: string
        format: uint64
      publish_data_collateral:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      published_timestamp:
        type: string
        format: date-time
      publisher:
        type: string
      shard_double_hashes:
        type: array
        items:
          type: string
          format: byte
      status:
        $ref: '#/definitions/sunrise.da.v0.Status'
      submit_invalidity_collateral:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      timestamp:
        type: string
        format: date-time
      verified_height:
        type: string
        format: int64
  sunrise.da.v0.QueryAllInvalidityResponse:
    description: |-
      QueryAllInvalidityResponse is response type for the Query/AllInvalidity RPC
      method.
    type: object
    properties:
      invalidity:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.da.v0.Invalidity'
  sunrise.da.v0.QueryAllPublishedDataResponse:
    description: |-
      QueryAllPublishedDataResponse is response type for the
      Query/AllPublishedData RPC method.
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.da.v0.PublishedData'
  sunrise.da.v0.QueryAllValidityProofsResponse:
    description: |-
      QueryAllValidityProofsResponse is response type for the Query/AllValidityProofs RPC
      method.
    type: object
    properties:
      proofs:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.da.v0.Proof'
  sunrise.da.v0.QueryInvalidityResponse:
    description: |-
      QueryInvalidityResponse is response type for the Query/Invalidity RPC
      method.
    type: object
    properties:
      invalidity:
        $ref: '#/definitions/sunrise.da.v0.Invalidity'
  sunrise.da.v0.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.da.v0.Params'
  sunrise.da.v0.QueryProofDeputyResponse:
    description: |-
      QueryProofDeputyResponse is response type for the
      Query/ProofDeputy RPC method.
    type: object
    properties:
      deputy_address:
        type: string
  sunrise.da.v0.QueryPublishedDataResponse:
    description: |-
      QueryPublishedDataResponse is response type for the Query/PublishedData RPC
      method.
    type: object
    properties:
      data:
        $ref: '#/definitions/sunrise.da.v0.PublishedData'
  sunrise.da.v0.QueryValidatorShardIndicesResponse:
    description: |-
      QueryValidatorShardIndicesResponse is response type for the
      Query/ValidatorShardIndices RPC method.
    type: object
    properties:
      shard_indices:
        type: array
        items:
          type: string
          format: uint64
  sunrise.da.v0.QueryValidityProofResponse:
    description: |-
      QueryValidityProofResponse is response type for the Query/ValidityProof RPC
      method.
    type: object
    properties:
      proof:
        $ref: '#/definitions/sunrise.da.v0.Proof'
  sunrise.da.v0.QueryZkpProofThresholdResponse:
    description: |-
      QueryZkpProofThresholdResponse is response type for the
      Query/ZkpProofThreshold RPC method.
    type: object
    properties:
      threshold:
        type: string
        format: uint64
  sunrise.da.v0.Status:
    description: |-
      - STATUS_UNSPECIFIED: Default value
       - STATUS_VERIFIED: Verified
       - STATUS_REJECTED: Rejected
       - STATUS_CHALLENGE_PERIOD: Verified the votes from the validators. Challenge can be received (after preBlocker)
       - STATUS_CHALLENGING: A certain number of SubmitInvalidity received. Validators can send SubmitValidityProof tx.
    type: string
    title: PublishedDataStatus
    default: STATUS_UNSPECIFIED
    enum:
      - STATUS_UNSPECIFIED
      - STATUS_VERIFIED
      - STATUS_REJECTED
      - STATUS_CHALLENGE_PERIOD
      - STATUS_CHALLENGING
  sunrise.fee.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: |-
          params defines the module parameters to update.

          NOTE: All parameters must be supplied.
        $ref: '#/definitions/sunrise.fee.v1.Params'
  sunrise.fee.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.fee.v1.Params:
    description: Params defines the parameters for the module.
    type: object
    properties:
      burn_ratio:
        type: string
      fee_denom:
        type: string
  sunrise.fee.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.fee.v1.Params'
  sunrise.liquidityincentive.v1.Bribe:
    type: object
    title: Bribe
    properties:
      address:
        type: string
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      claimed_amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      epoch_id:
        type: string
        format: uint64
      id:
        type: string
        format: uint64
      pool_id:
        type: string
        format: uint64
  sunrise.liquidityincentive.v1.BribeAllocation:
    type: object
    title: BribeAllocation
    properties:
      address:
        type: string
      claimed_bribe_ids:
        type: array
        items:
          type: string
          format: uint64
      epoch_id:
        type: string
        format: uint64
      pool_id:
        type: string
        format: uint64
      weight:
        type: string
  sunrise.liquidityincentive.v1.Epoch:
    type: object
    title: Epoch
    properties:
      end_block:
        type: string
        format: int64
      gauges:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.Gauge'
      id:
        type: string
        format: uint64
      start_block:
        type: string
        format: int64
      start_time:
        type: string
        format: int64
  sunrise.liquidityincentive.v1.Gauge:
    type: object
    title: Gauge
    properties:
      pool_id:
        type: string
        format: uint64
      voting_power:
        type: string
  sunrise.liquidityincentive.v1.MsgClaimBribes:
    type: object
    title: MsgClaimBribes
    properties:
      bribe_ids:
        type: array
        items:
          type: string
          format: uint64
      sender:
        type: string
  sunrise.liquidityincentive.v1.MsgClaimBribesResponse:
    type: object
    title: MsgClaimBribesResponse
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.liquidityincentive.v1.MsgRegisterBribe:
    type: object
    title: MsgRegisterBribe
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      epoch_id:
        type: string
        format: uint64
      pool_id:
        type: string
        format: uint64
      sender:
        type: string
  sunrise.liquidityincentive.v1.MsgRegisterBribeResponse:
    type: object
    title: MsgRegisterBribeResponse
  sunrise.liquidityincentive.v1.MsgStartNewEpoch:
    type: object
    title: MsgStartNewEpoch
    properties:
      sender:
        type: string
  sunrise.liquidityincentive.v1.MsgStartNewEpochResponse:
    type: object
    title: MsgStartNewEpochResponse
  sunrise.liquidityincentive.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: |-
          authority is the address that controls the module (defaults to x/gov unless
          overwritten).
        type: string
      params:
        description: 'NOTE: All parameters must be supplied.'
        $ref: '#/definitions/sunrise.liquidityincentive.v1.Params'
  sunrise.liquidityincentive.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.liquidityincentive.v1.MsgVoteGauge:
    type: object
    title: MsgVoteGauge
    properties:
      pool_weights:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.PoolWeight'
      sender:
        type: string
  sunrise.liquidityincentive.v1.MsgVoteGaugeResponse:
    type: object
    title: MsgVoteGaugeResponse
  sunrise.liquidityincentive.v1.Params:
    description: Params defines the parameters for the module.
    type: object
    properties:
      bribe_claim_epochs:
        type: string
        format: uint64
      epoch_blocks:
        type: string
        format: int64
      staking_reward_ratio:
        type: string
  sunrise.liquidityincentive.v1.PoolWeight:
    type: object
    title: PoolWeight
    properties:
      pool_id:
        type: string
        format: uint64
      weight:
        type: string
  sunrise.liquidityincentive.v1.QueryBribeAllocationResponse:
    type: object
    title: QueryBribeAllocationResponse
    properties:
      bribe_allocation:
        $ref: '#/definitions/sunrise.liquidityincentive.v1.BribeAllocation'
  sunrise.liquidityincentive.v1.QueryBribeAllocationsResponse:
    type: object
    title: QueryBribeAllocationsResponse
    properties:
      bribe_allocations:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.BribeAllocation'
  sunrise.liquidityincentive.v1.QueryBribeResponse:
    type: object
    title: QueryBribeResponse
    properties:
      bribe:
        $ref: '#/definitions/sunrise.liquidityincentive.v1.Bribe'
  sunrise.liquidityincentive.v1.QueryBribesResponse:
    type: object
    title: QueryBribesResponse
    properties:
      bribes:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.Bribe'
  sunrise.liquidityincentive.v1.QueryEpochResponse:
    type: object
    title: QueryEpochResponse
    properties:
      epoch:
        $ref: '#/definitions/sunrise.liquidityincentive.v1.Epoch'
  sunrise.liquidityincentive.v1.QueryEpochsResponse:
    type: object
    title: QueryEpochsResponse
    properties:
      epochs:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.Epoch'
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  sunrise.liquidityincentive.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.liquidityincentive.v1.Params'
  sunrise.liquidityincentive.v1.QueryTallyResultResponse:
    type: object
    title: QueryTallyResultResponse
    properties:
      gauges:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.Gauge'
      total_voting_power:
        type: string
        format: int64
  sunrise.liquidityincentive.v1.QueryVoteResponse:
    type: object
    title: QueryVoteResponse
    properties:
      vote:
        $ref: '#/definitions/sunrise.liquidityincentive.v1.Vote'
  sunrise.liquidityincentive.v1.QueryVotesResponse:
    type: object
    title: QueryVotesResponse
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      votes:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.Vote'
  sunrise.liquidityincentive.v1.Vote:
    type: object
    title: Vote
    properties:
      pool_weights:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquidityincentive.v1.PoolWeight'
      sender:
        type: string
  sunrise.liquiditypool.v1.MsgClaimRewards:
    type: object
    title: MsgClaimRewards
    properties:
      position_ids:
        type: array
        items:
          type: string
          format: uint64
      sender:
        type: string
  sunrise.liquiditypool.v1.MsgClaimRewardsResponse:
    type: object
    title: MsgClaimRewardsResponse
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.liquiditypool.v1.MsgCreatePool:
    type: object
    title: MsgCreatePool
    properties:
      base_offset:
        type: string
        title: basically 0 and (-1, 0]. In the 1:1 stable pair, 0.5 would work
      denom_base:
        type: string
      denom_quote:
        type: string
      fee_rate:
        type: string
      price_ratio:
        type: string
        title: Basically 1.0001
      sender:
        type: string
  sunrise.liquiditypool.v1.MsgCreatePoolResponse:
    type: object
    title: MsgCreatePoolResponse
    properties:
      id:
        type: string
        format: uint64
  sunrise.liquiditypool.v1.MsgCreatePosition:
    type: object
    title: MsgCreatePosition
    properties:
      lower_tick:
        type: string
        format: int64
      min_amount_base:
        type: string
      min_amount_quote:
        type: string
      pool_id:
        type: string
        format: uint64
      sender:
        type: string
      token_base:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      token_quote:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      upper_tick:
        type: string
        format: int64
  sunrise.liquiditypool.v1.MsgCreatePositionResponse:
    type: object
    title: MsgCreatePositionResponse
    properties:
      amount_base:
        type: string
      amount_quote:
        type: string
      id:
        type: string
        format: uint64
      liquidity:
        type: string
  sunrise.liquiditypool.v1.MsgDecreaseLiquidity:
    type: object
    title: MsgDecreaseLiquidity
    properties:
      id:
        type: string
        format: uint64
      liquidity:
        type: string
      sender:
        type: string
  sunrise.liquiditypool.v1.MsgDecreaseLiquidityResponse:
    type: object
    title: MsgDecreaseLiquidityResponse
    properties:
      amount_base:
        type: string
      amount_quote:
        type: string
  sunrise.liquiditypool.v1.MsgIncreaseLiquidity:
    type: object
    title: MsgIncreaseLiquidity
    properties:
      amount_base:
        type: string
      amount_quote:
        type: string
      id:
        type: string
        format: uint64
      min_amount_base:
        type: string
      min_amount_quote:
        type: string
      sender:
        type: string
  sunrise.liquiditypool.v1.MsgIncreaseLiquidityResponse:
    type: object
    title: MsgIncreaseLiquidityResponse
    properties:
      amount_base:
        type: string
      amount_quote:
        type: string
      position_id:
        type: string
        format: uint64
  sunrise.liquiditypool.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: |-
          authority is the address that controls the module (defaults to x/gov unless
          overwritten).
        type: string
      params:
        description: 'NOTE: All parameters must be supplied.'
        $ref: '#/definitions/sunrise.liquiditypool.v1.Params'
  sunrise.liquiditypool.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.liquiditypool.v1.Params:
    description: Params defines the parameters for the module.
    type: object
    properties:
      create_pool_gas:
        type: string
        format: uint64
      withdraw_fee_rate:
        type: string
        title: For reservation, not used yet
  sunrise.liquiditypool.v1.Pool:
    type: object
    title: Pool
    properties:
      current_sqrt_price:
        type: string
      current_tick:
        type: string
        format: int64
      current_tick_liquidity:
        type: string
      denom_base:
        type: string
      denom_quote:
        type: string
      fee_rate:
        type: string
      id:
        type: string
        format: uint64
      tick_params:
        $ref: '#/definitions/sunrise.liquiditypool.v1.TickParams'
  sunrise.liquiditypool.v1.PoolInfo:
    type: object
    title: PoolInfo
    properties:
      pool:
        $ref: '#/definitions/sunrise.liquiditypool.v1.Pool'
      token_base:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      token_quote:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.liquiditypool.v1.Position:
    type: object
    title: Position
    properties:
      address:
        type: string
      id:
        type: string
        format: uint64
      liquidity:
        type: string
      lower_tick:
        type: string
        format: int64
      pool_id:
        type: string
        format: uint64
      upper_tick:
        type: string
        format: int64
  sunrise.liquiditypool.v1.PositionInfo:
    type: object
    title: PositionInfo
    properties:
      position:
        $ref: '#/definitions/sunrise.liquiditypool.v1.Position'
      token_base:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      token_quote:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.liquiditypool.v1.QueryAddressPositionsResponse:
    type: object
    title: QueryAddressPositionsResponse
    properties:
      positions:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquiditypool.v1.PositionInfo'
  sunrise.liquiditypool.v1.QueryCalculationCreatePositionResponse:
    type: object
    title: QueryCalculationCreatePositionResponse
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.liquiditypool.v1.QueryCalculationIncreaseLiquidityResponse:
    type: object
    title: QueryCalculationIncreaseLiquidityResponse
    properties:
      token_required:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.liquiditypool.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.liquiditypool.v1.Params'
  sunrise.liquiditypool.v1.QueryPoolPositionsResponse:
    type: object
    title: QueryPoolPositionsResponse
    properties:
      positions:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquiditypool.v1.PositionInfo'
  sunrise.liquiditypool.v1.QueryPoolResponse:
    type: object
    title: QueryPoolResponse
    properties:
      pool:
        $ref: '#/definitions/sunrise.liquiditypool.v1.PoolInfo'
  sunrise.liquiditypool.v1.QueryPoolsResponse:
    type: object
    title: QueryPoolsResponse
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      pools:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquiditypool.v1.PoolInfo'
  sunrise.liquiditypool.v1.QueryPositionFeesResponse:
    type: object
    title: QueryPositionFeesResponse
    properties:
      fees:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.liquiditypool.v1.QueryPositionResponse:
    type: object
    title: QueryPositionResponse
    properties:
      position:
        $ref: '#/definitions/sunrise.liquiditypool.v1.PositionInfo'
  sunrise.liquiditypool.v1.QueryPositionsResponse:
    type: object
    title: QueryPositionsResponse
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
      positions:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.liquiditypool.v1.PositionInfo'
  sunrise.liquiditypool.v1.TickParams:
    type: object
    title: |-
      TickParams
      PriceRatio^(Tick + BaseOffSet)
    properties:
      base_offset:
        type: string
        title: basically 0 and (-1, 0]. In the 1:1 stable pair, -0.5 would work
      price_ratio:
        type: string
        title: Basically 1.0001
  sunrise.lockup.v1.LockupAccount:
    description: LockupAccount defines the lockup account.
    type: object
    properties:
      additional_locking:
        type: string
      address:
        type: string
      delegated_free:
        type: string
      delegated_locking:
        type: string
      end_time:
        type: string
        format: int64
      id:
        type: string
        format: uint64
      original_locking:
        type: string
      owner:
        type: string
      start_time:
        type: string
        format: int64
      unbond_entries:
        $ref: '#/definitions/sunrise.lockup.v1.UnbondingEntries'
  sunrise.lockup.v1.MsgClaimRewards:
    type: object
    title: MsgClaimRewards
    properties:
      lockup_account_id:
        type: string
        format: uint64
      owner:
        type: string
      validator_address:
        type: string
  sunrise.lockup.v1.MsgClaimRewardsResponse:
    type: object
    title: MsgClaimRewardsResponse
  sunrise.lockup.v1.MsgInitLockupAccount:
    type: object
    title: MsgInitLockupAccount
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      end_time:
        description: end of lockup as unix time (in seconds).
        type: string
        format: int64
      owner:
        type: string
      sender:
        type: string
      start_time:
        description: start of lockup as unix time (in seconds).
        type: string
        format: int64
  sunrise.lockup.v1.MsgInitLockupAccountResponse:
    type: object
    title: MsgInitLockupAccountResponse
  sunrise.lockup.v1.MsgNonVotingDelegate:
    type: object
    title: MsgNonVotingDelegate
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      lockup_account_id:
        type: string
        format: uint64
      owner:
        type: string
      validator_address:
        type: string
  sunrise.lockup.v1.MsgNonVotingDelegateResponse:
    type: object
    title: MsgNonVotingDelegateResponse
  sunrise.lockup.v1.MsgNonVotingUndelegate:
    type: object
    title: MsgNonVotingUndelegate
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      lockup_account_id:
        type: string
        format: uint64
      owner:
        type: string
      validator_address:
        type: string
  sunrise.lockup.v1.MsgNonVotingUndelegateResponse:
    type: object
    title: MsgNonVotingUndelegateResponse
  sunrise.lockup.v1.MsgSend:
    type: object
    title: MsgSend
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      lockup_account_id:
        type: string
        format: uint64
      owner:
        type: string
      recipient:
        type: string
  sunrise.lockup.v1.MsgSendResponse:
    type: object
    title: MsgSendResponse
  sunrise.lockup.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: 'NOTE: All parameters must be supplied.'
        $ref: '#/definitions/sunrise.lockup.v1.Params'
  sunrise.lockup.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.lockup.v1.Params:
    description: Params defines the parameters for the module.
    type: object
    properties:
      min_lockup_duration:
        type: string
  sunrise.lockup.v1.QueryLockupAccountResponse:
    description: QueryLockupAccountResponse is response type for the Query/LockupAccount RPC method.
    type: object
    properties:
      locked_amount:
        type: string
      lockup_account:
        $ref: '#/definitions/sunrise.lockup.v1.LockupAccount'
      unlocked_amount:
        type: string
  sunrise.lockup.v1.QueryLockupAccountsResponse:
    description: QueryLockupAccountsResponse is response type for the Query/LockupAccounts RPC method.
    type: object
    properties:
      lockup_accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.lockup.v1.LockupAccount'
  sunrise.lockup.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.lockup.v1.Params'
  sunrise.lockup.v1.QuerySpendableAmountResponse:
    description: QuerySpendableAmountResponse is response type for the Query/SpendableAmount RPC method.
    type: object
    properties:
      spendable_amount:
        type: string
  sunrise.lockup.v1.UnbondingEntries:
    type: object
    title: UnbondingEntries list of elements
    properties:
      entries:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.lockup.v1.UnbondingEntry'
  sunrise.lockup.v1.UnbondingEntry:
    description: UnbondingEntry defines an entry tracking the lockup account unbonding operation.
    type: object
    properties:
      amount:
        type: string
        title: unbond amount
      creation_height:
        type: string
        format: int64
      end_time:
        type: string
        format: int64
        title: end time of entry
      validator_address:
        type: string
        title: validator address
  sunrise.shareclass.v1.MsgClaimRewards:
    type: object
    title: MsgClaimRewards
    properties:
      sender:
        type: string
      validator_address:
        type: string
  sunrise.shareclass.v1.MsgClaimRewardsResponse:
    type: object
    title: MsgClaimRewardsResponse
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.shareclass.v1.MsgCreateValidator:
    type: object
    title: MsgCreateValidator
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      commission:
        $ref: '#/definitions/cosmos.staking.v1beta1.CommissionRates'
      description:
        $ref: '#/definitions/cosmos.staking.v1beta1.Description'
      min_self_delegation:
        type: string
      pubkey:
        $ref: '#/definitions/google.protobuf.Any'
      validator_address:
        type: string
  sunrise.shareclass.v1.MsgCreateValidatorResponse:
    type: object
    title: MsgCreateValidatorResponse
  sunrise.shareclass.v1.MsgNonVotingDelegate:
    type: object
    title: MsgNonVotingDelegate
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      sender:
        type: string
      validator_address:
        type: string
  sunrise.shareclass.v1.MsgNonVotingDelegateResponse:
    type: object
    title: MsgNonVotingDelegateResponse
    properties:
      rewards:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      share:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.shareclass.v1.MsgNonVotingUndelegate:
    type: object
    title: MsgNonVotingUndelegate
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      recipient:
        type: string
      sender:
        type: string
      validator_address:
        type: string
  sunrise.shareclass.v1.MsgNonVotingUndelegateResponse:
    type: object
    title: MsgNonVotingUndelegateResponse
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      completion_time:
        type: string
        format: date-time
      rewards:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.shareclass.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: 'NOTE: All parameters must be supplied.'
        $ref: '#/definitions/sunrise.shareclass.v1.Params'
  sunrise.shareclass.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.shareclass.v1.Params:
    description: Params defines the parameters for the module.
    type: object
    properties:
      create_validator_gas:
        type: string
        format: uint64
      reward_period:
        type: string
  sunrise.shareclass.v1.QueryAddressBondedResponse:
    type: object
    title: QueryAddressBondedResponse
    properties:
      bonds:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.shareclass.v1.ValidatorBond'
  sunrise.shareclass.v1.QueryAddressUnbondingResponse:
    type: object
    title: QueryAddressUnbondingResponse
    properties:
      unbondings:
        type: array
        title: cosmos.base.query.v1beta1.PageResponse pagination = 2;
        items:
          type: object
          $ref: '#/definitions/sunrise.shareclass.v1.Unbonding'
  sunrise.shareclass.v1.QueryCalculateBondingAmountResponse:
    type: object
    title: QueryCalculateBondingAmountResponse
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.shareclass.v1.QueryCalculateShareResponse:
    type: object
    title: QueryCalculateShareResponse
    properties:
      share:
        type: string
  sunrise.shareclass.v1.QueryClaimableRewardsResponse:
    type: object
    title: QueryClaimableRewardsResponse
    properties:
      amount:
        type: array
        items:
          type: object
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.shareclass.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.shareclass.v1.Params'
  sunrise.shareclass.v1.Unbonding:
    type: object
    title: Unbonding
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      completion_time:
        type: string
        format: date-time
      delegator_address:
        type: string
      id:
        type: string
        format: uint64
      recipient_address:
        type: string
      validator_address:
        type: string
  sunrise.shareclass.v1.ValidatorBond:
    type: object
    title: ValidatorBond
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      validator_address:
        type: string
  sunrise.swap.v1.IncomingInFlightPacket:
    type: object
    title: IncomingInFlightPacket
    properties:
      ack:
        type: string
        format: byte
      ack_change:
        type: string
        format: byte
      ack_forward:
        type: string
        format: byte
      data:
        type: string
        format: byte
      index:
        $ref: '#/definitions/sunrise.swap.v1.PacketIndex'
      interface_fee:
        type: string
      outgoing_index_change:
        $ref: '#/definitions/sunrise.swap.v1.PacketIndex'
      outgoing_index_forward:
        $ref: '#/definitions/sunrise.swap.v1.PacketIndex'
      result:
        $ref: '#/definitions/sunrise.swap.v1.RouteResult'
      src_channel_id:
        type: string
      src_port_id:
        type: string
      timeout_height:
        type: string
      timeout_timestamp:
        type: string
        format: uint64
  sunrise.swap.v1.MsgSwapExactAmountIn:
    type: object
    title: MsgSwapExactAmountIn
    properties:
      amount_in:
        type: string
      interface_provider:
        type: string
      min_amount_out:
        type: string
      route:
        $ref: '#/definitions/sunrise.swap.v1.Route'
      sender:
        type: string
  sunrise.swap.v1.MsgSwapExactAmountInResponse:
    type: object
    title: MsgSwapExactAmountInResponse
    properties:
      amount_out:
        type: string
      interface_provider_fee:
        type: string
      result:
        $ref: '#/definitions/sunrise.swap.v1.RouteResult'
  sunrise.swap.v1.MsgSwapExactAmountOut:
    type: object
    title: MsgSwapExactAmountOut
    properties:
      amount_out:
        type: string
      interface_provider:
        type: string
      max_amount_in:
        type: string
      route:
        $ref: '#/definitions/sunrise.swap.v1.Route'
      sender:
        type: string
  sunrise.swap.v1.MsgSwapExactAmountOutResponse:
    type: object
    title: MsgSwapExactAmountOutResponse
    properties:
      amount_out:
        type: string
      interface_provider_fee:
        type: string
      result:
        $ref: '#/definitions/sunrise.swap.v1.RouteResult'
  sunrise.swap.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: 'NOTE: All parameters must be supplied.'
        $ref: '#/definitions/sunrise.swap.v1.Params'
  sunrise.swap.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.swap.v1.OutgoingInFlightPacket:
    type: object
    title: OutgoingInFlightPacket
    properties:
      ack_waiting_index:
        $ref: '#/definitions/sunrise.swap.v1.PacketIndex'
      index:
        $ref: '#/definitions/sunrise.swap.v1.PacketIndex'
      retries_remaining:
        type: integer
        format: int32
  sunrise.swap.v1.PacketIndex:
    type: object
    title: PacketIndex
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      sequence:
        type: string
        format: uint64
  sunrise.swap.v1.Params:
    description: Params defines the parameters for the module.
    type: object
    properties:
      interface_fee_rate:
        type: string
  sunrise.swap.v1.QueryCalculationSwapExactAmountInRequest:
    type: object
    title: QueryCalculationSwapExactAmountInRequest
    properties:
      amount_in:
        type: string
      has_interface_fee:
        type: boolean
      route:
        $ref: '#/definitions/sunrise.swap.v1.Route'
  sunrise.swap.v1.QueryCalculationSwapExactAmountInResponse:
    type: object
    title: QueryCalculationSwapExactAmountInResponse
    properties:
      amount_out:
        type: string
      interface_provider_fee:
        type: string
      result:
        $ref: '#/definitions/sunrise.swap.v1.RouteResult'
  sunrise.swap.v1.QueryCalculationSwapExactAmountOutRequest:
    type: object
    title: QueryCalculationSwapExactAmountOutRequest
    properties:
      amount_out:
        type: string
      has_interface_fee:
        type: boolean
      route:
        $ref: '#/definitions/sunrise.swap.v1.Route'
  sunrise.swap.v1.QueryCalculationSwapExactAmountOutResponse:
    type: object
    title: QueryCalculationSwapExactAmountOutResponse
    properties:
      amount_in:
        type: string
      interface_provider_fee:
        type: string
      result:
        $ref: '#/definitions/sunrise.swap.v1.RouteResult'
  sunrise.swap.v1.QueryIncomingInFlightPacketResponse:
    type: object
    title: QueryIncomingInFlightPacketResponse
    properties:
      packet:
        $ref: '#/definitions/sunrise.swap.v1.IncomingInFlightPacket'
  sunrise.swap.v1.QueryIncomingInFlightPacketsResponse:
    type: object
    title: QueryIncomingInFlightPacketsResponse
    properties:
      packets:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.swap.v1.IncomingInFlightPacket'
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  sunrise.swap.v1.QueryOutgoingInFlightPacketResponse:
    type: object
    title: QueryOutgoingInFlightPacketResponse
    properties:
      packet:
        $ref: '#/definitions/sunrise.swap.v1.OutgoingInFlightPacket'
  sunrise.swap.v1.QueryOutgoingInFlightPacketsResponse:
    type: object
    title: QueryOutgoingInFlightPacketsResponse
    properties:
      packets:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.swap.v1.OutgoingInFlightPacket'
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
  sunrise.swap.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.swap.v1.Params'
  sunrise.swap.v1.Route:
    type: object
    title: Route
    properties:
      denom_in:
        type: string
      denom_out:
        type: string
      parallel:
        $ref: '#/definitions/sunrise.swap.v1.RouteParallel'
      pool:
        $ref: '#/definitions/sunrise.swap.v1.RoutePool'
      series:
        $ref: '#/definitions/sunrise.swap.v1.RouteSeries'
  sunrise.swap.v1.RouteParallel:
    type: object
    title: RouteParallel
    properties:
      routes:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.swap.v1.Route'
      weights:
        type: array
        items:
          type: string
  sunrise.swap.v1.RoutePool:
    type: object
    title: RoutePool
    properties:
      pool_id:
        type: string
        format: uint64
  sunrise.swap.v1.RouteResult:
    type: object
    title: RouteResult
    properties:
      parallel:
        $ref: '#/definitions/sunrise.swap.v1.RouteResultParallel'
      pool:
        $ref: '#/definitions/sunrise.swap.v1.RouteResultPool'
      series:
        $ref: '#/definitions/sunrise.swap.v1.RouteResultSeries'
      token_in:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      token_out:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
  sunrise.swap.v1.RouteResultParallel:
    type: object
    title: RouteResultParallel
    properties:
      route_results:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.swap.v1.RouteResult'
  sunrise.swap.v1.RouteResultPool:
    type: object
    title: RouteResultPool
    properties:
      pool_id:
        type: string
        format: uint64
  sunrise.swap.v1.RouteResultSeries:
    type: object
    title: RouteResultSeries
    properties:
      route_results:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.swap.v1.RouteResult'
  sunrise.swap.v1.RouteSeries:
    type: object
    title: RouteSeries
    properties:
      routes:
        type: array
        items:
          type: object
          $ref: '#/definitions/sunrise.swap.v1.Route'
  sunrise.tokenconverter.v1.MsgConvert:
    type: object
    title: MsgConvert
    properties:
      amount:
        type: string
        title: Amount of bond denom
      sender:
        type: string
  sunrise.tokenconverter.v1.MsgConvertResponse:
    type: object
    title: MsgConvertResponse
  sunrise.tokenconverter.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    type: object
    properties:
      authority:
        description: authority is the address that controls the module (defaults to x/gov unless overwritten).
        type: string
      params:
        description: 'NOTE: All parameters must be supplied.'
        $ref: '#/definitions/sunrise.tokenconverter.v1.Params'
  sunrise.tokenconverter.v1.MsgUpdateParamsResponse:
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
    type: object
  sunrise.tokenconverter.v1.Params:
    description: Params defines the parameters for the module.
    type: object
  sunrise.tokenconverter.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        $ref: '#/definitions/sunrise.tokenconverter.v1.Params'
  tendermint.abci.CheckTxType:
    type: string
    default: NEW
    enum:
      - NEW
      - RECHECK
  tendermint.abci.CommitInfo:
    type: object
    properties:
      round:
        type: integer
        format: int32
      votes:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.VoteInfo'
  tendermint.abci.Event:
    description: |-
      Event allows application developers to attach additional information to
      ResponseFinalizeBlock and ResponseCheckTx.
      Later, transactions may be queried using these events.
    type: object
    properties:
      attributes:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.EventAttribute'
      type:
        type: string
  tendermint.abci.EventAttribute:
    description: EventAttribute is a single key-value pair, associated with an event.
    type: object
    properties:
      index:
        type: boolean
        title: nondeterministic
      key:
        type: string
      value:
        type: string
  tendermint.abci.ExecTxResult:
    description: |-
      ExecTxResult contains results of executing one individual transaction.

      * Its structure is equivalent to #ResponseDeliverTx which will be deprecated/deleted
    type: object
    properties:
      code:
        type: integer
        format: int64
      codespace:
        type: string
      data:
        type: string
        format: byte
      events:
        type: array
        title: nondeterministic
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Event'
      gas_used:
        type: string
        format: int64
      gas_wanted:
        type: string
        format: int64
      info:
        type: string
        title: nondeterministic
      log:
        type: string
        title: nondeterministic
  tendermint.abci.ExtendedCommitInfo:
    description: |-
      ExtendedCommitInfo is similar to CommitInfo except that it is only used in
      the PrepareProposal request such that CometBFT can provide vote extensions
      to the application.
    type: object
    properties:
      round:
        description: The round at which the block proposer decided in the previous height.
        type: integer
        format: int32
      votes:
        description: |-
          List of validators' addresses in the last validator set with their voting
          information, including vote extensions.
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.ExtendedVoteInfo'
  tendermint.abci.ExtendedVoteInfo:
    type: object
    properties:
      block_id_flag:
        title: block_id_flag indicates whether the validator voted for a block, nil, or did not vote at all
        $ref: '#/definitions/tendermint.types.BlockIDFlag'
      extension_signature:
        type: string
        format: byte
        title: Vote extension signature created by CometBFT
      validator:
        description: The validator that sent the vote.
        $ref: '#/definitions/tendermint.abci.Validator'
      vote_extension:
        description: Non-deterministic extension provided by the sending validator's application.
        type: string
        format: byte
  tendermint.abci.Misbehavior:
    type: object
    properties:
      height:
        type: string
        format: int64
        title: The height when the offense occurred
      time:
        type: string
        format: date-time
        title: The corresponding time where the offense occurred
      total_voting_power:
        type: string
        format: int64
        title: |-
          Total voting power of the validator set in case the ABCI application does
          not store historical validators.
          https://github.com/tendermint/tendermint/issues/4581
      type:
        $ref: '#/definitions/tendermint.abci.MisbehaviorType'
      validator:
        title: The offending validator
        $ref: '#/definitions/tendermint.abci.Validator'
  tendermint.abci.MisbehaviorType:
    type: string
    default: UNKNOWN
    enum:
      - UNKNOWN
      - DUPLICATE_VOTE
      - LIGHT_CLIENT_ATTACK
  tendermint.abci.RequestApplySnapshotChunk:
    type: object
    title: Applies a snapshot chunk
    properties:
      chunk:
        type: string
        format: byte
      index:
        type: integer
        format: int64
      sender:
        type: string
  tendermint.abci.RequestCheckTx:
    type: object
    properties:
      tx:
        type: string
        format: byte
      type:
        $ref: '#/definitions/tendermint.abci.CheckTxType'
  tendermint.abci.RequestCommit:
    type: object
  tendermint.abci.RequestEcho:
    type: object
    properties:
      message:
        type: string
  tendermint.abci.RequestExtendVote:
    type: object
    title: Extends a vote with application-injected data
    properties:
      hash:
        type: string
        format: byte
        title: the hash of the block that this vote may be referring to
      height:
        type: string
        format: int64
        title: the height of the extended vote
      misbehavior:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Misbehavior'
      next_validators_hash:
        type: string
        format: byte
      proposed_last_commit:
        $ref: '#/definitions/tendermint.abci.CommitInfo'
      proposer_address:
        description: address of the public key of the original proposer of the block.
        type: string
        format: byte
      time:
        type: string
        format: date-time
        title: info of the block that this vote may be referring to
      txs:
        type: array
        items:
          type: string
          format: byte
  tendermint.abci.RequestFinalizeBlock:
    type: object
    properties:
      decided_last_commit:
        $ref: '#/definitions/tendermint.abci.CommitInfo'
      hash:
        description: hash is the merkle root hash of the fields of the decided block.
        type: string
        format: byte
      height:
        type: string
        format: int64
      misbehavior:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Misbehavior'
      next_validators_hash:
        type: string
        format: byte
      proposer_address:
        description: proposer_address is the address of the public key of the original proposer of the block.
        type: string
        format: byte
      time:
        type: string
        format: date-time
      txs:
        type: array
        items:
          type: string
          format: byte
  tendermint.abci.RequestFlush:
    type: object
  tendermint.abci.RequestInfo:
    type: object
    properties:
      abci_version:
        type: string
      block_version:
        type: string
        format: uint64
      p2p_version:
        type: string
        format: uint64
      version:
        type: string
  tendermint.abci.RequestInitChain:
    type: object
    properties:
      app_state_bytes:
        type: string
        format: byte
      chain_id:
        type: string
      consensus_params:
        $ref: '#/definitions/tendermint.types.ConsensusParams'
      initial_height:
        type: string
        format: int64
      time:
        type: string
        format: date-time
      validators:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.ValidatorUpdate'
  tendermint.abci.RequestListSnapshots:
    type: object
    title: lists available snapshots
  tendermint.abci.RequestLoadSnapshotChunk:
    type: object
    title: loads a snapshot chunk
    properties:
      chunk:
        type: integer
        format: int64
      format:
        type: integer
        format: int64
      height:
        type: string
        format: uint64
  tendermint.abci.RequestOfferSnapshot:
    type: object
    title: offers a snapshot to the application
    properties:
      app_hash:
        type: string
        format: byte
        title: light client-verified app hash for snapshot height
      snapshot:
        title: snapshot offered by peers
        $ref: '#/definitions/tendermint.abci.Snapshot'
  tendermint.abci.RequestPrepareProposal:
    type: object
    properties:
      height:
        type: string
        format: int64
      local_last_commit:
        $ref: '#/definitions/tendermint.abci.ExtendedCommitInfo'
      max_tx_bytes:
        description: the modified transactions cannot exceed this size.
        type: string
        format: int64
      misbehavior:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Misbehavior'
      next_validators_hash:
        type: string
        format: byte
      proposer_address:
        description: address of the public key of the validator proposing the block.
        type: string
        format: byte
      time:
        type: string
        format: date-time
      txs:
        description: |-
          txs is an array of transactions that will be included in a block,
          sent to the app for possible modifications.
        type: array
        items:
          type: string
          format: byte
  tendermint.abci.RequestProcessProposal:
    type: object
    properties:
      hash:
        description: hash is the merkle root hash of the fields of the proposed block.
        type: string
        format: byte
      height:
        type: string
        format: int64
      misbehavior:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Misbehavior'
      next_validators_hash:
        type: string
        format: byte
      proposed_last_commit:
        $ref: '#/definitions/tendermint.abci.CommitInfo'
      proposer_address:
        description: address of the public key of the original proposer of the block.
        type: string
        format: byte
      time:
        type: string
        format: date-time
      txs:
        type: array
        items:
          type: string
          format: byte
  tendermint.abci.RequestQuery:
    type: object
    properties:
      data:
        type: string
        format: byte
      height:
        type: string
        format: int64
      path:
        type: string
      prove:
        type: boolean
  tendermint.abci.RequestVerifyVoteExtension:
    type: object
    title: Verify the vote extension
    properties:
      hash:
        type: string
        format: byte
        title: the hash of the block that this received vote corresponds to
      height:
        type: string
        format: int64
      validator_address:
        type: string
        format: byte
        title: the validator that signed the vote extension
      vote_extension:
        type: string
        format: byte
  tendermint.abci.ResponseApplySnapshotChunk:
    type: object
    properties:
      refetch_chunks:
        type: array
        title: Chunks to refetch and reapply
        items:
          type: integer
          format: int64
      reject_senders:
        type: array
        title: Chunk senders to reject and ban
        items:
          type: string
      result:
        $ref: '#/definitions/tendermint.abci.ResponseApplySnapshotChunk.Result'
  tendermint.abci.ResponseApplySnapshotChunk.Result:
    type: string
    title: |-
      - UNKNOWN: Unknown result, abort all snapshot restoration
       - ACCEPT: Chunk successfully accepted
       - ABORT: Abort all snapshot restoration
       - RETRY: Retry chunk (combine with refetch and reject)
       - RETRY_SNAPSHOT: Retry snapshot (combine with refetch and reject)
       - REJECT_SNAPSHOT: Reject this snapshot, try others
    default: UNKNOWN
    enum:
      - UNKNOWN
      - ACCEPT
      - ABORT
      - RETRY
      - RETRY_SNAPSHOT
      - REJECT_SNAPSHOT
  tendermint.abci.ResponseCheckTx:
    type: object
    properties:
      code:
        type: integer
        format: int64
      codespace:
        type: string
      data:
        type: string
        format: byte
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Event'
      gas_used:
        type: string
        format: int64
      gas_wanted:
        type: string
        format: int64
      info:
        type: string
        title: nondeterministic
      log:
        type: string
        title: nondeterministic
  tendermint.abci.ResponseCommit:
    type: object
    properties:
      retain_height:
        type: string
        format: int64
  tendermint.abci.ResponseEcho:
    type: object
    properties:
      message:
        type: string
  tendermint.abci.ResponseExtendVote:
    type: object
    properties:
      vote_extension:
        type: string
        format: byte
  tendermint.abci.ResponseFinalizeBlock:
    type: object
    properties:
      app_hash:
        description: |-
          app_hash is the hash of the applications' state which is used to confirm that execution of the transactions was
          deterministic. It is up to the application to decide which algorithm to use.
        type: string
        format: byte
      consensus_param_updates:
        description: updates to the consensus params, if any.
        $ref: '#/definitions/tendermint.types.ConsensusParams'
      events:
        type: array
        title: set of block events emmitted as part of executing the block
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Event'
      tx_results:
        type: array
        title: |-
          the result of executing each transaction including the events
          the particular transction emitted. This should match the order
          of the transactions delivered in the block itself
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.ExecTxResult'
      validator_updates:
        description: a list of updates to the validator set. These will reflect the validator set at current height + 2.
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.ValidatorUpdate'
  tendermint.abci.ResponseFlush:
    type: object
  tendermint.abci.ResponseInfo:
    type: object
    properties:
      app_version:
        type: string
        format: uint64
      data:
        type: string
      last_block_app_hash:
        type: string
        format: byte
      last_block_height:
        type: string
        format: int64
      version:
        type: string
  tendermint.abci.ResponseInitChain:
    type: object
    properties:
      app_hash:
        type: string
        format: byte
      consensus_params:
        $ref: '#/definitions/tendermint.types.ConsensusParams'
      validators:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.ValidatorUpdate'
  tendermint.abci.ResponseListSnapshots:
    type: object
    properties:
      snapshots:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.abci.Snapshot'
  tendermint.abci.ResponseLoadSnapshotChunk:
    type: object
    properties:
      chunk:
        type: string
        format: byte
  tendermint.abci.ResponseOfferSnapshot:
    type: object
    properties:
      result:
        $ref: '#/definitions/tendermint.abci.ResponseOfferSnapshot.Result'
  tendermint.abci.ResponseOfferSnapshot.Result:
    type: string
    title: |-
      - UNKNOWN: Unknown result, abort all snapshot restoration
       - ACCEPT: Snapshot accepted, apply chunks
       - ABORT: Abort all snapshot restoration
       - REJECT: Reject this specific snapshot, try others
       - REJECT_FORMAT: Reject all snapshots of this format, try others
       - REJECT_SENDER: Reject all snapshots from the sender(s), try others
    default: UNKNOWN
    enum:
      - UNKNOWN
      - ACCEPT
      - ABORT
      - REJECT
      - REJECT_FORMAT
      - REJECT_SENDER
  tendermint.abci.ResponsePrepareProposal:
    type: object
    properties:
      txs:
        type: array
        items:
          type: string
          format: byte
  tendermint.abci.ResponseProcessProposal:
    type: object
    properties:
      status:
        $ref: '#/definitions/tendermint.abci.ResponseProcessProposal.ProposalStatus'
  tendermint.abci.ResponseProcessProposal.ProposalStatus:
    type: string
    default: UNKNOWN
    enum:
      - UNKNOWN
      - ACCEPT
      - REJECT
  tendermint.abci.ResponseQuery:
    type: object
    properties:
      code:
        type: integer
        format: int64
      codespace:
        type: string
      height:
        type: string
        format: int64
      index:
        type: string
        format: int64
      info:
        type: string
        title: nondeterministic
      key:
        type: string
        format: byte
      log:
        description: |-
          bytes data = 2; // use "value" instead.

          nondeterministic
        type: string
      proof_ops:
        $ref: '#/definitions/tendermint.crypto.ProofOps'
      value:
        type: string
        format: byte
  tendermint.abci.ResponseVerifyVoteExtension:
    type: object
    properties:
      status:
        $ref: '#/definitions/tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus'
  tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus:
    description: |2-
       - REJECT: Rejecting the vote extension will reject the entire precommit by the sender.
      Incorrectly implementing this thus has liveness implications as it may affect
      CometBFT's ability to receive 2/3+ valid votes to finalize the block.
      Honest nodes should never be rejected.
    type: string
    default: UNKNOWN
    enum:
      - UNKNOWN
      - ACCEPT
      - REJECT
  tendermint.abci.Snapshot:
    type: object
    properties:
      chunks:
        type: integer
        format: int64
        title: Number of chunks in the snapshot
      format:
        type: integer
        format: int64
        title: The application-specific snapshot format
      hash:
        type: string
        format: byte
        title: Arbitrary snapshot hash, equal only if identical
      height:
        type: string
        format: uint64
        title: The height at which the snapshot was taken
      metadata:
        type: string
        format: byte
        title: Arbitrary application metadata
  tendermint.abci.Validator:
    type: object
    properties:
      address:
        type: string
        format: byte
        title: The first 20 bytes of SHA256(public key)
      power:
        description: The voting power
        type: string
        format: int64
        title: PubKey pub_key = 2 [(gogoproto.nullable)=false];
  tendermint.abci.ValidatorUpdate:
    type: object
    properties:
      power:
        type: string
        format: int64
      pub_key:
        $ref: '#/definitions/tendermint.crypto.PublicKey'
  tendermint.abci.VoteInfo:
    type: object
    properties:
      block_id_flag:
        $ref: '#/definitions/tendermint.types.BlockIDFlag'
      validator:
        $ref: '#/definitions/tendermint.abci.Validator'
  tendermint.crypto.ProofOp:
    type: object
    title: |-
      ProofOp defines an operation used for calculating Merkle root
      The data could be arbitrary format, providing nessecary data
      for example neighbouring node hash
    properties:
      data:
        type: string
        format: byte
      key:
        type: string
        format: byte
      type:
        type: string
  tendermint.crypto.ProofOps:
    type: object
    title: ProofOps is Merkle proof defined by the list of ProofOps
    properties:
      ops:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.crypto.ProofOp'
  tendermint.crypto.PublicKey:
    type: object
    title: PublicKey defines the keys available for use with Validators
    properties:
      ed25519:
        type: string
        format: byte
      secp256k1:
        type: string
        format: byte
  tendermint.p2p.DefaultNodeInfo:
    type: object
    properties:
      channels:
        type: string
        format: byte
      default_node_id:
        type: string
      listen_addr:
        type: string
      moniker:
        type: string
      network:
        type: string
      other:
        $ref: '#/definitions/tendermint.p2p.DefaultNodeInfoOther'
      protocol_version:
        $ref: '#/definitions/tendermint.p2p.ProtocolVersion'
      version:
        type: string
  tendermint.p2p.DefaultNodeInfoOther:
    type: object
    properties:
      rpc_address:
        type: string
      tx_index:
        type: string
  tendermint.p2p.ProtocolVersion:
    type: object
    properties:
      app:
        type: string
        format: uint64
      block:
        type: string
        format: uint64
      p2p:
        type: string
        format: uint64
  tendermint.types.ABCIParams:
    description: ABCIParams configure functionality specific to the Application Blockchain Interface.
    type: object
    properties:
      vote_extensions_enable_height:
        description: |-
          vote_extensions_enable_height configures the first height during which
          vote extensions will be enabled. During this specified height, and for all
          subsequent heights, precommit messages that do not contain valid extension data
          will be considered invalid. Prior to this height, vote extensions will not
          be used or accepted by validators on the network.

          Once enabled, vote extensions will be created by the application in ExtendVote,
          passed to the application for validation in VerifyVoteExtension and given
          to the application to use when proposing a block during PrepareProposal.
        type: string
        format: int64
  tendermint.types.Block:
    type: object
    properties:
      data:
        $ref: '#/definitions/tendermint.types.Data'
      evidence:
        $ref: '#/definitions/tendermint.types.EvidenceList'
      header:
        $ref: '#/definitions/tendermint.types.Header'
      last_commit:
        $ref: '#/definitions/tendermint.types.Commit'
  tendermint.types.BlockID:
    type: object
    title: BlockID
    properties:
      hash:
        type: string
        format: byte
      part_set_header:
        $ref: '#/definitions/tendermint.types.PartSetHeader'
  tendermint.types.BlockIDFlag:
    description: |-
      - BLOCK_ID_FLAG_UNKNOWN: indicates an error condition
       - BLOCK_ID_FLAG_ABSENT: the vote was not received
       - BLOCK_ID_FLAG_COMMIT: voted for the block that received the majority
       - BLOCK_ID_FLAG_NIL: voted for nil
    type: string
    title: BlockIdFlag indicates which BlockID the signature is for
    default: BLOCK_ID_FLAG_UNKNOWN
    enum:
      - BLOCK_ID_FLAG_UNKNOWN
      - BLOCK_ID_FLAG_ABSENT
      - BLOCK_ID_FLAG_COMMIT
      - BLOCK_ID_FLAG_NIL
  tendermint.types.BlockParams:
    description: BlockParams contains limits on the block size.
    type: object
    properties:
      max_bytes:
        type: string
        format: int64
        title: |-
          Max block size, in bytes.
          Note: must be greater than 0
      max_gas:
        type: string
        format: int64
        title: |-
          Max gas per block.
          Note: must be greater or equal to -1
  tendermint.types.Commit:
    description: Commit contains the evidence that a block was committed by a set of validators.
    type: object
    properties:
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      height:
        type: string
        format: int64
      round:
        type: integer
        format: int32
      signatures:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.types.CommitSig'
  tendermint.types.CommitSig:
    description: CommitSig is a part of the Vote included in a Commit.
    type: object
    properties:
      block_id_flag:
        $ref: '#/definitions/tendermint.types.BlockIDFlag'
      signature:
        type: string
        format: byte
      timestamp:
        type: string
        format: date-time
      validator_address:
        type: string
        format: byte
  tendermint.types.ConsensusParams:
    description: |-
      ConsensusParams contains consensus critical parameters that determine the
      validity of blocks.
    type: object
    properties:
      abci:
        $ref: '#/definitions/tendermint.types.ABCIParams'
      block:
        $ref: '#/definitions/tendermint.types.BlockParams'
      evidence:
        $ref: '#/definitions/tendermint.types.EvidenceParams'
      validator:
        $ref: '#/definitions/tendermint.types.ValidatorParams'
      version:
        $ref: '#/definitions/tendermint.types.VersionParams'
  tendermint.types.Data:
    type: object
    title: Data contains the set of transactions included in the block
    properties:
      txs:
        description: |-
          Txs that will be applied by state @ block.Height+1.
          NOTE: not all txs here are valid.  We're just agreeing on the order first.
          This means that block.AppHash does not include these txs.
        type: array
        items:
          type: string
          format: byte
  tendermint.types.DuplicateVoteEvidence:
    description: DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
      total_voting_power:
        type: string
        format: int64
      validator_power:
        type: string
        format: int64
      vote_a:
        $ref: '#/definitions/tendermint.types.Vote'
      vote_b:
        $ref: '#/definitions/tendermint.types.Vote'
  tendermint.types.Evidence:
    type: object
    properties:
      duplicate_vote_evidence:
        $ref: '#/definitions/tendermint.types.DuplicateVoteEvidence'
      light_client_attack_evidence:
        $ref: '#/definitions/tendermint.types.LightClientAttackEvidence'
  tendermint.types.EvidenceList:
    type: object
    properties:
      evidence:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.types.Evidence'
  tendermint.types.EvidenceParams:
    description: EvidenceParams determine how we handle evidence of malfeasance.
    type: object
    properties:
      max_age_duration:
        description: |-
          Max age of evidence, in time.

          It should correspond with an app's "unbonding period" or other similar
          mechanism for handling [Nothing-At-Stake
          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
        type: string
      max_age_num_blocks:
        description: |-
          Max age of evidence, in blocks.

          The basic formula for calculating this is: MaxAgeDuration / {average block
          time}.
        type: string
        format: int64
      max_bytes:
        type: string
        format: int64
        title: |-
          This sets the maximum size of total evidence in bytes that can be committed in a single block.
          and should fall comfortably under the max block bytes.
          Default is 1048576 or 1MB
  tendermint.types.Header:
    description: Header defines the structure of a block header.
    type: object
    properties:
      app_hash:
        type: string
        format: byte
        title: state after txs from the previous block
      chain_id:
        type: string
      consensus_hash:
        type: string
        format: byte
        title: consensus params for current block
      data_hash:
        type: string
        format: byte
        title: transactions
      evidence_hash:
        description: evidence included in the block
        type: string
        format: byte
        title: consensus info
      height:
        type: string
        format: int64
      last_block_id:
        title: prev block info
        $ref: '#/definitions/tendermint.types.BlockID'
      last_commit_hash:
        description: commit from validators from the last block
        type: string
        format: byte
        title: hashes of block data
      last_results_hash:
        type: string
        format: byte
        title: root hash of all results from the txs from the previous block
      next_validators_hash:
        type: string
        format: byte
        title: validators for the next block
      proposer_address:
        type: string
        format: byte
        title: original proposer of the block
      time:
        type: string
        format: date-time
      validators_hash:
        description: validators for the current block
        type: string
        format: byte
        title: hashes from the app output from the prev block
      version:
        title: basic block info
        $ref: '#/definitions/tendermint.version.Consensus'
  tendermint.types.LightBlock:
    type: object
    properties:
      signed_header:
        $ref: '#/definitions/tendermint.types.SignedHeader'
      validator_set:
        $ref: '#/definitions/tendermint.types.ValidatorSet'
  tendermint.types.LightClientAttackEvidence:
    description: LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
    type: object
    properties:
      byzantine_validators:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.types.Validator'
      common_height:
        type: string
        format: int64
      conflicting_block:
        $ref: '#/definitions/tendermint.types.LightBlock'
      timestamp:
        type: string
        format: date-time
      total_voting_power:
        type: string
        format: int64
  tendermint.types.PartSetHeader:
    type: object
    title: PartsetHeader
    properties:
      hash:
        type: string
        format: byte
      total:
        type: integer
        format: int64
  tendermint.types.SignedHeader:
    type: object
    properties:
      commit:
        $ref: '#/definitions/tendermint.types.Commit'
      header:
        $ref: '#/definitions/tendermint.types.Header'
  tendermint.types.SignedMsgType:
    description: |-
      SignedMsgType is a type of signed message in the consensus.

       - SIGNED_MSG_TYPE_PREVOTE: Votes
       - SIGNED_MSG_TYPE_PROPOSAL: Proposals
    type: string
    default: SIGNED_MSG_TYPE_UNKNOWN
    enum:
      - SIGNED_MSG_TYPE_UNKNOWN
      - SIGNED_MSG_TYPE_PREVOTE
      - SIGNED_MSG_TYPE_PRECOMMIT
      - SIGNED_MSG_TYPE_PROPOSAL
  tendermint.types.Validator:
    type: object
    properties:
      address:
        type: string
        format: byte
      proposer_priority:
        type: string
        format: int64
      pub_key:
        $ref: '#/definitions/tendermint.crypto.PublicKey'
      voting_power:
        type: string
        format: int64
  tendermint.types.ValidatorParams:
    description: |-
      ValidatorParams restrict the public key types validators can use.
      NOTE: uses ABCI pubkey naming, not Amino names.
    type: object
    properties:
      pub_key_types:
        type: array
        items:
          type: string
  tendermint.types.ValidatorSet:
    type: object
    properties:
      proposer:
        $ref: '#/definitions/tendermint.types.Validator'
      total_voting_power:
        type: string
        format: int64
      validators:
        type: array
        items:
          type: object
          $ref: '#/definitions/tendermint.types.Validator'
  tendermint.types.VersionParams:
    description: VersionParams contains the ABCI application version.
    type: object
    properties:
      app:
        type: string
        format: uint64
  tendermint.types.Vote:
    description: |-
      Vote represents a prevote or precommit vote from validators for
      consensus.
    type: object
    properties:
      block_id:
        description: zero if vote is nil.
        $ref: '#/definitions/tendermint.types.BlockID'
      extension:
        description: |-
          Vote extension provided by the application. Only valid for precommit
          messages.
        type: string
        format: byte
      extension_signature:
        description: |-
          Vote extension signature by the validator if they participated in
          consensus for the associated block.
          Only valid for precommit messages.
        type: string
        format: byte
      height:
        type: string
        format: int64
      round:
        type: integer
        format: int32
      signature:
        description: |-
          Vote signature by the validator if they participated in consensus for the
          associated block.
        type: string
        format: byte
      timestamp:
        type: string
        format: date-time
      type:
        $ref: '#/definitions/tendermint.types.SignedMsgType'
      validator_address:
        type: string
        format: byte
      validator_index:
        type: integer
        format: int32
  tendermint.version.Consensus:
    description: |-
      Consensus captures the consensus rules for processing a block in the blockchain,
      including all blockchain data structures and the rules of the application's
      state transition machine.
    type: object
    properties:
      app:
        type: string
        format: uint64
      block:
        type: string
        format: uint64
tags:
  - name: Query
  - name: Msg
  - name: Service
  - name: ReflectionService
  - name: ABCIListenerService
  - name: ABCI

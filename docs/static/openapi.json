{"id":"github.com/sunriselayer/sunrise","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/sunriselayer/sunrise REST API","title":"HTTP API Console","contact":{"name":"github.com/sunriselayer/sunrise"},"version":"version not set"},"paths":{"/sunrise.da.v0.Msg/PublishData":{"post":{"tags":["Msg"],"summary":"PublishData","operationId":"GithubComsunriselayersunriseMsg_PublishData","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.da.v0.MsgPublishData"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.MsgPublishDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.da.v0.Msg/RegisterProofDeputy":{"post":{"tags":["Msg"],"summary":"RegisterProofDeputy","operationId":"GithubComsunriselayersunriseMsg_RegisterProofDeputy","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.da.v0.MsgRegisterProofDeputy"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.MsgRegisterProofDeputyResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.da.v0.Msg/SubmitInvalidity":{"post":{"tags":["Msg"],"summary":"SubmitInvalidity","operationId":"GithubComsunriselayersunriseMsg_SubmitInvalidity","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.da.v0.MsgSubmitInvalidity"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.MsgSubmitInvalidityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.da.v0.Msg/SubmitValidityProof":{"post":{"tags":["Msg"],"summary":"SubmitValidityProof","operationId":"GithubComsunriselayersunriseMsg_SubmitValidityProof","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.da.v0.MsgSubmitValidityProof"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.MsgSubmitValidityProofResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.da.v0.Msg/UnregisterProofDeputy":{"post":{"tags":["Msg"],"summary":"UnregisterProofDeputy","operationId":"GithubComsunriselayersunriseMsg_UnregisterProofDeputy","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.da.v0.MsgUnregisterProofDeputy"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.MsgUnregisterProofDeputyResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.da.v0.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.da.v0.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.fee.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin11","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.fee.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.fee.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lending.v1.Msg/Borrow":{"post":{"tags":["Msg"],"summary":"Borrow defines the Borrow RPC.","operationId":"GithubComsunriselayersunriseMsg_Borrow","parameters":[{"description":"MsgBorrow defines the MsgBorrow message.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgBorrow"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgBorrowResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lending.v1.Msg/Liquidate":{"post":{"tags":["Msg"],"summary":"Liquidate defines the Liquidate RPC.","operationId":"GithubComsunriselayersunriseMsg_Liquidate","parameters":[{"description":"MsgLiquidate defines the MsgLiquidate message.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgLiquidate"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgLiquidateResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lending.v1.Msg/Repay":{"post":{"tags":["Msg"],"summary":"Repay defines the Repay RPC.","operationId":"GithubComsunriselayersunriseMsg_Repay","parameters":[{"description":"MsgRepay defines the MsgRepay message.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgRepay"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgRepayResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lending.v1.Msg/Supply":{"post":{"tags":["Msg"],"summary":"Supply defines the Supply RPC.","operationId":"GithubComsunriselayersunriseMsg_Supply","parameters":[{"description":"MsgSupply defines the MsgSupply message.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgSupply"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgSupplyResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lending.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin15","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lending.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquidityincentive.v1.Msg/ClaimBribes":{"post":{"tags":["Msg"],"summary":"ClaimBribes","operationId":"GithubComsunriselayersunriseMsg_ClaimBribes","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgClaimBribes"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgClaimBribesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquidityincentive.v1.Msg/RegisterBribe":{"post":{"tags":["Msg"],"summary":"RegisterBribe","operationId":"GithubComsunriselayersunriseMsg_RegisterBribe","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgRegisterBribe"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgRegisterBribeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquidityincentive.v1.Msg/StartNewEpoch":{"post":{"tags":["Msg"],"summary":"StartNewEpoch","operationId":"GithubComsunriselayersunriseMsg_StartNewEpoch","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgStartNewEpoch"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgStartNewEpochResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquidityincentive.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin23","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquidityincentive.v1.Msg/VoteGauge":{"post":{"tags":["Msg"],"summary":"VoteGauge","operationId":"GithubComsunriselayersunriseMsg_VoteGauge","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgVoteGauge"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.MsgVoteGaugeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquiditypool.v1.Msg/ClaimRewards":{"post":{"tags":["Msg"],"summary":"ClaimRewards","operationId":"GithubComsunriselayersunriseMsg_ClaimRewards","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgClaimRewards"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgClaimRewardsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquiditypool.v1.Msg/CreatePool":{"post":{"tags":["Msg"],"summary":"CreatePool","operationId":"GithubComsunriselayersunriseMsg_CreatePool","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgCreatePool"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgCreatePoolResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquiditypool.v1.Msg/CreatePosition":{"post":{"tags":["Msg"],"summary":"CreatePosition","operationId":"GithubComsunriselayersunriseMsg_CreatePosition","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgCreatePosition"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgCreatePositionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquiditypool.v1.Msg/DecreaseLiquidity":{"post":{"tags":["Msg"],"summary":"DecreaseLiquidity","operationId":"GithubComsunriselayersunriseMsg_DecreaseLiquidity","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgDecreaseLiquidity"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgDecreaseLiquidityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquiditypool.v1.Msg/IncreaseLiquidity":{"post":{"tags":["Msg"],"summary":"IncreaseLiquidity","operationId":"GithubComsunriselayersunriseMsg_IncreaseLiquidity","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgIncreaseLiquidity"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgIncreaseLiquidityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.liquiditypool.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin32","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lockup.v1.Msg/ClaimRewards":{"post":{"tags":["Msg"],"summary":"ClaimRewards","operationId":"GithubComsunriselayersunriseMsg_ClaimRewardsMixin37","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgClaimRewards"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgClaimRewardsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lockup.v1.Msg/InitLockupAccount":{"post":{"tags":["Msg"],"summary":"InitLockupAccount","operationId":"GithubComsunriselayersunriseMsg_InitLockupAccount","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgInitLockupAccount"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgInitLockupAccountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lockup.v1.Msg/NonVotingDelegate":{"post":{"tags":["Msg"],"summary":"NonVotingDelegate","operationId":"GithubComsunriselayersunriseMsg_NonVotingDelegate","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgNonVotingDelegate"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgNonVotingDelegateResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lockup.v1.Msg/NonVotingUndelegate":{"post":{"tags":["Msg"],"summary":"NonVotingUndelegate","operationId":"GithubComsunriselayersunriseMsg_NonVotingUndelegate","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgNonVotingUndelegate"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgNonVotingUndelegateResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lockup.v1.Msg/Send":{"post":{"tags":["Msg"],"summary":"Send","operationId":"GithubComsunriselayersunriseMsg_Send","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgSend"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgSendResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.lockup.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin37","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.rfq.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin41","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.rfq.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.rfq.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.shareclass.v1.Msg/ClaimRewards":{"post":{"tags":["Msg"],"summary":"ClaimRewards","operationId":"GithubComsunriselayersunriseMsg_ClaimRewardsMixin46","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgClaimRewards"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgClaimRewardsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.shareclass.v1.Msg/CreateValidator":{"post":{"tags":["Msg"],"summary":"CreateValidator","operationId":"GithubComsunriselayersunriseMsg_CreateValidator","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgCreateValidator"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgCreateValidatorResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.shareclass.v1.Msg/NonVotingDelegate":{"post":{"tags":["Msg"],"summary":"NonVotingDelegate","operationId":"GithubComsunriselayersunriseMsg_NonVotingDelegateMixin46","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgNonVotingDelegate"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgNonVotingDelegateResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.shareclass.v1.Msg/NonVotingUndelegate":{"post":{"tags":["Msg"],"summary":"NonVotingUndelegate","operationId":"GithubComsunriselayersunriseMsg_NonVotingUndelegateMixin46","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgNonVotingUndelegate"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgNonVotingUndelegateResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.shareclass.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin46","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.swap.v1.Msg/SwapExactAmountIn":{"post":{"tags":["Msg"],"summary":"SwapExactAmountIn","operationId":"GithubComsunriselayersunriseMsg_SwapExactAmountIn","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.swap.v1.MsgSwapExactAmountIn"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.MsgSwapExactAmountInResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.swap.v1.Msg/SwapExactAmountOut":{"post":{"tags":["Msg"],"summary":"SwapExactAmountOut","operationId":"GithubComsunriselayersunriseMsg_SwapExactAmountOut","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.swap.v1.MsgSwapExactAmountOut"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.MsgSwapExactAmountOutResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.swap.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin54","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.swap.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.tokenconverter.v1.Msg/Convert":{"post":{"tags":["Msg"],"summary":"Convert","operationId":"GithubComsunriselayersunriseMsg_Convert","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.tokenconverter.v1.MsgConvert"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.tokenconverter.v1.MsgConvertResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise.tokenconverter.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComsunriselayersunriseMsg_UpdateParamsMixin59","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.tokenconverter.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.tokenconverter.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/all-invalidity":{"get":{"tags":["Query"],"summary":"AllInvalidity queries all invalidity reports","operationId":"GithubComsunriselayersunriseQuery_AllInvalidity","parameters":[{"type":"string","name":"metadata_uri","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryAllInvalidityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/all-published-data":{"get":{"tags":["Query"],"summary":"AllPublishedData queries published data","operationId":"GithubComsunriselayersunriseQuery_AllPublishedData","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryAllPublishedDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/all-validity-proofs":{"get":{"tags":["Query"],"summary":"AllValidityProofs queries all validity proofs","operationId":"GithubComsunriselayersunriseQuery_AllValidityProofs","parameters":[{"type":"string","name":"metadata_uri","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryAllValidityProofsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/invalidity":{"get":{"tags":["Query"],"summary":"Invalidity queries invalidity report","operationId":"GithubComsunriselayersunriseQuery_Invalidity","parameters":[{"type":"string","name":"metadata_uri","in":"query"},{"type":"string","name":"sender_address","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryInvalidityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/params":{"get":{"tags":["Query"],"summary":"Params queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/proof-deputy":{"get":{"tags":["Query"],"summary":"ProofDeputy","operationId":"GithubComsunriselayersunriseQuery_ProofDeputy","parameters":[{"type":"string","name":"validator_address","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryProofDeputyResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/published-data":{"get":{"tags":["Query"],"summary":"PublishedData queries published data","operationId":"GithubComsunriselayersunriseQuery_PublishedData","parameters":[{"type":"string","name":"metadata_uri","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryPublishedDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/validator-shard-indices":{"get":{"tags":["Query"],"summary":"ValidatorShardIndices","operationId":"GithubComsunriselayersunriseQuery_ValidatorShardIndices","parameters":[{"type":"string","name":"validator_address","in":"query"},{"type":"string","format":"uint64","name":"shard_count","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryValidatorShardIndicesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/validity-proof":{"get":{"tags":["Query"],"summary":"ValidityProof queries validity proof from the validator","operationId":"GithubComsunriselayersunriseQuery_ValidityProof","parameters":[{"type":"string","name":"metadata_uri","in":"query"},{"type":"string","name":"validator_address","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryValidityProofResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/da/v0/zkp-proof-threshold":{"get":{"tags":["Query"],"summary":"ZkpProofThreshold","operationId":"GithubComsunriselayersunriseQuery_ZkpProofThreshold","parameters":[{"type":"string","format":"uint64","name":"shard_count","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.da.v0.QueryZkpProofThresholdResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/fee/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin10","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.fee.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/bribe-allocations":{"get":{"tags":["Query"],"summary":"BribeAllocations queries bribe allocations with an optional filter for address.","operationId":"GithubComsunriselayersunriseQuery_BribeAllocations","parameters":[{"type":"string","description":"Optional filter by address. If empty, not applied.","name":"address","in":"query"},{"type":"string","description":"Optional filter by epoch_id. If empty, not applied.","name":"epoch_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryBribeAllocationsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/bribe-allocations/{address}/{epoch_id}/{pool_id}":{"get":{"tags":["Query"],"summary":"BribeAllocation queries a BribeAllocation by address, epoch ID, and pool ID.","operationId":"GithubComsunriselayersunriseQuery_BribeAllocation","parameters":[{"type":"string","name":"address","in":"path","required":true},{"type":"string","name":"epoch_id","in":"path","required":true},{"type":"string","name":"pool_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryBribeAllocationResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/bribes":{"get":{"tags":["Query"],"summary":"Bribes queries bribes with optional filters for epoch_id and pool_id.","operationId":"GithubComsunriselayersunriseQuery_Bribes","parameters":[{"type":"string","description":"Optional filter by epoch_id. If empty, not applied.","name":"epoch_id","in":"query"},{"type":"string","description":"Optional filter by pool_id. If empty, not applied.","name":"pool_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryBribesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/bribes/{id}":{"get":{"tags":["Query"],"summary":"Bribe queries a Bribe by its ID.","operationId":"GithubComsunriselayersunriseQuery_Bribe","parameters":[{"type":"string","format":"uint64","name":"id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryBribeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/epochs":{"get":{"tags":["Query"],"summary":"Epochs","operationId":"GithubComsunriselayersunriseQuery_Epochs","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryEpochsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/epochs/{id}":{"get":{"tags":["Query"],"summary":"Epoch","operationId":"GithubComsunriselayersunriseQuery_Epoch","parameters":[{"type":"string","format":"uint64","name":"id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryEpochResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin22","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/tally":{"get":{"tags":["Query"],"summary":"TallyResult queries the tally of next epoch.","operationId":"GithubComsunriselayersunriseQuery_TallyResult","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryTallyResultResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/votes":{"get":{"tags":["Query"],"summary":"Votes","operationId":"GithubComsunriselayersunriseQuery_Votes","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryVotesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquidityincentive/v1/votes/{address}":{"get":{"tags":["Query"],"summary":"Vote","operationId":"GithubComsunriselayersunriseQuery_Vote","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.QueryVoteResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/address/{address}/positions":{"get":{"tags":["Query"],"summary":"AddressPositions","operationId":"GithubComsunriselayersunriseQuery_AddressPositions","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryAddressPositionsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin30","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/pools":{"get":{"tags":["Query"],"summary":"Pools","operationId":"GithubComsunriselayersunriseQuery_Pools","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryPoolsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/pools/{id}":{"get":{"tags":["Query"],"summary":"Pool","operationId":"GithubComsunriselayersunriseQuery_Pool","parameters":[{"type":"string","format":"uint64","name":"id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryPoolResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/pools/{pool_id}/calculations/create-position":{"get":{"tags":["Query"],"summary":"Query calculation another amount of create position","operationId":"GithubComsunriselayersunriseQuery_CalculationCreatePosition","parameters":[{"type":"string","format":"uint64","name":"pool_id","in":"path","required":true},{"type":"string","name":"lower_tick","in":"query"},{"type":"string","name":"upper_tick","in":"query"},{"type":"string","name":"amount","in":"query"},{"type":"string","name":"denom","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryCalculationCreatePositionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/pools/{pool_id}/positions":{"get":{"tags":["Query"],"summary":"PoolPositions","operationId":"GithubComsunriselayersunriseQuery_PoolPositions","parameters":[{"type":"string","format":"uint64","name":"pool_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryPoolPositionsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/positions":{"get":{"tags":["Query"],"summary":"Positions","operationId":"GithubComsunriselayersunriseQuery_Positions","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryPositionsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/positions/{id}":{"get":{"tags":["Query"],"summary":"Position","operationId":"GithubComsunriselayersunriseQuery_Position","parameters":[{"type":"string","format":"uint64","name":"id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryPositionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/positions/{id}/calculations/increase-liquidity":{"get":{"tags":["Query"],"summary":"Query calculation another amount of increase liquidity","operationId":"GithubComsunriselayersunriseQuery_CalculationIncreaseLiquidity","parameters":[{"type":"string","format":"uint64","name":"id","in":"path","required":true},{"type":"string","name":"amount_in","in":"query"},{"type":"string","name":"denom_in","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryCalculationIncreaseLiquidityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/liquiditypool/v1/positions/{id}/fees":{"get":{"tags":["Query"],"summary":"Query fees by position id","operationId":"GithubComsunriselayersunriseQuery_PositionFees","parameters":[{"type":"string","format":"uint64","name":"id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.liquiditypool.v1.QueryPositionFeesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/lockup/v1/lockup-accounts/{owner}":{"get":{"tags":["Query"],"summary":"LockupAccounts queries all lockup accounts for a given owner.","operationId":"GithubComsunriselayersunriseQuery_LockupAccounts","parameters":[{"type":"string","name":"owner","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.QueryLockupAccountsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/lockup/v1/lockup-accounts/{owner}/{lockup_account_id}":{"get":{"tags":["Query"],"summary":"LockupAccount queries a lockup account for a given owner and id.","operationId":"GithubComsunriselayersunriseQuery_LockupAccount","parameters":[{"type":"string","name":"owner","in":"path","required":true},{"type":"string","format":"uint64","name":"lockup_account_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.QueryLockupAccountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/lockup/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin36","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/lockup/v1/spendable-amount/{owner}/{lockup_account_id}":{"get":{"tags":["Query"],"summary":"SpendableAmount queries the spendable amount for a given owner and id.","operationId":"GithubComsunriselayersunriseQuery_SpendableAmount","parameters":[{"type":"string","name":"owner","in":"path","required":true},{"type":"string","format":"uint64","name":"lockup_account_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lockup.v1.QuerySpendableAmountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/shareclass/v1/bonded/{address}":{"get":{"tags":["Query"],"summary":"AddressBonded","operationId":"GithubComsunriselayersunriseQuery_AddressBonded","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.QueryAddressBondedResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/shareclass/v1/calculate-bonding-amount/{validator_address}/{share}":{"get":{"tags":["Query"],"summary":"CalculateBondingAmount","operationId":"GithubComsunriselayersunriseQuery_CalculateBondingAmount","parameters":[{"type":"string","name":"validator_address","in":"path","required":true},{"type":"string","name":"share","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.QueryCalculateBondingAmountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/shareclass/v1/calculate-share/{validator_address}/{amount}":{"get":{"tags":["Query"],"summary":"CalculateShare","operationId":"GithubComsunriselayersunriseQuery_CalculateShare","parameters":[{"type":"string","name":"validator_address","in":"path","required":true},{"type":"string","name":"amount","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.QueryCalculateShareResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/shareclass/v1/claimable-rewards/{address}/{validator_address}":{"get":{"tags":["Query"],"summary":"ClaimableRewards","operationId":"GithubComsunriselayersunriseQuery_ClaimableRewards","parameters":[{"type":"string","name":"address","in":"path","required":true},{"type":"string","name":"validator_address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.QueryClaimableRewardsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/shareclass/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin45","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/shareclass/v1/unbonding/{address}":{"get":{"tags":["Query"],"summary":"AddressUnbonding","operationId":"GithubComsunriselayersunriseQuery_AddressUnbonding","parameters":[{"type":"string","description":"cosmos.base.query.v1beta1.PageRequest pagination = 2;","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.shareclass.v1.QueryAddressUnbondingResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/swap/v1/calculations/swap-exact-amount-in":{"post":{"tags":["Query"],"summary":"CalculationSwapExactAmountIn","operationId":"GithubComsunriselayersunriseQuery_CalculationSwapExactAmountIn","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountInRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountInResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/swap/v1/calculations/swap-exact-amount-out":{"post":{"tags":["Query"],"summary":"CalculationSwapExactAmountOut","operationId":"GithubComsunriselayersunriseQuery_CalculationSwapExactAmountOut","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountOutRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryCalculationSwapExactAmountOutResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/swap/v1/in-flight-packets/incoming":{"get":{"tags":["Query"],"summary":"IncomingInFlightPackets","operationId":"GithubComsunriselayersunriseQuery_IncomingInFlightPackets","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryIncomingInFlightPacketsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/swap/v1/in-flight-packets/incoming/{src_port_id}/{src_channel_id}/{sequence}":{"get":{"tags":["Query"],"summary":"IncomingInFlightPacket","operationId":"GithubComsunriselayersunriseQuery_IncomingInFlightPacket","parameters":[{"type":"string","name":"src_port_id","in":"path","required":true},{"type":"string","name":"src_channel_id","in":"path","required":true},{"type":"string","format":"uint64","name":"sequence","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryIncomingInFlightPacketResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/swap/v1/in-flight-packets/outgoing":{"get":{"tags":["Query"],"summary":"OutgoingInFlightPackets","operationId":"GithubComsunriselayersunriseQuery_OutgoingInFlightPackets","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryOutgoingInFlightPacketsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/swap/v1/in-flight-packets/outgoing/{src_port_id}/{src_channel_id}/{sequence}":{"get":{"tags":["Query"],"summary":"OutgoingInFlightPacket","operationId":"GithubComsunriselayersunriseQuery_OutgoingInFlightPacket","parameters":[{"type":"string","name":"src_port_id","in":"path","required":true},{"type":"string","name":"src_channel_id","in":"path","required":true},{"type":"string","format":"uint64","name":"sequence","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryOutgoingInFlightPacketResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/swap/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin52","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.swap.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunrise/tokenconverter/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin58","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.tokenconverter.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunriselayer/sunrise/lending/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin14","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.lending.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/sunriselayer/sunrise/rfq/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComsunriselayersunriseQuery_ParamsMixin40","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/sunrise.rfq.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"cosmos.base.v1beta1.Coin":{"description":"Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto.","type":"object","properties":{"amount":{"type":"string"},"denom":{"type":"string"}}},"cosmos.staking.v1beta1.CommissionRates":{"description":"CommissionRates defines the initial commission rates to be used for creating\na validator.","type":"object","properties":{"max_change_rate":{"description":"max_change_rate defines the maximum daily increase of the validator commission, as a fraction.","type":"string"},"max_rate":{"description":"max_rate defines the maximum commission rate which validator can ever charge, as a fraction.","type":"string"},"rate":{"description":"rate is the commission rate charged to delegators, as a fraction.","type":"string"}}},"cosmos.staking.v1beta1.Description":{"description":"Description defines a validator description.","type":"object","properties":{"details":{"description":"details define other optional details.","type":"string"},"identity":{"description":"identity defines an optional identity signature (ex. UPort or Keybase).","type":"string"},"moniker":{"description":"moniker defines a human-readable name for the validator.","type":"string"},"security_contact":{"description":"security_contact defines an optional email for security contact.","type":"string"},"website":{"description":"website defines an optional website link.","type":"string"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}},"sunrise.da.v0.Invalidity":{"type":"object","title":"Invalidity","properties":{"indices":{"type":"array","items":{"type":"string","format":"int64"}},"metadata_uri":{"type":"string"},"sender":{"type":"string"}}},"sunrise.da.v0.MsgPublishData":{"type":"object","title":"MsgPublishData","properties":{"data_source_info":{"type":"string"},"metadata_uri":{"type":"string"},"parity_shard_count":{"type":"string","format":"uint64"},"sender":{"type":"string"},"shard_double_hashes":{"type":"array","items":{"type":"string","format":"byte"}}}},"sunrise.da.v0.MsgPublishDataResponse":{"type":"object","title":"MsgPublishDataResponse"},"sunrise.da.v0.MsgRegisterProofDeputy":{"type":"object","title":"MsgRegisterProofDeputy","properties":{"deputy_address":{"type":"string"},"sender":{"type":"string"}}},"sunrise.da.v0.MsgRegisterProofDeputyResponse":{"type":"object","title":"MsgRegisterProofDeputyResponse"},"sunrise.da.v0.MsgSubmitInvalidity":{"type":"object","title":"MsgSubmitInvalidity","properties":{"indices":{"type":"array","items":{"type":"string","format":"int64"}},"metadata_uri":{"type":"string"},"sender":{"type":"string"}}},"sunrise.da.v0.MsgSubmitInvalidityResponse":{"type":"object","title":"MsgSubmitInvalidityResponse"},"sunrise.da.v0.MsgSubmitValidityProof":{"type":"object","title":"MsgSubmitValidityProof","properties":{"indices":{"type":"array","items":{"type":"string","format":"int64"}},"metadata_uri":{"type":"string"},"proofs":{"type":"array","items":{"type":"string","format":"byte"}},"sender":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.da.v0.MsgSubmitValidityProofResponse":{"type":"object","title":"MsgSubmitValidityProofResponse"},"sunrise.da.v0.MsgUnregisterProofDeputy":{"type":"object","title":"MsgUnregisterProofDeputy","properties":{"sender":{"type":"string"}}},"sunrise.da.v0.MsgUnregisterProofDeputyResponse":{"type":"object","title":"MsgUnregisterProofDeputyResponse"},"sunrise.da.v0.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless\noverwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.da.v0.Params"}}},"sunrise.da.v0.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.da.v0.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"challenge_period":{"type":"string"},"challenge_threshold":{"description":"Invalid shard threshold required to go to STATUS_CHALLENGING.","type":"string"},"max_shard_count":{"type":"string","format":"uint64","title":"max_shard_count used in sunrise-data"},"max_shard_size":{"type":"string","format":"uint64","title":"max_shard_size used in sunrise-data"},"min_shard_count":{"type":"string","format":"uint64","title":"min_shard_count used in sunrise-data"},"proof_period":{"type":"string"},"publish_data_collateral":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"publish_data_gas":{"type":"string","format":"uint64"},"rejected_removal_period":{"type":"string"},"replication_factor":{"type":"string","title":"https://docs.sunriselayer.io/learn/sunrise/data-availability#the-condition-of-data-availability"},"slash_epoch":{"type":"string","format":"uint64","title":"How many blocks of slash are done every"},"slash_fault_threshold":{"type":"string","title":"(number of challenges a validator did not submit proof / number of all challenge) is over this threshold in an epoch\nthat validator will be slashed"},"slash_fraction":{"type":"string","title":"voting power deducted during slash"},"submit_invalidity_collateral":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"verified_removal_period":{"type":"string"},"zkp_proving_key":{"type":"string","format":"byte","title":"proving key used in sunrise-data"},"zkp_verifying_key":{"type":"string","format":"byte"}}},"sunrise.da.v0.Proof":{"type":"object","title":"Proof","properties":{"indices":{"type":"array","items":{"type":"string","format":"int64"}},"metadata_uri":{"type":"string"},"proofs":{"type":"array","items":{"type":"string","format":"byte"}},"sender":{"type":"string"}}},"sunrise.da.v0.PublishedData":{"type":"object","title":"PublishedData","properties":{"challenger":{"type":"string"},"data_source_info":{"type":"string"},"metadata_uri":{"type":"string"},"parity_shard_count":{"type":"string","format":"uint64"},"publish_data_collateral":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"published_timestamp":{"type":"string","format":"date-time"},"publisher":{"type":"string"},"shard_double_hashes":{"type":"array","items":{"type":"string","format":"byte"}},"status":{"$ref":"#/definitions/sunrise.da.v0.Status"},"submit_invalidity_collateral":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"timestamp":{"type":"string","format":"date-time"},"verified_height":{"type":"string","format":"int64"}}},"sunrise.da.v0.QueryAllInvalidityResponse":{"description":"QueryAllInvalidityResponse is response type for the Query/AllInvalidity RPC\nmethod.","type":"object","properties":{"invalidity":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.da.v0.Invalidity"}}}},"sunrise.da.v0.QueryAllPublishedDataResponse":{"description":"QueryAllPublishedDataResponse is response type for the\nQuery/AllPublishedData RPC method.","type":"object","properties":{"data":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.da.v0.PublishedData"}}}},"sunrise.da.v0.QueryAllValidityProofsResponse":{"description":"QueryAllValidityProofsResponse is response type for the Query/AllValidityProofs RPC\nmethod.","type":"object","properties":{"proofs":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.da.v0.Proof"}}}},"sunrise.da.v0.QueryInvalidityResponse":{"description":"QueryInvalidityResponse is response type for the Query/Invalidity RPC\nmethod.","type":"object","properties":{"invalidity":{"$ref":"#/definitions/sunrise.da.v0.Invalidity"}}},"sunrise.da.v0.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.da.v0.Params"}}},"sunrise.da.v0.QueryProofDeputyResponse":{"description":"QueryProofDeputyResponse is response type for the\nQuery/ProofDeputy RPC method.","type":"object","properties":{"deputy_address":{"type":"string"}}},"sunrise.da.v0.QueryPublishedDataResponse":{"description":"QueryPublishedDataResponse is response type for the Query/PublishedData RPC\nmethod.","type":"object","properties":{"data":{"$ref":"#/definitions/sunrise.da.v0.PublishedData"}}},"sunrise.da.v0.QueryValidatorShardIndicesResponse":{"description":"QueryValidatorShardIndicesResponse is response type for the\nQuery/ValidatorShardIndices RPC method.","type":"object","properties":{"shard_indices":{"type":"array","items":{"type":"string","format":"uint64"}}}},"sunrise.da.v0.QueryValidityProofResponse":{"description":"QueryValidityProofResponse is response type for the Query/ValidityProof RPC\nmethod.","type":"object","properties":{"proof":{"$ref":"#/definitions/sunrise.da.v0.Proof"}}},"sunrise.da.v0.QueryZkpProofThresholdResponse":{"description":"QueryZkpProofThresholdResponse is response type for the\nQuery/ZkpProofThreshold RPC method.","type":"object","properties":{"threshold":{"type":"string","format":"uint64"}}},"sunrise.da.v0.Status":{"description":"- STATUS_UNSPECIFIED: Default value\n - STATUS_VERIFIED: Verified\n - STATUS_REJECTED: Rejected\n - STATUS_CHALLENGE_PERIOD: Verified the votes from the validators. Challenge can be received (after preBlocker)\n - STATUS_CHALLENGING: A certain number of SubmitInvalidity received. Validators can send SubmitValidityProof tx.","type":"string","title":"PublishedDataStatus","default":"STATUS_UNSPECIFIED","enum":["STATUS_UNSPECIFIED","STATUS_VERIFIED","STATUS_REJECTED","STATUS_CHALLENGE_PERIOD","STATUS_CHALLENGING"]},"sunrise.fee.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.fee.v1.Params"}}},"sunrise.fee.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.fee.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"burn_ratio":{"type":"string"},"fee_denom":{"type":"string"}}},"sunrise.fee.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.fee.v1.Params"}}},"sunrise.lending.v1.MsgBorrow":{"description":"MsgBorrow defines the MsgBorrow message.","type":"object","properties":{"borrow_denom":{"type":"string"},"collateral_pool_id":{"type":"string","format":"uint64"},"collateral_position_id":{"type":"string","format":"uint64"},"sender":{"type":"string"}}},"sunrise.lending.v1.MsgBorrowResponse":{"description":"MsgBorrowResponse defines the MsgBorrowResponse message.","type":"object"},"sunrise.lending.v1.MsgLiquidate":{"description":"MsgLiquidate defines the MsgLiquidate message.","type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"borrow_id":{"type":"string","format":"uint64"},"sender":{"type":"string"}}},"sunrise.lending.v1.MsgLiquidateResponse":{"description":"MsgLiquidateResponse defines the MsgLiquidateResponse message.","type":"object"},"sunrise.lending.v1.MsgRepay":{"description":"MsgRepay defines the MsgRepay message.","type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"borrow_id":{"type":"string","format":"uint64"},"sender":{"type":"string"}}},"sunrise.lending.v1.MsgRepayResponse":{"description":"MsgRepayResponse defines the MsgRepayResponse message.","type":"object"},"sunrise.lending.v1.MsgSupply":{"description":"MsgSupply defines the MsgSupply message.","type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"sender":{"type":"string"}}},"sunrise.lending.v1.MsgSupplyResponse":{"description":"MsgSupplyResponse defines the MsgSupplyResponse message.","type":"object"},"sunrise.lending.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.lending.v1.Params"}}},"sunrise.lending.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.lending.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"sunrise.lending.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.lending.v1.Params"}}},"sunrise.liquidityincentive.v1.Bribe":{"type":"object","title":"Bribe","properties":{"address":{"type":"string"},"amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"claimed_amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"epoch_id":{"type":"string","format":"uint64"},"id":{"type":"string","format":"uint64"},"pool_id":{"type":"string","format":"uint64"}}},"sunrise.liquidityincentive.v1.BribeAllocation":{"type":"object","title":"BribeAllocation","properties":{"address":{"type":"string"},"claimed_bribe_ids":{"type":"array","items":{"type":"string","format":"uint64"}},"epoch_id":{"type":"string","format":"uint64"},"pool_id":{"type":"string","format":"uint64"},"weight":{"type":"string"}}},"sunrise.liquidityincentive.v1.Epoch":{"type":"object","title":"Epoch","properties":{"end_block":{"type":"string","format":"int64"},"gauges":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.Gauge"}},"id":{"type":"string","format":"uint64"},"start_block":{"type":"string","format":"int64"},"start_time":{"type":"string","format":"int64"}}},"sunrise.liquidityincentive.v1.Gauge":{"type":"object","title":"Gauge","properties":{"pool_id":{"type":"string","format":"uint64"},"voting_power":{"type":"string"}}},"sunrise.liquidityincentive.v1.MsgClaimBribes":{"type":"object","title":"MsgClaimBribes","properties":{"bribe_ids":{"type":"array","items":{"type":"string","format":"uint64"}},"sender":{"type":"string"}}},"sunrise.liquidityincentive.v1.MsgClaimBribesResponse":{"type":"object","title":"MsgClaimBribesResponse","properties":{"amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"sunrise.liquidityincentive.v1.MsgRegisterBribe":{"type":"object","title":"MsgRegisterBribe","properties":{"amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"epoch_id":{"type":"string","format":"uint64"},"pool_id":{"type":"string","format":"uint64"},"sender":{"type":"string"}}},"sunrise.liquidityincentive.v1.MsgRegisterBribeResponse":{"type":"object","title":"MsgRegisterBribeResponse"},"sunrise.liquidityincentive.v1.MsgStartNewEpoch":{"type":"object","title":"MsgStartNewEpoch","properties":{"sender":{"type":"string"}}},"sunrise.liquidityincentive.v1.MsgStartNewEpochResponse":{"type":"object","title":"MsgStartNewEpochResponse"},"sunrise.liquidityincentive.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless\noverwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.liquidityincentive.v1.Params"}}},"sunrise.liquidityincentive.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.liquidityincentive.v1.MsgVoteGauge":{"type":"object","title":"MsgVoteGauge","properties":{"pool_weights":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.PoolWeight"}},"sender":{"type":"string"}}},"sunrise.liquidityincentive.v1.MsgVoteGaugeResponse":{"type":"object","title":"MsgVoteGaugeResponse"},"sunrise.liquidityincentive.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"bribe_claim_epochs":{"type":"string","format":"uint64"},"epoch_blocks":{"type":"string","format":"int64"},"staking_reward_ratio":{"type":"string"}}},"sunrise.liquidityincentive.v1.PoolWeight":{"type":"object","title":"PoolWeight","properties":{"pool_id":{"type":"string","format":"uint64"},"weight":{"type":"string"}}},"sunrise.liquidityincentive.v1.QueryBribeAllocationResponse":{"type":"object","title":"QueryBribeAllocationResponse","properties":{"bribe_allocation":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.BribeAllocation"}}},"sunrise.liquidityincentive.v1.QueryBribeAllocationsResponse":{"type":"object","title":"QueryBribeAllocationsResponse","properties":{"bribe_allocations":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.BribeAllocation"}}}},"sunrise.liquidityincentive.v1.QueryBribeResponse":{"type":"object","title":"QueryBribeResponse","properties":{"bribe":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.Bribe"}}},"sunrise.liquidityincentive.v1.QueryBribesResponse":{"type":"object","title":"QueryBribesResponse","properties":{"bribes":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.Bribe"}}}},"sunrise.liquidityincentive.v1.QueryEpochResponse":{"type":"object","title":"QueryEpochResponse","properties":{"epoch":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.Epoch"}}},"sunrise.liquidityincentive.v1.QueryEpochsResponse":{"type":"object","title":"QueryEpochsResponse","properties":{"epochs":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.Epoch"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"sunrise.liquidityincentive.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.liquidityincentive.v1.Params"}}},"sunrise.liquidityincentive.v1.QueryTallyResultResponse":{"type":"object","title":"QueryTallyResultResponse","properties":{"gauges":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.Gauge"}},"total_voting_power":{"type":"string","format":"int64"}}},"sunrise.liquidityincentive.v1.QueryVoteResponse":{"type":"object","title":"QueryVoteResponse","properties":{"vote":{"$ref":"#/definitions/sunrise.liquidityincentive.v1.Vote"}}},"sunrise.liquidityincentive.v1.QueryVotesResponse":{"type":"object","title":"QueryVotesResponse","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"votes":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.Vote"}}}},"sunrise.liquidityincentive.v1.Vote":{"type":"object","title":"Vote","properties":{"pool_weights":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquidityincentive.v1.PoolWeight"}},"sender":{"type":"string"}}},"sunrise.liquiditypool.v1.MsgClaimRewards":{"type":"object","title":"MsgClaimRewards","properties":{"position_ids":{"type":"array","items":{"type":"string","format":"uint64"}},"sender":{"type":"string"}}},"sunrise.liquiditypool.v1.MsgClaimRewardsResponse":{"type":"object","title":"MsgClaimRewardsResponse","properties":{"amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"sunrise.liquiditypool.v1.MsgCreatePool":{"type":"object","title":"MsgCreatePool","properties":{"base_offset":{"type":"string","title":"basically 0 and (-1, 0]. In the 1:1 stable pair, 0.5 would work"},"denom_base":{"type":"string"},"denom_quote":{"type":"string"},"fee_rate":{"type":"string"},"price_ratio":{"type":"string","title":"Basically 1.0001"},"sender":{"type":"string"}}},"sunrise.liquiditypool.v1.MsgCreatePoolResponse":{"type":"object","title":"MsgCreatePoolResponse","properties":{"id":{"type":"string","format":"uint64"}}},"sunrise.liquiditypool.v1.MsgCreatePosition":{"type":"object","title":"MsgCreatePosition","properties":{"lower_tick":{"type":"string","format":"int64"},"min_amount_base":{"type":"string"},"min_amount_quote":{"type":"string"},"pool_id":{"type":"string","format":"uint64"},"sender":{"type":"string"},"token_base":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"token_quote":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"upper_tick":{"type":"string","format":"int64"}}},"sunrise.liquiditypool.v1.MsgCreatePositionResponse":{"type":"object","title":"MsgCreatePositionResponse","properties":{"amount_base":{"type":"string"},"amount_quote":{"type":"string"},"id":{"type":"string","format":"uint64"},"liquidity":{"type":"string"}}},"sunrise.liquiditypool.v1.MsgDecreaseLiquidity":{"type":"object","title":"MsgDecreaseLiquidity","properties":{"id":{"type":"string","format":"uint64"},"liquidity":{"type":"string"},"sender":{"type":"string"}}},"sunrise.liquiditypool.v1.MsgDecreaseLiquidityResponse":{"type":"object","title":"MsgDecreaseLiquidityResponse","properties":{"amount_base":{"type":"string"},"amount_quote":{"type":"string"}}},"sunrise.liquiditypool.v1.MsgIncreaseLiquidity":{"type":"object","title":"MsgIncreaseLiquidity","properties":{"amount_base":{"type":"string"},"amount_quote":{"type":"string"},"id":{"type":"string","format":"uint64"},"min_amount_base":{"type":"string"},"min_amount_quote":{"type":"string"},"sender":{"type":"string"}}},"sunrise.liquiditypool.v1.MsgIncreaseLiquidityResponse":{"type":"object","title":"MsgIncreaseLiquidityResponse","properties":{"amount_base":{"type":"string"},"amount_quote":{"type":"string"},"position_id":{"type":"string","format":"uint64"}}},"sunrise.liquiditypool.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless\noverwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.liquiditypool.v1.Params"}}},"sunrise.liquiditypool.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.liquiditypool.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"create_pool_gas":{"type":"string","format":"uint64"},"withdraw_fee_rate":{"type":"string","title":"For reservation, not used yet"}}},"sunrise.liquiditypool.v1.Pool":{"type":"object","title":"Pool","properties":{"current_sqrt_price":{"type":"string"},"current_tick":{"type":"string","format":"int64"},"current_tick_liquidity":{"type":"string"},"denom_base":{"type":"string"},"denom_quote":{"type":"string"},"fee_rate":{"type":"string"},"id":{"type":"string","format":"uint64"},"tick_params":{"$ref":"#/definitions/sunrise.liquiditypool.v1.TickParams"}}},"sunrise.liquiditypool.v1.PoolInfo":{"type":"object","title":"PoolInfo","properties":{"pool":{"$ref":"#/definitions/sunrise.liquiditypool.v1.Pool"},"token_base":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"token_quote":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"sunrise.liquiditypool.v1.Position":{"type":"object","title":"Position","properties":{"address":{"type":"string"},"id":{"type":"string","format":"uint64"},"liquidity":{"type":"string"},"lower_tick":{"type":"string","format":"int64"},"pool_id":{"type":"string","format":"uint64"},"upper_tick":{"type":"string","format":"int64"}}},"sunrise.liquiditypool.v1.PositionInfo":{"type":"object","title":"PositionInfo","properties":{"position":{"$ref":"#/definitions/sunrise.liquiditypool.v1.Position"},"token_base":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"token_quote":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"sunrise.liquiditypool.v1.QueryAddressPositionsResponse":{"type":"object","title":"QueryAddressPositionsResponse","properties":{"positions":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquiditypool.v1.PositionInfo"}}}},"sunrise.liquiditypool.v1.QueryCalculationCreatePositionResponse":{"type":"object","title":"QueryCalculationCreatePositionResponse","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"sunrise.liquiditypool.v1.QueryCalculationIncreaseLiquidityResponse":{"type":"object","title":"QueryCalculationIncreaseLiquidityResponse","properties":{"token_required":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"sunrise.liquiditypool.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.liquiditypool.v1.Params"}}},"sunrise.liquiditypool.v1.QueryPoolPositionsResponse":{"type":"object","title":"QueryPoolPositionsResponse","properties":{"positions":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquiditypool.v1.PositionInfo"}}}},"sunrise.liquiditypool.v1.QueryPoolResponse":{"type":"object","title":"QueryPoolResponse","properties":{"pool":{"$ref":"#/definitions/sunrise.liquiditypool.v1.PoolInfo"}}},"sunrise.liquiditypool.v1.QueryPoolsResponse":{"type":"object","title":"QueryPoolsResponse","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"pools":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquiditypool.v1.PoolInfo"}}}},"sunrise.liquiditypool.v1.QueryPositionFeesResponse":{"type":"object","title":"QueryPositionFeesResponse","properties":{"fees":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"sunrise.liquiditypool.v1.QueryPositionResponse":{"type":"object","title":"QueryPositionResponse","properties":{"position":{"$ref":"#/definitions/sunrise.liquiditypool.v1.PositionInfo"}}},"sunrise.liquiditypool.v1.QueryPositionsResponse":{"type":"object","title":"QueryPositionsResponse","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"positions":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.liquiditypool.v1.PositionInfo"}}}},"sunrise.liquiditypool.v1.TickParams":{"type":"object","title":"TickParams\nPriceRatio^(Tick + BaseOffSet)","properties":{"base_offset":{"type":"string","title":"basically 0 and (-1, 0]. In the 1:1 stable pair, -0.5 would work"},"price_ratio":{"type":"string","title":"Basically 1.0001"}}},"sunrise.lockup.v1.LockupAccount":{"description":"LockupAccount defines the lockup account.","type":"object","properties":{"additional_locking":{"type":"string"},"address":{"type":"string"},"delegated_free":{"type":"string"},"delegated_locking":{"type":"string"},"end_time":{"type":"string","format":"int64"},"id":{"type":"string","format":"uint64"},"original_locking":{"type":"string"},"owner":{"type":"string"},"start_time":{"type":"string","format":"int64"},"unbond_entries":{"$ref":"#/definitions/sunrise.lockup.v1.UnbondingEntries"}}},"sunrise.lockup.v1.MsgClaimRewards":{"type":"object","title":"MsgClaimRewards","properties":{"lockup_account_id":{"type":"string","format":"uint64"},"owner":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.lockup.v1.MsgClaimRewardsResponse":{"type":"object","title":"MsgClaimRewardsResponse"},"sunrise.lockup.v1.MsgInitLockupAccount":{"type":"object","title":"MsgInitLockupAccount","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"end_time":{"description":"end of lockup as unix time (in seconds).","type":"string","format":"int64"},"owner":{"type":"string"},"sender":{"type":"string"},"start_time":{"description":"start of lockup as unix time (in seconds).","type":"string","format":"int64"}}},"sunrise.lockup.v1.MsgInitLockupAccountResponse":{"type":"object","title":"MsgInitLockupAccountResponse"},"sunrise.lockup.v1.MsgNonVotingDelegate":{"type":"object","title":"MsgNonVotingDelegate","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"lockup_account_id":{"type":"string","format":"uint64"},"owner":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.lockup.v1.MsgNonVotingDelegateResponse":{"type":"object","title":"MsgNonVotingDelegateResponse"},"sunrise.lockup.v1.MsgNonVotingUndelegate":{"type":"object","title":"MsgNonVotingUndelegate","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"lockup_account_id":{"type":"string","format":"uint64"},"owner":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.lockup.v1.MsgNonVotingUndelegateResponse":{"type":"object","title":"MsgNonVotingUndelegateResponse"},"sunrise.lockup.v1.MsgSend":{"type":"object","title":"MsgSend","properties":{"amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"lockup_account_id":{"type":"string","format":"uint64"},"owner":{"type":"string"},"recipient":{"type":"string"}}},"sunrise.lockup.v1.MsgSendResponse":{"type":"object","title":"MsgSendResponse"},"sunrise.lockup.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.lockup.v1.Params"}}},"sunrise.lockup.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.lockup.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"min_lockup_duration":{"type":"string"}}},"sunrise.lockup.v1.QueryLockupAccountResponse":{"description":"QueryLockupAccountResponse is response type for the Query/LockupAccount RPC method.","type":"object","properties":{"locked_amount":{"type":"string"},"lockup_account":{"$ref":"#/definitions/sunrise.lockup.v1.LockupAccount"},"unlocked_amount":{"type":"string"}}},"sunrise.lockup.v1.QueryLockupAccountsResponse":{"description":"QueryLockupAccountsResponse is response type for the Query/LockupAccounts RPC method.","type":"object","properties":{"lockup_accounts":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.lockup.v1.LockupAccount"}}}},"sunrise.lockup.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.lockup.v1.Params"}}},"sunrise.lockup.v1.QuerySpendableAmountResponse":{"description":"QuerySpendableAmountResponse is response type for the Query/SpendableAmount RPC method.","type":"object","properties":{"spendable_amount":{"type":"string"}}},"sunrise.lockup.v1.UnbondingEntries":{"type":"object","title":"UnbondingEntries list of elements","properties":{"entries":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.lockup.v1.UnbondingEntry"}}}},"sunrise.lockup.v1.UnbondingEntry":{"description":"UnbondingEntry defines an entry tracking the lockup account unbonding operation.","type":"object","properties":{"amount":{"type":"string","title":"unbond amount"},"creation_height":{"type":"string","format":"int64"},"end_time":{"type":"string","format":"int64","title":"end time of entry"},"validator_address":{"type":"string","title":"validator address"}}},"sunrise.rfq.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.rfq.v1.Params"}}},"sunrise.rfq.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.rfq.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"sunrise.rfq.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.rfq.v1.Params"}}},"sunrise.shareclass.v1.MsgClaimRewards":{"type":"object","title":"MsgClaimRewards","properties":{"sender":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.shareclass.v1.MsgClaimRewardsResponse":{"type":"object","title":"MsgClaimRewardsResponse","properties":{"amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"sunrise.shareclass.v1.MsgCreateValidator":{"type":"object","title":"MsgCreateValidator","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"commission":{"$ref":"#/definitions/cosmos.staking.v1beta1.CommissionRates"},"description":{"$ref":"#/definitions/cosmos.staking.v1beta1.Description"},"min_self_delegation":{"type":"string"},"pubkey":{"$ref":"#/definitions/google.protobuf.Any"},"validator_address":{"type":"string"}}},"sunrise.shareclass.v1.MsgCreateValidatorResponse":{"type":"object","title":"MsgCreateValidatorResponse"},"sunrise.shareclass.v1.MsgNonVotingDelegate":{"type":"object","title":"MsgNonVotingDelegate","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"sender":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.shareclass.v1.MsgNonVotingDelegateResponse":{"type":"object","title":"MsgNonVotingDelegateResponse","properties":{"rewards":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"share":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"sunrise.shareclass.v1.MsgNonVotingUndelegate":{"type":"object","title":"MsgNonVotingUndelegate","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"recipient":{"type":"string"},"sender":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.shareclass.v1.MsgNonVotingUndelegateResponse":{"type":"object","title":"MsgNonVotingUndelegateResponse","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"completion_time":{"type":"string","format":"date-time"},"rewards":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"sunrise.shareclass.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.shareclass.v1.Params"}}},"sunrise.shareclass.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.shareclass.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"create_validator_gas":{"type":"string","format":"uint64"},"reward_period":{"type":"string"}}},"sunrise.shareclass.v1.QueryAddressBondedResponse":{"type":"object","title":"QueryAddressBondedResponse","properties":{"bonds":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.shareclass.v1.ValidatorBond"}}}},"sunrise.shareclass.v1.QueryAddressUnbondingResponse":{"type":"object","title":"QueryAddressUnbondingResponse","properties":{"unbondings":{"type":"array","title":"cosmos.base.query.v1beta1.PageResponse pagination = 2;","items":{"type":"object","$ref":"#/definitions/sunrise.shareclass.v1.Unbonding"}}}},"sunrise.shareclass.v1.QueryCalculateBondingAmountResponse":{"type":"object","title":"QueryCalculateBondingAmountResponse","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"sunrise.shareclass.v1.QueryCalculateShareResponse":{"type":"object","title":"QueryCalculateShareResponse","properties":{"share":{"type":"string"}}},"sunrise.shareclass.v1.QueryClaimableRewardsResponse":{"type":"object","title":"QueryClaimableRewardsResponse","properties":{"amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"sunrise.shareclass.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.shareclass.v1.Params"}}},"sunrise.shareclass.v1.Unbonding":{"type":"object","title":"Unbonding","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"completion_time":{"type":"string","format":"date-time"},"delegator_address":{"type":"string"},"id":{"type":"string","format":"uint64"},"recipient_address":{"type":"string"},"validator_address":{"type":"string"}}},"sunrise.shareclass.v1.ValidatorBond":{"type":"object","title":"ValidatorBond","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"validator_address":{"type":"string"}}},"sunrise.swap.v1.IncomingInFlightPacket":{"type":"object","title":"IncomingInFlightPacket","properties":{"ack":{"type":"string","format":"byte"},"ack_change":{"type":"string","format":"byte"},"ack_forward":{"type":"string","format":"byte"},"data":{"type":"string","format":"byte"},"index":{"$ref":"#/definitions/sunrise.swap.v1.PacketIndex"},"interface_fee":{"type":"string"},"outgoing_index_change":{"$ref":"#/definitions/sunrise.swap.v1.PacketIndex"},"outgoing_index_forward":{"$ref":"#/definitions/sunrise.swap.v1.PacketIndex"},"result":{"$ref":"#/definitions/sunrise.swap.v1.RouteResult"},"src_channel_id":{"type":"string"},"src_port_id":{"type":"string"},"timeout_height":{"type":"string"},"timeout_timestamp":{"type":"string","format":"uint64"}}},"sunrise.swap.v1.MsgSwapExactAmountIn":{"type":"object","title":"MsgSwapExactAmountIn","properties":{"amount_in":{"type":"string"},"interface_provider":{"type":"string"},"min_amount_out":{"type":"string"},"route":{"$ref":"#/definitions/sunrise.swap.v1.Route"},"sender":{"type":"string"}}},"sunrise.swap.v1.MsgSwapExactAmountInResponse":{"type":"object","title":"MsgSwapExactAmountInResponse","properties":{"amount_out":{"type":"string"},"interface_provider_fee":{"type":"string"},"result":{"$ref":"#/definitions/sunrise.swap.v1.RouteResult"}}},"sunrise.swap.v1.MsgSwapExactAmountOut":{"type":"object","title":"MsgSwapExactAmountOut","properties":{"amount_out":{"type":"string"},"interface_provider":{"type":"string"},"max_amount_in":{"type":"string"},"route":{"$ref":"#/definitions/sunrise.swap.v1.Route"},"sender":{"type":"string"}}},"sunrise.swap.v1.MsgSwapExactAmountOutResponse":{"type":"object","title":"MsgSwapExactAmountOutResponse","properties":{"amount_out":{"type":"string"},"interface_provider_fee":{"type":"string"},"result":{"$ref":"#/definitions/sunrise.swap.v1.RouteResult"}}},"sunrise.swap.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.swap.v1.Params"}}},"sunrise.swap.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.swap.v1.OutgoingInFlightPacket":{"type":"object","title":"OutgoingInFlightPacket","properties":{"ack_waiting_index":{"$ref":"#/definitions/sunrise.swap.v1.PacketIndex"},"index":{"$ref":"#/definitions/sunrise.swap.v1.PacketIndex"},"retries_remaining":{"type":"integer","format":"int32"}}},"sunrise.swap.v1.PacketIndex":{"type":"object","title":"PacketIndex","properties":{"channel_id":{"type":"string"},"port_id":{"type":"string"},"sequence":{"type":"string","format":"uint64"}}},"sunrise.swap.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"interface_fee_rate":{"type":"string"}}},"sunrise.swap.v1.QueryCalculationSwapExactAmountInRequest":{"type":"object","title":"QueryCalculationSwapExactAmountInRequest","properties":{"amount_in":{"type":"string"},"has_interface_fee":{"type":"boolean"},"route":{"$ref":"#/definitions/sunrise.swap.v1.Route"}}},"sunrise.swap.v1.QueryCalculationSwapExactAmountInResponse":{"type":"object","title":"QueryCalculationSwapExactAmountInResponse","properties":{"amount_out":{"type":"string"},"interface_provider_fee":{"type":"string"},"result":{"$ref":"#/definitions/sunrise.swap.v1.RouteResult"}}},"sunrise.swap.v1.QueryCalculationSwapExactAmountOutRequest":{"type":"object","title":"QueryCalculationSwapExactAmountOutRequest","properties":{"amount_out":{"type":"string"},"has_interface_fee":{"type":"boolean"},"route":{"$ref":"#/definitions/sunrise.swap.v1.Route"}}},"sunrise.swap.v1.QueryCalculationSwapExactAmountOutResponse":{"type":"object","title":"QueryCalculationSwapExactAmountOutResponse","properties":{"amount_in":{"type":"string"},"interface_provider_fee":{"type":"string"},"result":{"$ref":"#/definitions/sunrise.swap.v1.RouteResult"}}},"sunrise.swap.v1.QueryIncomingInFlightPacketResponse":{"type":"object","title":"QueryIncomingInFlightPacketResponse","properties":{"packet":{"$ref":"#/definitions/sunrise.swap.v1.IncomingInFlightPacket"}}},"sunrise.swap.v1.QueryIncomingInFlightPacketsResponse":{"type":"object","title":"QueryIncomingInFlightPacketsResponse","properties":{"packets":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.swap.v1.IncomingInFlightPacket"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"sunrise.swap.v1.QueryOutgoingInFlightPacketResponse":{"type":"object","title":"QueryOutgoingInFlightPacketResponse","properties":{"packet":{"$ref":"#/definitions/sunrise.swap.v1.OutgoingInFlightPacket"}}},"sunrise.swap.v1.QueryOutgoingInFlightPacketsResponse":{"type":"object","title":"QueryOutgoingInFlightPacketsResponse","properties":{"packets":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.swap.v1.OutgoingInFlightPacket"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"sunrise.swap.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.swap.v1.Params"}}},"sunrise.swap.v1.Route":{"type":"object","title":"Route","properties":{"denom_in":{"type":"string"},"denom_out":{"type":"string"},"parallel":{"$ref":"#/definitions/sunrise.swap.v1.RouteParallel"},"pool":{"$ref":"#/definitions/sunrise.swap.v1.RoutePool"},"series":{"$ref":"#/definitions/sunrise.swap.v1.RouteSeries"}}},"sunrise.swap.v1.RouteParallel":{"type":"object","title":"RouteParallel","properties":{"routes":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.swap.v1.Route"}},"weights":{"type":"array","items":{"type":"string"}}}},"sunrise.swap.v1.RoutePool":{"type":"object","title":"RoutePool","properties":{"pool_id":{"type":"string","format":"uint64"}}},"sunrise.swap.v1.RouteResult":{"type":"object","title":"RouteResult","properties":{"parallel":{"$ref":"#/definitions/sunrise.swap.v1.RouteResultParallel"},"pool":{"$ref":"#/definitions/sunrise.swap.v1.RouteResultPool"},"series":{"$ref":"#/definitions/sunrise.swap.v1.RouteResultSeries"},"token_in":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"token_out":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"sunrise.swap.v1.RouteResultParallel":{"type":"object","title":"RouteResultParallel","properties":{"route_results":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.swap.v1.RouteResult"}}}},"sunrise.swap.v1.RouteResultPool":{"type":"object","title":"RouteResultPool","properties":{"pool_id":{"type":"string","format":"uint64"}}},"sunrise.swap.v1.RouteResultSeries":{"type":"object","title":"RouteResultSeries","properties":{"route_results":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.swap.v1.RouteResult"}}}},"sunrise.swap.v1.RouteSeries":{"type":"object","title":"RouteSeries","properties":{"routes":{"type":"array","items":{"type":"object","$ref":"#/definitions/sunrise.swap.v1.Route"}}}},"sunrise.tokenconverter.v1.MsgConvert":{"type":"object","title":"MsgConvert","properties":{"amount":{"type":"string","title":"Amount of bond denom"},"sender":{"type":"string"}}},"sunrise.tokenconverter.v1.MsgConvertResponse":{"type":"object","title":"MsgConvertResponse"},"sunrise.tokenconverter.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/sunrise.tokenconverter.v1.Params"}}},"sunrise.tokenconverter.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"sunrise.tokenconverter.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"sunrise.tokenconverter.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/sunrise.tokenconverter.v1.Params"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}
// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sunrise/swap/v1/extension.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// SwapBeforeFeeExtension
type SwapBeforeFeeExtension struct {
	Route       Route                 `protobuf:"bytes,1,opt,name=route,proto3" json:"route"`
	MaxAmountIn cosmossdk_io_math.Int `protobuf:"bytes,2,opt,name=max_amount_in,json=maxAmountIn,proto3,customtype=cosmossdk.io/math.Int" json:"max_amount_in"`
}

func (m *SwapBeforeFeeExtension) Reset()         { *m = SwapBeforeFeeExtension{} }
func (m *SwapBeforeFeeExtension) String() string { return proto.CompactTextString(m) }
func (*SwapBeforeFeeExtension) ProtoMessage()    {}
func (*SwapBeforeFeeExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_de7177a13c9574ad, []int{0}
}
func (m *SwapBeforeFeeExtension) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SwapBeforeFeeExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SwapBeforeFeeExtension.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SwapBeforeFeeExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwapBeforeFeeExtension.Merge(m, src)
}
func (m *SwapBeforeFeeExtension) XXX_Size() int {
	return m.Size()
}
func (m *SwapBeforeFeeExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_SwapBeforeFeeExtension.DiscardUnknown(m)
}

var xxx_messageInfo_SwapBeforeFeeExtension proto.InternalMessageInfo

func (m *SwapBeforeFeeExtension) GetRoute() Route {
	if m != nil {
		return m.Route
	}
	return Route{}
}

func init() {
	proto.RegisterType((*SwapBeforeFeeExtension)(nil), "sunrise.swap.v1.SwapBeforeFeeExtension")
}

func init() { proto.RegisterFile("sunrise/swap/v1/extension.proto", fileDescriptor_de7177a13c9574ad) }

var fileDescriptor_de7177a13c9574ad = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x2e, 0xcd, 0x2b,
	0xca, 0x2c, 0x4e, 0xd5, 0x2f, 0x2e, 0x4f, 0x2c, 0xd0, 0x2f, 0x33, 0xd4, 0x4f, 0xad, 0x28, 0x49,
	0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x87, 0x2a, 0xd0,
	0x03, 0x29, 0xd0, 0x2b, 0x33, 0x94, 0x92, 0x4c, 0xce, 0x2f, 0xce, 0xcd, 0x2f, 0x8e, 0x07, 0x4b,
	0xeb, 0x43, 0x38, 0x10, 0xb5, 0x52, 0x22, 0xe9, 0xf9, 0xe9, 0xf9, 0x10, 0x71, 0x10, 0x0b, 0x2a,
	0x2a, 0x8d, 0x6e, 0x45, 0x51, 0x7e, 0x69, 0x49, 0x2a, 0x44, 0x52, 0x69, 0x2e, 0x23, 0x97, 0x58,
	0x70, 0x79, 0x62, 0x81, 0x53, 0x6a, 0x5a, 0x7e, 0x51, 0xaa, 0x5b, 0x6a, 0xaa, 0x2b, 0xcc, 0x7e,
	0x21, 0x23, 0x2e, 0x56, 0xb0, 0x4a, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x31, 0x3d, 0x34,
	0x97, 0xe8, 0x05, 0x81, 0x64, 0x9d, 0x58, 0x4e, 0xdc, 0x93, 0x67, 0x08, 0x82, 0x28, 0x15, 0xf2,
	0xe7, 0xe2, 0xcd, 0x4d, 0xac, 0x88, 0x4f, 0xcc, 0xcd, 0x2f, 0xcd, 0x2b, 0x89, 0xcf, 0xcc, 0x93,
	0x60, 0x52, 0x60, 0xd4, 0xe0, 0x74, 0xd2, 0x06, 0xa9, 0xb9, 0x75, 0x4f, 0x5e, 0x14, 0xe2, 0xdc,
	0xe2, 0x94, 0x6c, 0xbd, 0xcc, 0x7c, 0xfd, 0xdc, 0xc4, 0x92, 0x0c, 0x3d, 0xcf, 0xbc, 0x92, 0x4b,
	0x5b, 0x74, 0xb9, 0xa0, 0xfe, 0xf0, 0xcc, 0x2b, 0x09, 0xe2, 0xce, 0x4d, 0xac, 0x70, 0x04, 0x1b,
	0xe0, 0x99, 0xe7, 0xe4, 0x76, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9,
	0x31, 0x4e, 0x78, 0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x3a,
	0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0x50, 0x97, 0xe5, 0x24, 0x56,
	0xa6, 0x16, 0xc1, 0x38, 0xfa, 0x15, 0x10, 0x0f, 0x97, 0x54, 0x16, 0xa4, 0x16, 0x27, 0xb1, 0x81,
	0xbd, 0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x74, 0x71, 0xfe, 0x3a, 0x70, 0x01, 0x00, 0x00,
}

func (m *SwapBeforeFeeExtension) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwapBeforeFeeExtension) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SwapBeforeFeeExtension) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.MaxAmountIn.Size()
		i -= size
		if _, err := m.MaxAmountIn.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintExtension(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.Route.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintExtension(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintExtension(dAtA []byte, offset int, v uint64) int {
	offset -= sovExtension(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SwapBeforeFeeExtension) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Route.Size()
	n += 1 + l + sovExtension(uint64(l))
	l = m.MaxAmountIn.Size()
	n += 1 + l + sovExtension(uint64(l))
	return n
}

func sovExtension(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozExtension(x uint64) (n int) {
	return sovExtension(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SwapBeforeFeeExtension) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExtension
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwapBeforeFeeExtension: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwapBeforeFeeExtension: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Route", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthExtension
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthExtension
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Route.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAmountIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExtension
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExtension
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MaxAmountIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExtension(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthExtension
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipExtension(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowExtension
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthExtension
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupExtension
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthExtension
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthExtension        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowExtension          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupExtension = fmt.Errorf("proto: unexpected end of group")
)

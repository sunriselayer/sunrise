// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sunrise/da/v1/extension.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// BlobExtension
type BlobExtension struct {
	// ipfs:// or ar://
	MetadataUri string `protobuf:"bytes,1,opt,name=metadata_uri,json=metadataUri,proto3" json:"metadata_uri,omitempty"`
	// Max 128 peers, each max 128 characters
	ResourcePeers []string `protobuf:"bytes,2,rep,name=resource_peers,json=resourcePeers,proto3" json:"resource_peers,omitempty"`
	// Max 8 webhooks, each max 128 characters
	CommitmentWebhookUrls []string `protobuf:"bytes,3,rep,name=commitment_webhook_urls,json=commitmentWebhookUrls,proto3" json:"commitment_webhook_urls,omitempty"`
}

func (m *BlobExtension) Reset()         { *m = BlobExtension{} }
func (m *BlobExtension) String() string { return proto.CompactTextString(m) }
func (*BlobExtension) ProtoMessage()    {}
func (*BlobExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d6807958b91da2, []int{0}
}
func (m *BlobExtension) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BlobExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BlobExtension.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BlobExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobExtension.Merge(m, src)
}
func (m *BlobExtension) XXX_Size() int {
	return m.Size()
}
func (m *BlobExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobExtension.DiscardUnknown(m)
}

var xxx_messageInfo_BlobExtension proto.InternalMessageInfo

func (m *BlobExtension) GetMetadataUri() string {
	if m != nil {
		return m.MetadataUri
	}
	return ""
}

func (m *BlobExtension) GetResourcePeers() []string {
	if m != nil {
		return m.ResourcePeers
	}
	return nil
}

func (m *BlobExtension) GetCommitmentWebhookUrls() []string {
	if m != nil {
		return m.CommitmentWebhookUrls
	}
	return nil
}

func init() {
	proto.RegisterType((*BlobExtension)(nil), "sunrise.da.v1.BlobExtension")
}

func init() { proto.RegisterFile("sunrise/da/v1/extension.proto", fileDescriptor_28d6807958b91da2) }

var fileDescriptor_28d6807958b91da2 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xc1, 0x4a, 0xc3, 0x40,
	0x14, 0x45, 0x33, 0x16, 0x84, 0x8e, 0xc6, 0x45, 0x40, 0xcc, 0xc6, 0xa1, 0x0a, 0x42, 0x71, 0x91,
	0xa1, 0x08, 0x7e, 0x40, 0xd1, 0xbd, 0x14, 0x8a, 0xe0, 0x26, 0x4c, 0x92, 0x87, 0x1d, 0xcc, 0xe4,
	0x85, 0x37, 0x33, 0xb5, 0xfd, 0x0b, 0xfd, 0x2b, 0x97, 0x5d, 0xba, 0x94, 0xe4, 0x47, 0xa4, 0x35,
	0x83, 0xcb, 0x7b, 0xce, 0xdd, 0x1c, 0x7e, 0x69, 0x7d, 0x43, 0xda, 0x82, 0xac, 0x94, 0x5c, 0xcf,
	0x24, 0x6c, 0x1c, 0x34, 0x56, 0x63, 0x93, 0xb5, 0x84, 0x0e, 0x93, 0x78, 0xd0, 0x59, 0xa5, 0xb2,
	0xf5, 0xec, 0xfa, 0x93, 0xf1, 0x78, 0x5e, 0x63, 0xf1, 0x18, 0x6e, 0xc9, 0x15, 0x3f, 0x35, 0xe0,
	0x54, 0xa5, 0x9c, 0xca, 0x3d, 0xe9, 0x94, 0x4d, 0xd8, 0x74, 0xbc, 0x38, 0x09, 0x6c, 0x49, 0x3a,
	0xb9, 0xe1, 0x67, 0x04, 0x16, 0x3d, 0x95, 0x90, 0xb7, 0x00, 0x64, 0xd3, 0xa3, 0xc9, 0x68, 0x3a,
	0x5e, 0xc4, 0x81, 0x3e, 0xed, 0x61, 0x72, 0xcf, 0x2f, 0x4a, 0x34, 0x46, 0x3b, 0x03, 0x8d, 0xcb,
	0xdf, 0xa1, 0x58, 0x21, 0xbe, 0xe5, 0x9e, 0x6a, 0x9b, 0x8e, 0x0e, 0xff, 0xf3, 0x7f, 0xfd, 0xfc,
	0x67, 0x97, 0x54, 0xdb, 0xf9, 0xc3, 0x57, 0x27, 0xd8, 0xae, 0x13, 0xec, 0xa7, 0x13, 0xec, 0xa3,
	0x17, 0xd1, 0xae, 0x17, 0xd1, 0x77, 0x2f, 0xa2, 0x97, 0xdb, 0x57, 0xed, 0x56, 0xbe, 0xc8, 0x4a,
	0x34, 0x72, 0xe8, 0xa8, 0xd5, 0x16, 0x28, 0x0c, 0xb9, 0xd9, 0x57, 0xbb, 0x6d, 0x0b, 0xb6, 0x38,
	0x3e, 0xf4, 0xde, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x80, 0x81, 0xf8, 0x10, 0x01, 0x00,
	0x00,
}

func (m *BlobExtension) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BlobExtension) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BlobExtension) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CommitmentWebhookUrls) > 0 {
		for iNdEx := len(m.CommitmentWebhookUrls) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.CommitmentWebhookUrls[iNdEx])
			copy(dAtA[i:], m.CommitmentWebhookUrls[iNdEx])
			i = encodeVarintExtension(dAtA, i, uint64(len(m.CommitmentWebhookUrls[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ResourcePeers) > 0 {
		for iNdEx := len(m.ResourcePeers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ResourcePeers[iNdEx])
			copy(dAtA[i:], m.ResourcePeers[iNdEx])
			i = encodeVarintExtension(dAtA, i, uint64(len(m.ResourcePeers[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.MetadataUri) > 0 {
		i -= len(m.MetadataUri)
		copy(dAtA[i:], m.MetadataUri)
		i = encodeVarintExtension(dAtA, i, uint64(len(m.MetadataUri)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintExtension(dAtA []byte, offset int, v uint64) int {
	offset -= sovExtension(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BlobExtension) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetadataUri)
	if l > 0 {
		n += 1 + l + sovExtension(uint64(l))
	}
	if len(m.ResourcePeers) > 0 {
		for _, s := range m.ResourcePeers {
			l = len(s)
			n += 1 + l + sovExtension(uint64(l))
		}
	}
	if len(m.CommitmentWebhookUrls) > 0 {
		for _, s := range m.CommitmentWebhookUrls {
			l = len(s)
			n += 1 + l + sovExtension(uint64(l))
		}
	}
	return n
}

func sovExtension(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozExtension(x uint64) (n int) {
	return sovExtension(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BlobExtension) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExtension
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlobExtension: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlobExtension: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExtension
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExtension
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourcePeers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExtension
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExtension
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourcePeers = append(m.ResourcePeers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommitmentWebhookUrls", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExtension
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthExtension
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommitmentWebhookUrls = append(m.CommitmentWebhookUrls, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipExtension(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthExtension
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipExtension(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowExtension
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExtension
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthExtension
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupExtension
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthExtension
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthExtension        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowExtension          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupExtension = fmt.Errorf("proto: unexpected end of group")
)
